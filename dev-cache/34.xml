<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom">
    <title>fasterthanli.me</title>
    <subtitle>amos likes to tinker</subtitle>
    <link href="https://fasterthanli.me"/>
    <link rel="self" href="https://fasterthanli.me/index.xml"/>
    <id>https://fasterthanli.me/</id>
    <updated>2024-09-26T21:10:00Z</updated>
    <author>
        <name>Amos Wenger</name>
        <uri>https://fasterthanli.me</uri>
    </author>
    <category term="programming"/>
    <category term="computers"/>
    <category term="rust"/>
    <generator>told</generator>
    <icon>https://cdn.fasterthanli.me/content/img/logo-square-2~12319eaafaaf55d3.png</icon>
    <entry>
        <title>ktls now under the rustls org</title>
        <link rel="alternate" href="https://fasterthanli.me/articles/ktls-now-under-rustls-org"/>
        <id>https://fasterthanli.me/articles/ktls-now-under-rustls-org</id>
        <updated>2024-09-26T21:10:00Z</updated>
        <summary type="html">&lt;a id=&quot;what-s-a-ktls&quot; href=&quot;#what-s-a-ktls&quot; class=&quot;anchor&quot;&gt;&lt;h2&gt;What&amp;#x27;s a ktls&lt;&#x2f;h2&gt;&lt;&#x2f;a&gt;
&lt;p data-bo=&quot;151&quot;&gt;I started work on &lt;a href=&quot;https:&#x2f;&#x2f;crates.io&#x2f;crates&#x2f;ktls&quot;&gt;ktls&lt;&#x2f;a&gt; and &lt;a href=&quot;https:&#x2f;&#x2f;crates.io&#x2f;crates&#x2f;ktls-sys&quot;&gt;ktls-sys&lt;&#x2f;a&gt;,
a pair of crates exposing &lt;a href=&quot;https:&#x2f;&#x2f;www.kernel.org&#x2f;doc&#x2f;html&#x2f;latest&#x2f;networking&#x2f;tls-offload.html&quot;&gt;Kernel TLS offload&lt;&#x2f;a&gt;
to Rust, about &lt;a href=&quot;https:&#x2f;&#x2f;github.com&#x2f;rustls&#x2f;ktls&#x2f;commit&#x2f;798466d7c3e659ecdf035afac0bea2b679aea4c4&quot;&gt;two years ago&lt;&#x2f;a&gt;.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;486&quot;&gt;kTLS lets the kernel (and, in turn, any network interface that supports it) take care of encryption, framing,
etc., for the entire duration of a TLS connection... as soon as you &lt;em&gt;have&lt;&#x2f;em&gt; a TLS connection.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;690&quot;&gt;For the handshake itself (hellos, change cipher, encrypted extensions,
certificate verification, etc.), you still have to use a userland TLS
implementation.&lt;&#x2f;p&gt;





















</summary>
        <category term="rustls"/>
        <category term="ktls"/>
        <category term="rust"/></entry>
    <entry>
        <title>State of the fasterthanlime 2024</title>
        <link rel="alternate" href="https://fasterthanli.me/articles/state-of-the-fasterthanlime-2024"/>
        <id>https://fasterthanli.me/articles/state-of-the-fasterthanlime-2024</id>
        <updated>2024-08-07T07:14:05Z</updated>
        <summary type="html">&lt;p data-bo=&quot;133&quot;&gt;It&amp;#x27;s time for some personal &lt;em&gt;and&lt;&#x2f;em&gt; professional news!&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;187&quot;&gt;TL;DR: I started &lt;a href=&quot;https:&#x2f;&#x2f;sdr-podcast.com&quot;&gt;a podcast&lt;&#x2f;a&gt; with &lt;a href=&quot;https:&#x2f;&#x2f;jamesmunns.com&#x2f;contact&#x2f;&quot;&gt;James&lt;&#x2f;a&gt;,
I&amp;#x27;m stable on antidepressants, I&amp;#x27;m giving a &lt;a href=&quot;https:&#x2f;&#x2f;www.p99conf.io&#x2f;&quot;&gt;P99 CONF&lt;&#x2f;a&gt; about my &lt;a href=&quot;https:&#x2f;&#x2f;github.com&#x2f;bearcove&#x2f;fluke&quot;&gt;Rust&amp;#x2F;io_uring&amp;#x2F;HTTP work&lt;&#x2f;a&gt;,
I&amp;#x27;m trying on &amp;quot;they&amp;#x2F;them&amp;quot; as pronouns, I&amp;#x27;m open-sourcing &lt;a href=&quot;https:&#x2f;&#x2f;github.com&#x2f;bearcove&#x2f;merde_json&quot;&gt;merde_json&lt;&#x2f;a&gt;,
&lt;a href=&quot;https:&#x2f;&#x2f;github.com&#x2f;bearcove&#x2f;rubicon&quot;&gt;rubicon&lt;&#x2f;a&gt; and others, I got a divorce in 2023, I found a new business model.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;665&quot;&gt;Now that we&amp;#x27;re on the same page: let&amp;#x27;s unpack this a bit!&lt;&#x2f;p&gt;






























































































































































































































</summary>
        <category term="announcement"/>
        <category term="meta"/></entry>
    <entry>
        <title>Face cams: the missing guide</title>
        <link rel="alternate" href="https://fasterthanli.me/articles/face-cams-the-missing-guide"/>
        <id>https://fasterthanli.me/articles/face-cams-the-missing-guide</id>
        <updated>2024-03-02T18:00:00Z</updated>
        <summary type="html">&lt;p data-bo=&quot;129&quot;&gt;I try to avoid doing &amp;quot;meta&amp;quot; &amp;#x2F; &amp;quot;behind the scenes&amp;quot; stuff, because I usually feel
like it has to be &amp;quot;earned&amp;quot;. How many YouTube channels are channels about making
YouTube videos? Too many.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;316&quot;&gt;Regardless, because I&amp;#x27;ve had the opportunity to make my own mistakes now for a
few years (I started &lt;a href=&quot;https:&#x2f;&#x2f;www.youtube.com&#x2f;@fasterthanlime&quot;&gt;doing the video thing&lt;&#x2f;a&gt; in earnest in 2019), and because I&amp;#x27;ve recently made a few leaps
in quality-of-life re: shooting and editing video, I thought I&amp;#x27;d publish a few
notes, if only for reference for my future self.&lt;&#x2f;p&gt;























































































































































































































































































































































































































































































































































































































































































































































































































































































































</summary>
        <category term="meta"/>
        <category term="production"/></entry>
    <entry>
        <title>Just paying Figma $15&#x2f;month because nothing else fucking works</title>
        <link rel="alternate" href="https://fasterthanli.me/articles/just-paying-figma-15-dollars"/>
        <id>https://fasterthanli.me/articles/just-paying-figma-15-dollars</id>
        <updated>2023-10-19T16:50:00Z</updated>
        <summary type="html">&lt;p data-bo=&quot;168&quot;&gt;My family wasn&amp;#x27;t poor by any stretch of the imagination, but I was raised to
avoid spending money whenever possible.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;286&quot;&gt;I was also taught &amp;quot;it&amp;#x27;s a poor craftsman that blames their tools&amp;quot;, which
apparently means &amp;quot;take responsibility for your fuckups&amp;quot;, but, to young-me,
definitely sounded more like &amp;quot;you don&amp;#x27;t deserve nice things&amp;quot;.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;497&quot;&gt;I was also taught from an early age that I was born a sinner, incapable of doing
good by myself, and that all the earthly things were temptations, sent by the
devil to corrupt me (further I guess?) but also temporary, and that I shouldn&amp;#x27;t
attach myself.&lt;&#x2f;p&gt;
























































































































































































































































































































































</summary>
        <category term="rant"/>
        <category term="foss"/></entry>
    <entry>
        <title>Cracking Electron apps open</title>
        <link rel="alternate" href="https://fasterthanli.me/articles/cracking-electron-apps-open"/>
        <id>https://fasterthanli.me/articles/cracking-electron-apps-open</id>
        <updated>2023-07-03T16:30:00Z</updated>
        <summary type="html">&lt;p data-bo=&quot;148&quot;&gt;I use the &lt;a href=&quot;https:&#x2f;&#x2f;github.com&#x2f;jgraph&#x2f;drawio-desktop&quot;&gt;draw.io desktop app&lt;&#x2f;a&gt; to
make diagrams for my website. I run it on an actual desktop, like Windows or
macOS, but the asset pipeline that converts &lt;code&gt;.drawio&lt;&#x2f;code&gt; files, to &lt;code&gt;.pdf&lt;&#x2f;code&gt;, to
&lt;code&gt;.svg&lt;&#x2f;code&gt;, and then to &lt;code&gt;.svg&lt;&#x2f;code&gt; again (but smaller) runs on Linux.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;440&quot;&gt;So I have a Rust program somewhere that opens headless chromium, and loads just
the HTML&amp;#x2F;JS&amp;#x2F;CSS part of draw.io I need to render my diagrams, and then use
Chromium&amp;#x27;s &amp;quot;print to PDF&amp;quot; functionality to save a PDF.&lt;&#x2f;p&gt;















































































































































































































</summary>
        <category term="electron"/>
        <category term="rust"/>
        <category term="asar"/></entry>
    <entry>
        <title>The RustConf Keynote Fiasco, explained</title>
        <link rel="alternate" href="https://fasterthanli.me/articles/the-rustconf-keynote-fiasco-explained"/>
        <id>https://fasterthanli.me/articles/the-rustconf-keynote-fiasco-explained</id>
        <updated>2023-05-31T21:00:00Z</updated>
        <summary type="html">&lt;div class=&quot;disclosure paragraph-like&quot;&gt;
&lt;p data-bo=&quot;41&quot;&gt;&lt;strong&gt;Disclaimer&lt;&#x2f;strong&gt;:&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;172&quot;&gt;At some point in this article, I discuss The Rust Foundation. I have received a
$5000 grant from them in 2023 for making educational articles and videos about
Rust.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;345&quot;&gt;I have NOT signed any non-disclosure, non-disparagement, or any other sort of
agreement that would prevent me from saying exactly how I feel about their
track record.&lt;&#x2f;p&gt;

&lt;&#x2f;div&gt;&lt;div class=&quot;disclosure paragraph-like&quot;&gt;
&lt;p data-bo=&quot;41&quot;&gt;&lt;strong&gt;Disclaimer&lt;&#x2f;strong&gt;:&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;537&quot;&gt;I was part of the RustConf program committee in 2022, but not in 2023. More on
that later.&lt;&#x2f;p&gt;

&lt;&#x2f;div&gt;




































































































































































































































</summary>
        <category term="rust"/>
        <category term="governance"/></entry>
    <entry>
        <title>Rust: The wrong people are resigning</title>
        <link rel="alternate" href="https://fasterthanli.me/articles/rust-the-wrong-people-are-resigning"/>
        <id>https://fasterthanli.me/articles/rust-the-wrong-people-are-resigning</id>
        <updated>2023-05-28T17:04:00Z</updated>
        <summary type="html">&lt;p data-bo=&quot;114&quot;&gt;(Note: this was originally posted &lt;a href=&quot;https:&#x2f;&#x2f;gist.github.com&#x2f;fasterthanlime&#x2f;42da9378768aebef662dd26dddf04849&quot;&gt;as a
gist&lt;&#x2f;a&gt;)&lt;&#x2f;p&gt;

&lt;a id=&quot;reassuring-myself-about-rust&quot; href=&quot;#reassuring-myself-about-rust&quot; class=&quot;anchor&quot;&gt;&lt;h2&gt;Reassuring myself about Rust&lt;&#x2f;h2&gt;&lt;&#x2f;a&gt;
&lt;p data-bo=&quot;268&quot;&gt;Up until recently, I was part of two private online discussion spaces where a
bunch of Rust people hung out.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;378&quot;&gt;So, whenever there was drama, like when the entire mod team resigned, or when a
trademark draft got a lot of people seriously worried, or just recently when
&lt;a href=&quot;https:&#x2f;&#x2f;thephd.dev&#x2f;i-am-no-longer-speaking-at-rustconf-2023&quot;&gt;RustConf took back the keynote from
ThePHD&lt;&#x2f;a&gt; then &lt;a href=&quot;https:&#x2f;&#x2f;www.sophiajt.com&#x2f;why-i-left-rust&#x2f;&quot;&gt;Sophia
resigned over it&lt;&#x2f;a&gt; and , I had some
place to go, to assess how serious things were this time around.&lt;&#x2f;p&gt;















































</summary>
        <category term="rust"/>
        <category term="governance"/></entry>
    <entry>
        <title>Extra credit</title>
        <link rel="alternate" href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-12"/>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-12</id>
        <updated>2023-03-05T07:30:12Z</updated>
        <summary type="html">&lt;p data-bo=&quot;104&quot;&gt;We&amp;#x27;ve achieved our goals already with this series: we have a web service written
in Rust, built into a Docker image with nix, with a nice dev shell, that we can
deploy to &lt;a href=&quot;https:&#x2f;&#x2f;fly.io&quot;&gt;fly.io&lt;&#x2f;a&gt;.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;302&quot;&gt;But there&amp;#x27;s always room for improvement, and so I wanted to talk about a few
things we didn&amp;#x27;t bother doing in the previous chapters.&lt;&#x2f;p&gt;

&lt;a id=&quot;making-clash-geoip-available-in-the-dev-shell&quot; href=&quot;#making-clash-geoip-available-in-the-dev-shell&quot; class=&quot;anchor&quot;&gt;&lt;h2&gt;Making &lt;code&gt;clash-geoip&lt;&#x2f;code&gt; available in the dev shell&lt;&#x2f;h2&gt;&lt;&#x2f;a&gt;
&lt;p data-bo=&quot;488&quot;&gt;When we ran our app locally, we signed up for a MaxMindDB account, and had to
download and unpack the &amp;quot;Country&amp;quot; Geolite2 database manually.&lt;&#x2f;p&gt;


























































































































</summary>
        <category term="rust"/>
        <category term="nix"/></entry>
    <entry>
        <title>Generating a docker image with nix</title>
        <link rel="alternate" href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-11"/>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-11</id>
        <updated>2023-03-05T07:30:11Z</updated>
        <summary type="html">&lt;p data-bo=&quot;126&quot;&gt;There it is. The final installment.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;163&quot;&gt;Over the course of this series, we&amp;#x27;ve built a &lt;em&gt;very useful&lt;&#x2f;em&gt; Rust web service
that shows us colored ASCII art cats, and we&amp;#x27;ve packaged it with docker, and
deployed it to &lt;a href=&quot;https:&#x2f;&#x2f;fly.io&quot;&gt;https:&amp;#x2F;&amp;#x2F;fly.io&lt;&#x2f;a&gt;.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;351&quot;&gt;We did all that without using &lt;code&gt;nix&lt;&#x2f;code&gt; at all, and then in the last few chapters,
we&amp;#x27;ve learned to use &lt;code&gt;nix&lt;&#x2f;code&gt;, and now it&amp;#x27;s time to tell &lt;code&gt;docker build&lt;&#x2f;code&gt; goodbye,
along with this whole-ass :&lt;&#x2f;p&gt;













































































































































































































































</summary>
        <category term="nix"/>
        <category term="rust"/></entry>
    <entry>
        <title>Making a dev shell with nix flakes</title>
        <link rel="alternate" href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-10"/>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-10</id>
        <updated>2023-03-05T07:30:10Z</updated>
        <summary type="html">&lt;p data-bo=&quot;117&quot;&gt;In the previous chapter, we&amp;#x27;ve made a nix &amp;quot;dev shell&amp;quot; that contained the fly.io
command-line utility, &amp;quot;flyctl&amp;quot;.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;230&quot;&gt;That said, that&amp;#x27;s not how I want us to define a dev shell.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;290&quot;&gt;Our current solution has issues. I don&amp;#x27;t like that it has &lt;code&gt;import &amp;lt;nixpkgs&amp;gt;&lt;&#x2f;code&gt;.
Which version of &lt;code&gt;nixpkgs&lt;&#x2f;code&gt; is that? The one you&amp;#x27;re on? Who knows what that is.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;448&quot;&gt;Also, we haven&amp;#x27;t really seen a mechanism to use  files from elsewhere.&lt;&#x2f;p&gt;






















































































































































































































</summary>
        <category term="nix"/></entry>
    <entry>
        <title>Learning Nix from the bottom up</title>
        <link rel="alternate" href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-9"/>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-9</id>
        <updated>2023-03-05T07:30:09Z</updated>
        <summary type="html">&lt;p data-bo=&quot;114&quot;&gt;Remember the snapshot we made allll the way back in &lt;a href=&quot;part-1&quot;&gt;Part 1&lt;&#x2f;a&gt;? Now&amp;#x27;s the time to use it.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;211&quot;&gt;Well, make sure you&amp;#x27;ve committed and pushed all your changes, but when you&amp;#x27;re
ready, let&amp;#x27;s go back in time to before we installed anything catscii-specific in
our VM.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;379&quot;&gt;This should emulate the experience of a colleague onboarding onto the project
well enough!&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;471&quot;&gt;(I didn&amp;#x27;t actually use VirtualBox&amp;#x27;s snapshot feature for this, I actually set up
a Ubuntu 22.10 VM on another computer entirely, but the effect should be much
the same).&lt;&#x2f;p&gt;
















































































































































































































































































































</summary>
        <category term="nix"/></entry>
    <entry>
        <title>Doing geo-location and keeping analytics</title>
        <link rel="alternate" href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-8"/>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-8</id>
        <updated>2023-03-05T07:30:08Z</updated>
        <summary type="html">&lt;p data-bo=&quot;156&quot;&gt;I sold you on some additional functionality for &lt;code&gt;catscii&lt;&#x2f;code&gt; last chapter, and we
got caught up in private registry &amp;#x2F; docker shenanigans, so, now, let&amp;#x27;s resume
web development as promised.&lt;&#x2f;p&gt;

&lt;a id=&quot;adding-geolocation&quot; href=&quot;#adding-geolocation&quot; class=&quot;anchor&quot;&gt;&lt;h2&gt;Adding geolocation&lt;&#x2f;h2&gt;&lt;&#x2f;a&gt;
&lt;p data-bo=&quot;366&quot;&gt;We kinda left the &lt;code&gt;locat&lt;&#x2f;code&gt; crate stubby, it doesn&amp;#x27;t &lt;em&gt;actually&lt;&#x2f;em&gt; do any IP to
location lookups. It doesn&amp;#x27;t even have a dependency on a crate that &lt;em&gt;can&lt;&#x2f;em&gt; do
that.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;525&quot;&gt;So, let&amp;#x27;s do that. We&amp;#x27;ll use the 
crate, which can read the MaxMind DB format, like GeoIP2 and GeoLite2:&lt;&#x2f;p&gt;























































































































</summary>
        <category term="rust"/>
        <category term="webdev"/>
        <category term="sqlite"/>
        <category term="geoip"/></entry>
    <entry>
        <title>Using the Shipyard private crate registry with Docker</title>
        <link rel="alternate" href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-7"/>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-7</id>
        <updated>2023-03-05T07:30:07Z</updated>
        <summary type="html">&lt;div class=&quot;dialog bear&quot;&gt;
&lt;div class=&quot;dialog-head&quot; title=&quot;Cool bear says:&quot;&gt;
    &lt;img src=&quot;https:&#x2f;&#x2f;cdn.fasterthanli.me&#x2f;content&#x2f;img&#x2f;characters&#x2f;classic-bear-glasses~21fda37a9e307cc1.svg&quot; alt=&quot;Bear&quot; width=&quot;42&quot; height=&quot;42&quot;&gt;
&lt;&#x2f;div&gt;
&lt;div class=&quot;dialog-text markup-container&quot;&gt;
&lt;p data-bo=&quot;179&quot;&gt;Wait wait wait, so we&amp;#x27;re not talking about nix yet?&lt;&#x2f;p&gt;

&lt;&#x2f;div&gt;
&lt;&#x2f;div&gt;&lt;p data-bo=&quot;232&quot;&gt;Well, no! The service we have is pretty simple, and I want to complicate things
a bit, to show how things would work in both the Dockerfile and the nix
scenario.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;395&quot;&gt;And because I don&amp;#x27;t like contrived examples, we&amp;#x27;re going to do something
somewhat real-world: we&amp;#x27;re going to geo-locate visitors, and track how many
visits we get from each country.&lt;&#x2f;p&gt;






































































































































































































































</summary>
        <category term="rust"/>
        <category term="docker"/>
        <category term="shipyard"/></entry>
    <entry>
        <title>Deploying catscii to fly.io</title>
        <link rel="alternate" href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-6"/>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-6</id>
        <updated>2023-03-05T07:30:06Z</updated>
        <summary type="html">&lt;div class=&quot;disclosure paragraph-like&quot;&gt;
&lt;p data-bo=&quot;41&quot;&gt;&lt;strong&gt;Disclaimer&lt;&#x2f;strong&gt;:&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;153&quot;&gt;Because I used to work for fly.io, I still benefit from an employee discount
at the time of this writing: I don&amp;#x27;t have to pay for anything deployed there
for now.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;324&quot;&gt;fly.io is still &lt;a href=&quot;&#x2f;donate&quot;&gt;sponsoring me&lt;&#x2f;a&gt; for developing
&lt;a href=&quot;https:&#x2f;&#x2f;github.com&#x2f;hapsoc&#x2f;hring&quot;&gt;hring&lt;&#x2f;a&gt;, but this isn&amp;#x27;t a sponsored post. It&amp;#x27;s
just a good fit for what we&amp;#x27;re doing here, with a generous free tier.&lt;&#x2f;p&gt;

&lt;&#x2f;div&gt;&lt;p data-bo=&quot;535&quot;&gt;In the &lt;a href=&quot;part-5&quot;&gt;previous chapter&lt;&#x2f;a&gt;, we&amp;#x27;ve written a  to build the
 service inside Docker. The result is a container image that can be
pushed to production!&lt;&#x2f;p&gt;







































































































































</summary>
        <category term="rust"/>
        <category term="docker"/>
        <category term="flyio"/></entry>
    <entry>
        <title>Writing a Dockerfile for catscii</title>
        <link rel="alternate" href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-5"/>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-5</id>
        <updated>2023-03-05T07:30:05Z</updated>
        <summary type="html">&lt;p data-bo=&quot;127&quot;&gt;Now that our service is production-ready, it&amp;#x27;s time to deploy it somewhere.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;204&quot;&gt;There&amp;#x27;s a lot of ways to approach this: what we are going to do, though, is
build a docker image. Or, I should say, an &lt;a href=&quot;https:&#x2f;&#x2f;github.com&#x2f;opencontainers&#x2f;image-spec&quot;&gt;OCI
image&lt;&#x2f;a&gt;.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;383&quot;&gt;This is still a series about Nix, but again: because the best way to see the
benefits of Nix is to do it &lt;em&gt;without&lt;&#x2f;em&gt; Nix first, we&amp;#x27;ll use only Docker&amp;#x27;s tooling
to build the image.&lt;&#x2f;p&gt;

&lt;a id=&quot;installing-docker-on-ubuntu&quot; href=&quot;#installing-docker-on-ubuntu&quot; class=&quot;anchor&quot;&gt;&lt;h2&gt;Installing Docker on Ubuntu&lt;&#x2f;h2&gt;&lt;&#x2f;a&gt;












































































































































































</summary>
        <category term="rust"/>
        <category term="docker"/></entry>
    <entry>
        <title>Serving ASCII cats over HTTP</title>
        <link rel="alternate" href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-4"/>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-4</id>
        <updated>2023-03-05T07:30:04Z</updated>
        <summary type="html">&lt;p data-bo=&quot;146&quot;&gt;Our &lt;code&gt;catscii&lt;&#x2f;code&gt; program does everything we want it to do, except that it&amp;#x27;s a
command-line application rather than a web server. Let&amp;#x27;s fix that.&lt;&#x2f;p&gt;

&lt;a id=&quot;enter-axum&quot; href=&quot;#enter-axum&quot; class=&quot;anchor&quot;&gt;&lt;h2&gt;Enter &lt;code&gt;axum&lt;&#x2f;code&gt;&lt;&#x2f;h2&gt;&lt;&#x2f;a&gt;
&lt;p data-bo=&quot;306&quot;&gt;The documentation for the &lt;a href=&quot;https:&#x2f;&#x2f;crates.io&#x2f;crates&#x2f;axum&quot;&gt;axum&lt;&#x2f;a&gt; crate tells us how
to make a basic web server, and we honestly don&amp;#x27;t need much more than that.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;466&quot;&gt;So let&amp;#x27;s add axum:&lt;&#x2f;p&gt;

&lt;div class=&quot;code-block has-language-tag&quot; translate=&quot;no&quot;&gt;&lt;div class=&quot;language-tag&quot;&gt;Shell session&lt;&#x2f;div&gt;&lt;pre class=&quot;code-block-inner&quot; data-lang=&quot;shell&quot;&gt;amos@miles:~&#x2f;catscii$ cargo add axum@0.6
    Updating crates.io index
      Adding axum =0.6 to dependencies.
             Features:
             + form
             + http1
             + json
             + matched-path
             + original-uri
             + query
             + tokio
             + tower-log
             - __private_docs
             - headers
             - http2
             - macros
             - multipart
             - w
&lt;&#x2f;pre&gt;&lt;&#x2f;div&gt;


































































































































































































































































</summary>
        <category term="rust"/>
        <category term="webdev"/>
        <category term="axum"/>
        <category term="git-crypt"/></entry>
    <entry>
        <title>Printing ASCII cats to the terminal</title>
        <link rel="alternate" href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-3"/>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-3</id>
        <updated>2023-03-05T07:30:03Z</updated>
        <summary type="html">&lt;p data-bo=&quot;131&quot;&gt;Now that our development environment is all set up, let&amp;#x27;s make something useful!&lt;&#x2f;p&gt;

&lt;a id=&quot;creating-the-catscii-crate&quot; href=&quot;#creating-the-catscii-crate&quot; class=&quot;anchor&quot;&gt;&lt;h2&gt;Creating the &lt;code&gt;catscii&lt;&#x2f;code&gt; crate&lt;&#x2f;h2&gt;&lt;&#x2f;a&gt;
&lt;p data-bo=&quot;246&quot;&gt;From a VS Code window connected to our VM (as we &lt;a href=&quot;part-2&quot;&gt;just set up&lt;&#x2f;a&gt;), let&amp;#x27;s
make a new Rust project:&lt;&#x2f;p&gt;

&lt;div class=&quot;code-block has-language-tag&quot; translate=&quot;no&quot;&gt;&lt;div class=&quot;language-tag&quot;&gt;Shell session&lt;&#x2f;div&gt;&lt;pre class=&quot;code-block-inner&quot; data-lang=&quot;shell&quot;&gt;amos@miles:~$ cargo new catscii
     Created binary (application) `catscii` package
&lt;&#x2f;pre&gt;&lt;&#x2f;div&gt;&lt;p data-bo=&quot;449&quot;&gt;And open it in a new VSCode window:&lt;&#x2f;p&gt;

&lt;div class=&quot;code-block has-language-tag&quot; translate=&quot;no&quot;&gt;&lt;div class=&quot;language-tag&quot;&gt;Shell session&lt;&#x2f;div&gt;&lt;pre class=&quot;code-block-inner&quot; data-lang=&quot;shell&quot;&gt;amos@miles:~$ code catscii
&lt;&#x2f;pre&gt;&lt;&#x2f;div&gt;&lt;p data-bo=&quot;527&quot;&gt;Even though we&amp;#x27;re running this &amp;quot;code&amp;quot; command in the VM guest, VSCode set up
enough plumbing that it communicates back to the host, telling it to open
another VSCode window, connected to the same SSH remote, in the right folder.&lt;&#x2f;p&gt;













































































































































































































































</summary>
        <category term="rust"/>
        <category term="reqwest"/></entry>
    <entry>
        <title>Developing over SSH</title>
        <link rel="alternate" href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-2"/>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-2</id>
        <updated>2023-03-05T07:30:02Z</updated>
        <summary type="html">&lt;p data-bo=&quot;113&quot;&gt;With &lt;a href=&quot;part-1&quot;&gt;the previous part&lt;&#x2f;a&gt;&amp;#x27;s VM still running, let&amp;#x27;s try connecting to our
machine over SSH.&lt;&#x2f;p&gt;

&lt;a id=&quot;network-addresses-loopback-and-ip-nets&quot; href=&quot;#network-addresses-loopback-and-ip-nets&quot; class=&quot;anchor&quot;&gt;&lt;h2&gt;Network addresses, loopback and IP nets&lt;&#x2f;h2&gt;&lt;&#x2f;a&gt;
&lt;p data-bo=&quot;257&quot;&gt;Normally, to connect to a machine, you&amp;#x27;d find its IP address. On Linux, a decade
ago, you would&amp;#x27;ve used &lt;code&gt;ifconfig&lt;&#x2f;code&gt;. Nowadays you can use &lt;code&gt;ip addr&lt;&#x2f;code&gt;:&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;406&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image&#x2f;jxl&quot; srcset=&quot;https:&#x2f;&#x2f;cdn.fasterthanli.me&#x2f;content&#x2f;series&#x2f;building-a-rust-service-with-nix&#x2f;part-2&#x2f;assets&#x2f;ip-addr~91ed63cb9a392561.jxl&quot;&gt;&lt;source type=&quot;image&#x2f;avif&quot; srcset=&quot;https:&#x2f;&#x2f;cdn.fasterthanli.me&#x2f;content&#x2f;series&#x2f;building-a-rust-service-with-nix&#x2f;part-2&#x2f;assets&#x2f;ip-addr~e5c07383ef672e97.avif&quot;&gt;&lt;source type=&quot;image&#x2f;webp&quot; srcset=&quot;https:&#x2f;&#x2f;cdn.fasterthanli.me&#x2f;content&#x2f;series&#x2f;building-a-rust-service-with-nix&#x2f;part-2&#x2f;assets&#x2f;ip-addr~dfb6487be8cd875d.webp&quot;&gt;&lt;img src=&quot;https:&#x2f;&#x2f;cdn.fasterthanli.me&#x2f;content&#x2f;series&#x2f;building-a-rust-service-with-nix&#x2f;part-2&#x2f;assets&#x2f;ip-addr~91ed63cb9a392561.jxl&quot; loading=&quot;lazy&quot; width=&quot;800&quot; height=&quot;600&quot; title=&quot;The ip addr command output, run in VirtualBox&quot; alt=&quot;The ip addr command output, run in VirtualBox&quot;&gt;&lt;&#x2f;picture&gt;&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;476&quot;&gt;The loopback interface (&lt;code&gt;lo&lt;&#x2f;code&gt;) is local, so it&amp;#x27;s not useful to reach the box from
the outside: you can see it can be accessed over IPv4 at address 127.0.0.1 but
not just! What we&amp;#x27;re reading here is 127.0.0.1&amp;#x2F;8, which corresponds to the range
&lt;&#x2f;p&gt;








































































































































































































</summary>
        <category term="ssh"/>
        <category term="vscode"/></entry>
    <entry>
        <title>Setting up a local Ubuntu Server VM</title>
        <link rel="alternate" href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-1"/>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-1</id>
        <updated>2023-03-05T07:30:01Z</updated>
        <summary type="html">&lt;p data-bo=&quot;136&quot;&gt;The first step to using Nix to build Rust is to do so &lt;em&gt;without&lt;&#x2f;em&gt; Nix, so that
when we finally do, we can feel the difference.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;262&quot;&gt;There&amp;#x27;s many ways to go about this: everyone has their favorite code editor,
base Linux distribution (there&amp;#x27;s even a &lt;a href=&quot;https:&#x2f;&#x2f;nixos.org&#x2f;&quot;&gt;NixOS&lt;&#x2f;a&gt;
distribution, which I won&amp;#x27;t cover). Some folks like to develop on macOS first,
and &lt;em&gt;then&lt;&#x2f;em&gt; build for Linux.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;515&quot;&gt;Y&amp;#x27;all are all valid, but for this series, we&amp;#x27;re going to very specifically do
what I  before nix, and what I&amp;#x27;m doing now that I&amp;#x27;ve embraced my 30s
and become &amp;quot;a nix person&amp;quot;, and we&amp;#x27;ll evaluate the ups and downsides of both
approaches.&lt;&#x2f;p&gt;





















































































































</summary>
        <category term="ubuntu"/>
        <category term="virtualbox"/></entry>
    <entry>
        <title>The bottom emoji breaks rust-analyzer</title>
        <link rel="alternate" href="https://fasterthanli.me/articles/the-bottom-emoji-breaks-rust-analyzer"/>
        <id>https://fasterthanli.me/articles/the-bottom-emoji-breaks-rust-analyzer</id>
        <updated>2023-02-13T14:20:00Z</updated>
        <summary type="html">&lt;p data-bo=&quot;131&quot;&gt;Some bugs are merely fun. Others are simply delicious!&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;187&quot;&gt;Today&amp;#x27;s pick is the latter.&lt;&#x2f;p&gt;

&lt;a id=&quot;reproducing-the-issue-part-1&quot; href=&quot;#reproducing-the-issue-part-1&quot; class=&quot;anchor&quot;&gt;&lt;h2&gt;Reproducing the issue, part 1&lt;&#x2f;h2&gt;&lt;&#x2f;a&gt;
&lt;p data-bo=&quot;250&quot;&gt;(It may be tempting to skip that section, but reproducing an issue is an important
part of figuring it out, so.)&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;364&quot;&gt;I&amp;#x27;ve never used Emacs before, so let&amp;#x27;s install it. I do most of my computing
on an era-appropriate Ubuntu, today it&amp;#x27;s Ubuntu 22.10, so I just need to:&lt;&#x2f;p&gt;

&lt;div class=&quot;code-block has-language-tag&quot; translate=&quot;no&quot;&gt;&lt;div class=&quot;language-tag&quot;&gt;Shell session&lt;&#x2f;div&gt;&lt;&#x2f;div&gt;


























































































































































































































































































































































































































































</summary>
        <category term="rust"/>
        <category term="emacs"/></entry>
    <entry>
        <title>Day 18 (Advent of Code 2022)</title>
        <link rel="alternate" href="https://fasterthanli.me/series/advent-of-code-2022/part-18"/>
        <id>https://fasterthanli.me/series/advent-of-code-2022/part-18</id>
        <updated>2023-01-12T14:00:00Z</updated>
        <summary type="html">&lt;p data-bo=&quot;139&quot;&gt;This time around, we&amp;#x27;re porting a solution from C++ to Rust and seeing how it
feels, how it performs, and what we can learn about both languages by doing that.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;300&quot;&gt;See &lt;a href=&quot;part-17&quot;&gt;Day 17&lt;&#x2f;a&gt; for the rationale re: porting solutions rather than
writing my own from scratch. TL;DR is: it&amp;#x27;s better than nothing, and we can
still focus about learning Rust rather than spending entire days fighting
off-by-one errors.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;544&quot;&gt;The research for this article was done live on stream, I&amp;#x27;m not going to cover
everything in the write-up, so check it out if you want the full experience:&lt;&#x2f;p&gt;


























































































</summary>
        <category term="rust"/>
        <category term="cpp"/>
        <category term="advent-of-code"/></entry>
    <entry>
        <title>Twitch fell behind</title>
        <link rel="alternate" href="https://fasterthanli.me/articles/twitch-fell-behind"/>
        <id>https://fasterthanli.me/articles/twitch-fell-behind</id>
        <updated>2023-01-12T13:00:00Z</updated>
        <summary type="html">&lt;p data-bo=&quot;125&quot;&gt;So you want to do live streams. Are you sure? Okay. Let&amp;#x27;s talk about it.&lt;&#x2f;p&gt;

&lt;a id=&quot;let-s-talk-numbers&quot; href=&quot;#let-s-talk-numbers&quot; class=&quot;anchor&quot;&gt;&lt;h2&gt;Let&amp;#x27;s talk numbers&lt;&#x2f;h2&gt;&lt;&#x2f;a&gt;
&lt;p data-bo=&quot;222&quot;&gt;Being a &amp;quot;content creator&amp;quot; (sorry for those who hate that term) &lt;em&gt;is&lt;&#x2f;em&gt; a job, for
sure, and many people do it, successfully, full-time, they pay rent with it etc.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;383&quot;&gt;Platforms like Twitch &amp;amp; YouTube would have you think that, if you put in enough
effort, you can grow your channel from nothing to 🎉 profitable ✨ in just a few
short years.&lt;&#x2f;p&gt;



















































































































































</summary>
        <category term="meta"/>
        <category term="twitch"/>
        <category term="youtube"/></entry>
    <entry>
        <title>Day 17 (Advent of Code 2022)</title>
        <link rel="alternate" href="https://fasterthanli.me/series/advent-of-code-2022/part-17"/>
        <id>https://fasterthanli.me/series/advent-of-code-2022/part-17</id>
        <updated>2023-01-11T15:00:00Z</updated>
        <summary type="html">&lt;p data-bo=&quot;142&quot;&gt;Advent of Code gets harder and harder, and I&amp;#x27;m not getting any smarter. Or any
more free time. So, in order to close out this series anyway, I&amp;#x27;m going to try
and port other people&amp;#x27;s solutions from &amp;quot;language X&amp;quot; to Rust. That way, they
already figured out the hard stuff, and we can just focus on the Rust bits!&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;453&quot;&gt;Sounds good? Good. Let&amp;#x27;s proceed.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;488&quot;&gt;The research for this article was done live on
 and
, if you&amp;#x27;d rather watch me
go through it step by step, you can watch the VOD below:&lt;&#x2f;p&gt;


























































































































































</summary>
        <category term="rust"/>
        <category term="python"/>
        <category term="advent-of-code"/></entry>
    <entry>
        <title>Day 16 (Advent of Code 2022)</title>
        <link rel="alternate" href="https://fasterthanli.me/series/advent-of-code-2022/part-16"/>
        <id>https://fasterthanli.me/series/advent-of-code-2022/part-16</id>
        <updated>2022-12-29T15:00:00Z</updated>
        <summary type="html">&lt;p data-bo=&quot;131&quot;&gt;Let&amp;#x27;s tackle the &lt;a href=&quot;https:&#x2f;&#x2f;adventofcode.com&#x2f;2022&#x2f;day&#x2f;16&quot;&gt;day 16 puzzle&lt;&#x2f;a&gt;!&lt;&#x2f;p&gt;

&lt;a id=&quot;parsing&quot; href=&quot;#parsing&quot; class=&quot;anchor&quot;&gt;&lt;h2&gt;Parsing&lt;&#x2f;h2&gt;&lt;&#x2f;a&gt;
&lt;p data-bo=&quot;216&quot;&gt;The input looks like this:&lt;&#x2f;p&gt;

&lt;div class=&quot;code-block&quot; translate=&quot;no&quot;&gt;&lt;pre class=&quot;code-block-inner&quot; data-lang=&quot;&quot;&gt;Valve AA has flow rate=0; tunnels lead to valves DD, II, BB
Valve BB has flow rate=13; tunnels lead to valves CC, AA
Valve CC has flow rate=2; tunnels lead to valves DD, BB
Valve DD has flow rate=20; tunnels lead to valves CC, AA, EE
Valve EE has flow rate=3; tunnels lead to valves FF, DD
Valve FF has flow rate=0; tunnels lead to valves EE, GG
Valve GG has flow rate=0; tunnels lead to valves FF, HH
Valve HH has flow rate=22; tunnel leads to valve GG
Valve II has flow rate=0; tunnels lead to valves AA, JJ
Valve JJ has flow rate=21; tunnel leads to valve II
&lt;&#x2f;pre&gt;&lt;&#x2f;div&gt;


































































































































































































</summary>
        <category term="rust"/>
        <category term="advent-of-code"/></entry>
    <entry>
        <title>Day 15 (Advent of Code 2022)</title>
        <link rel="alternate" href="https://fasterthanli.me/series/advent-of-code-2022/part-15"/>
        <id>https://fasterthanli.me/series/advent-of-code-2022/part-15</id>
        <updated>2022-12-25T17:00:00Z</updated>
        <summary type="html">&lt;p data-bo=&quot;131&quot;&gt;The &lt;a href=&quot;https:&#x2f;&#x2f;adventofcode.com&#x2f;2022&#x2f;day&#x2f;15&quot;&gt;day 15 puzzle&lt;&#x2f;a&gt; falls into the &amp;quot;math
puzzle&amp;quot; territory more than &amp;quot;let&amp;#x27;s learn something new about Rust&amp;quot;, but since
several folks asked if I was going to continue... let&amp;#x27;s continue.&lt;&#x2f;p&gt;

&lt;p data-bo=&quot;355&quot;&gt;The sample input is as follows:&lt;&#x2f;p&gt;

&lt;div class=&quot;code-block&quot; translate=&quot;no&quot;&gt;&lt;pre class=&quot;code-block-inner&quot; data-lang=&quot;&quot;&gt;Sensor at x=2, y=18: closest beacon is at x=-2, y=15
Sensor at x=9, y=16: closest beacon is at x=10, y=16
Sensor at x=13, y=2: closest beacon is at x=15, y=3
Sensor at x=12, y=14: closest beacon is at x=10, y=16
Sensor at x=10, y=20: closest beacon is at x=10, y=16
Sensor at x=14, y=17: closest beacon is at x=10, y=16
Sensor at x=8, y=7: closest beacon is at x=2, y=10
Sensor at x=2, y=0: closest beacon is at x=2, y=10
Sensor at x=0, y=11: closest beacon is at x=2, y=10
Sensor at x=20, y=14: closest beacon is at x=25, y=17
Sensor at x=17, y=20: closest beacon is at x=21, y=22
Sensor at x=16, y=7: closest beacon is at x=15, y=3
Sensor at x=14, y=3: closest beacon is at x=15, y=3
Sensor at x=20, y=1: closest beacon is at x=15, y=3
&lt;&#x2f;pre&gt;&lt;&#x2f;div&gt;























































































</summary>
        <category term="rust"/>
        <category term="advent-of-code"/></entry>
</feed>