<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Lee Reamsnyder | Feed</title>
        <link>https://www.leereamsnyder.com</link>
        <description>Most recent articles</description>
        <lastBuildDate>Fri, 01 Nov 2024 03:42:20 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en-US</language>
        <copyright>Copyright 2006–2024 Lee J. Reamsnyder</copyright>
        <atom:link href="https://www.leereamsnyder.com/rss.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[Tonight We Sail On A Radio Song]]></title>
            <link>https://www.leereamsnyder.com/tonight-we-sail-on-a-radio-song</link>
            <guid>https://www.leereamsnyder.com/tonight-we-sail-on-a-radio-song</guid>
            <pubDate>Fri, 01 Nov 2024 16:00:00 GMT</pubDate>
            <description><![CDATA[Fractured thoughts on 30 years of “Wildflowers”]]></description>
            <content:encoded><![CDATA[<p>I had a plan. I was going to write a decent essay.</p>
<p>I was going to open with the most famous (<a href="https://www.youtube.com/watch?v=7fYH7CI80KE">infamous</a>?) scene in the movie <em>Garden State</em>, where Natalie Portman orders Zach Braff to pop on her headphones and listen to The Shins song “New Slang,” saying “it’ll change your life.”</p>
<p><lite-youtube videoid="Ziwr4f5eR0M">
  <a href="https://youtube.com/watch?v=Ziwr4f5eR0M" class="lty-playbtn" title="Play video">
    <span class="a11y">Play video</span>
  </a>
</lite-youtube></p>
<p>(I personally would have gone with something from <em>Chutes Too Narrow</em> but “New Slang” is fine I guess.)</p>
<p>I planned to honor the spirit of <em>Garden State</em>&#8202;—&#8202;released twenty years ago this year— by offering you my headphones and making you listen to a song that’ll change your life.</p>
<p>I was going to make you listen to this:</p>
<p><lite-youtube videoid="Kw8vBDk880k">
  <a href="https://youtube.com/watch?v=Kw8vBDk880k" class="lty-playbtn" title="Play video">
    <span class="a11y">Play video</span>
  </a>
</lite-youtube></p>
<p>That, of course, is Tom Petty’s “Wildflowers,” the opening track from his album of the same name&#8202;—&#8202;released thirty years ago today.</p>
<p>I knew I had to write <em>something</em> about <em>Wildflowers</em> (the album) to commemorate its anniversary. I’ve been thinking about it for months.</p>
<p>I had even prepared a solid thesis: listening to <em>Wildflowers</em> will change your life. However, it’ll <em>extra</em> change your life if you first listen to it when you’re a teenage dipshit. Then, roughly thirty years later, listen to it again when you’re about the same age Tom Petty was when he recorded it.</p>
<p>Even if that doesn’t change your life, exactly, I guarantee something in there hits ya different if you have enough time between listens.</p>
<p>Although you might have had some issues with this thesis, I was prepared to rebut them.</p>
<p>You were going to protest that if I was thinking about this essay well in advance, it seems implausible that I <em>literally</em> waited thirty years between listens. That’s true. I listen to <em>Wildflowers</em> all the time. You got me. But I don’t feel like I should apologize for that, and I’m not going to.</p>
<p>You were also going to point out that my suggestion to listen to an album when you’re a teenage dipshit has any number of logistical issues. For example, in all probability you aren’t a teenage dipshit right now.</p>
<p>To that, I say: thank goodness, right? (I doubt many dipshits, let alone teenage ones, are reading my website.)</p>
<p>But listening to <em>Wildflowers</em> is like planting a tree: the best time to do so was thirty years ago, but the second-best time is now.</p>
<p>Having disarmed you with that simile, I was going to zoom in and talk about a specific song that hits different when you have a few more rings on your trunk.</p>
<p>I thought <em>for sure</em> I’d crank out a couple of thousand florid words about “Wildflowers” (the song).</p>
<p>Its genesis is the stuff of songwriter legend. Without any particular lyrics in mind, Petty sat down at a recorder, started strumming, started singing, and out popped the whole dang song in one go, as if a generous goddess of craft from myth had descended from the heavens to pour heavenly inspiration on a receptive mortal.</p>
<p>Is it a love song? A kiss-off?? A eulogy??? All of the above???! I dunno! It’s absolutely maddening!! Soak in the ambiguity, let it wash over you as the waves of instrumentation ebb and flow.</p>
<p>Whenever I get a new set of speakers or headphones, I try out “Wildflowers” first. If it doesn’t sound great, I send 'em right back. They’re useless to me.</p>
<p>It’s great. It’s perfect. I’ve been listening to it for almost thirty years and I will listen to it for thirty more.</p>
<p>I will listen to it when I’m dead. You’re gonna play it at my funeral. Everyone’s gonna weep like fucking babies.</p>
<p>I was going to keep going like that. Bunch of words appreciating “Wildflowers.” That was the plan, at least.</p>
<p>Let me amend that: it was <em>a</em> plan. <em>Wildflowers</em> is a rich text; I had other options.</p>
<p>I could have written about <a href="https://www.youtube.com/watch?v=2SF1iLXSQto">“It’s Good To Be King”</a>, with its heart-swelling “Let It Be”-interpolating guitar solo (another nailed-it-first-take wonder) and somber looping piano outro. But <a href="https://www.theringer.com/2022/2/2/22913661/tom-petty-podcast-history">Rob Harvilla did that way better on the <em>60 Songs That Explain the ’90s</em> podcast</a>, tying it to the birth of his child and parenthood in a profoundly moving way.</p>
<p><lite-youtube videoid="2SF1iLXSQto">
  <a href="https://youtube.com/watch?v=2SF1iLXSQto" class="lty-playbtn" title="Play video">
    <span class="a11y">Play video</span>
  </a>
</lite-youtube></p>
<p>I also could have explored “Crawling Back To You,” with its knockout line</p>
<blockquote>
<p>I’m so tired of being tired<br>
Sure as night will follow day<br>
Most things I worry about<br>
Never happen anyway</p>
</blockquote>
<p><lite-youtube videoid="QqAEigytf7I">
  <a href="https://youtube.com/watch?v=QqAEigytf7I" class="lty-playbtn" title="Play video">
    <span class="a11y">Play video</span>
  </a>
</lite-youtube></p>
<p>In that same <em>60 Songs</em> episode, Harvilla said that line knocked him over “like a fainting goat.” The drummer on <em>Wildflowers</em>, Steve Ferrone, got that lyric as a tattoo. It’s a sentiment Petty tried to sneak onto other songs on this album (you can <a href="https://www.youtube.com/watch?v=D-g_THmIqI8">hear it verbatim on a demo version of “You Don’t Know How It Feels”</a>) and, indeed, has expressed way back in 1979 on <a href="https://www.youtube.com/watch?v=n4nPa35CZPI">“Here Comes My Girl.”</a> There’s a lifetime packed into those 20 words; <a href="https://en.wikipedia.org/wiki/For_sale:_baby_shoes,_never_worn">Hemingway could never</a>.</p>
<p>I considered writing about the bar I’m going to open someday. I’ll use “Time To Move On” as my end-of-the-night closing time song. Why else open a bar if not to rule the jukebox with an iron fist?</p>
<p><lite-youtube videoid="pDPq1QbGAAk">
  <a href="https://youtube.com/watch?v=pDPq1QbGAAk" class="lty-playbtn" title="Play video">
    <span class="a11y">Play video</span>
  </a>
</lite-youtube></p>
<p>Or I thought I could write an essay about how “Only A Broken Heart” hits way, <em>way</em> different after you’ve broken a few hearts yourself.</p>
<p><lite-youtube videoid="9-9k5hELSlw">
  <a href="https://youtube.com/watch?v=9-9k5hELSlw" class="lty-playbtn" title="Play video">
    <span class="a11y">Play video</span>
  </a>
</lite-youtube></p>
<p>Clearly overflowing with ideas, I had to narrow things down. No need to sketch out possible essays for <em>every</em> song on <em>Wildflowers</em>.</p>
<p>For instance, I definitely was <em>not</em> going to write about “You Don’t Know How It Feels,” the big radio single.</p>
<p><lite-youtube videoid="ygfA1A45tn8">
  <a href="https://youtube.com/watch?v=ygfA1A45tn8" class="lty-playbtn" title="Play video">
    <span class="a11y">Play video</span>
  </a>
</lite-youtube></p>
<p>Not because it doesn’t rule or anything. Back in my teenage dipshit days, I loved it. I still love it. Everyone loves it. It’s a big dumb fun song, driven by that irresistible brain-bore <span class="sc">BUMP BUMP CLACK</span> drum beat. It’s easy to scream along with. It’s got a line about rolling a joint&#8202;—&#8202;so naughty! And, trust me you had to be there, harmonicas were <a href="https://www.youtube.com/watch?v=U3sMjm9Eloo">having</a> a <a href="https://www.youtube.com/watch?v=ousaiByU1ko">real</a> <a href="https://www.youtube.com/watch?v=5LuH0ywYVQc">moment</a> on the radio at the time.</p>
<p>Oh, and obviously: the chorus “you don’t know how it feels to be meeeeeee” is <em>the</em> teenage dipshit ür-feeling.</p>
<p>However, I didn’t have much more to say about it beyond those 100-odd words just up there.</p>
<p>So: I was gonna write an essay praising <em>Wildflowers</em>, and I had a tasteful selection of songs that I could zero in on. I was all set.</p>
<p>However, I was <em>not</em> anticipating the email.</p>
<p>It was from a dear old friend, informing me that another dear old friend was having surgery.</p>
<p>We’ll call her Heather which isn’t her name but even if it was there’s 72 million Heathers my age so good luck Googling that.</p>
<p>In middle school, Heather was diagnosed with osteosarcoma. Bone cancer in her leg. Real “shouldn’t happen to anyone let alone a child” shit.</p>
<p>She had surgery. Bone went out. Thankfully, cancer also went out. Titanium went in. She still had her leg, but it was now adorned with a full-length scar and she couldn’t bend her knee at all.</p>
<p>Her first car in high school was a bigass Buick with a bench seat, because she could drape her leg across the entire front bench and work the pedals with her other leg.</p>
<p>She’s had a bunch of surgeries over the years to deal with the fallout or manage the pain or try and get some movement back.</p>
<p>I never told her this, but a few years back I saw a picture of her with like a regular-ass Honda Civic or something and I had to step away from the computer to rip out some happy tears because that meant she could bend her leg, at least some.</p>
<p>I’m glossing over a lot. Her story is not my story to tell. I was supposed to be writing about <em>Wildflowers</em>.</p>
<p>Heather and I used to be real tight. We spent many long nights chatting for hours over AOL Instant Messenger, which like “harmonicas on the radio” is probably a bunch of words that make zero sense if you were born after 1998. You had to be there!</p>
<p>In one of our meandering conversations, we got to talking about Tom Petty. I was in the midst of a harebrained scheme to, I am absolutely not making this up, serenade a girl I was crushing on with a Tom Petty song for Valentine’s Day. Embarrassing all around. Story for another day. The crush object was into <a href="https://www.youtube.com/watch?v=ZfS6Nl962Qg">“Walls”</a> from the <em>She’s The One</em> soundtrack, itself filled with castoffs from recording <em>Wildflowers</em>.</p>
<p>Heather revealed she was a big fan of <em>Wildflowers</em>. She listened to it a lot while recovering from her surgery. She told me she felt an especially strong connection to “You Don’t Know How It Feels.”</p>
<p>Because she was a kid with cancer. Nobody around her knew how it felt to be her.</p>
<p>I certainly didn’t, and at the time I would have called her one of my best friends.</p>
<p>That wrecked me. It certainly made my own “you don’t know how it feels to be meeeeeee” feelings look more, well, dipshitty.</p>
<p>Anyway, the email I got the other month that has completely derailed my essay: it said Heather was having surgery to amputate her leg.</p>
<p>To come to that decision… well, I sure as shit don’t know how <em>that</em> feels either.</p>
<p>I had planned to write about literally any other track on <em>Wildflowers</em> besides “You Don’t Know How It Feels.” But here I am, now, telling you that it hit really goddamn hard on the latest listen.</p>
<p>This wasn’t the plan.</p>
<p>But essays and life don’t always adhere to plans. Best to accept that sooner rather than later.</p>
<p>I suppose that’s the thesis now.</p>
<p>Even though we haven’t really spoken in years, I recently reached out to Heather to check in. I told her that I thought about her while listening to “You Don’t Know How It Feels.” I didn’t have to say more than that.</p>
<p>She told me that these days her Tom Petty vibe is more “I Won’t Back Down.”</p>
<p><lite-youtube videoid="nvlTJrNJ5lA">
  <a href="https://youtube.com/watch?v=nvlTJrNJ5lA" class="lty-playbtn" title="Play video">
    <span class="a11y">Play video</span>
  </a>
</lite-youtube></p>
<p>That’s good. I like it.</p>
<p>Even though that song isn’t even on <em>Wildflowers</em> and I can’t tie this up with a neat little bow, I know that’s just the place to leave it.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to play Hades 2 Early Access on an M-series Mac]]></title>
            <link>https://www.leereamsnyder.com/play-hades-2-early-access-mac</link>
            <guid>https://www.leereamsnyder.com/play-hades-2-early-access-mac</guid>
            <pubDate>Thu, 09 May 2024 16:00:00 GMT</pubDate>
            <description><![CDATA[A bit convoluted but not hard]]></description>
            <content:encoded><![CDATA[<aside>
<p><strong>Update 2024 October 29</strong></p>
<p>As of the mid-October patch, this roundabout process is no longer necessary: <em>Hades 2</em> runs natively on M-series Macs. I haven’t put in a gazillion hours (yet), but so far it’s working great.</p>
</aside>
<p>I would describe myself as a <em>Hades</em> player of <a href="https://www.leereamsnyder.com/hades-build-guide">moderate-to-middling</a> <a href="https://www.leereamsnyder.com/i-whupped-hades-ass">renown</a>.</p>
<p>I also have zero willpower.</p>
<p>So I of course couldn’t wait to play <em>Hades 2</em> once it <a href="https://www.polygon.com/24147392/hades-2-early-access-release-date-how-to-play">launched in Early Access</a>, work-in-progress or not. Unfortunately it’s currently only for Windows and the Steam Deck; I have a MacBook Pro.</p>
<p>Thankfully, <a href="https://www.reddit.com/r/HadesTheGame/comments/1clraug/comment/l2veewe/">with an assist from Reddit</a>, I was able to get the game running. And the emulation software that makes it all happen is free!</p>
<p>Here’s how.</p>
<h2 id="buy-the-game"><a href="https://www.leereamsnyder.com/#buy-the-game" class="header-anchor"><span>Buy the game</span></a></h2><p>On Steam, buy <em>Hades 2</em>. Doesn’t matter how or where. Just give Supergiant Games the money. I did this in the Steam Mac app.</p>
<h2 id="install-whisky"><a href="https://www.leereamsnyder.com/#install-whisky" class="header-anchor"><span>Install Whisky</span></a></h2><p>Now, install <a href="https://github.com/Whisky-App/Whisky">the Whisky application</a>.</p>
<ol>
<li>If you already have <a href="https://brew.sh">Homebrew</a>, the command is <code>brew install --cask whisky</code>. Or you can download the application from <a href="https://github.com/Whisky-App/Whisky/releases">the <strong>Releases</strong> page on GitHub</a>. As of this writing, <a href="https://github.com/Whisky-App/Whisky/releases/download/v2.3.2/Whisky.zip">here’s the download for the latest version</a>; download that and drop the Whisky application file into your <strong>Applications</strong> folder.</li>
<li>Open Whisky. It’ll prompt you to install Rosetta 2 and GPTK. Install them both.</li>
<li>Click the <strong>+</strong> button in the upper-right. You’ll see a dialog to <strong>Create a new bottle</strong>. A “bottle” here is a doohickey that lets you install and run Windows applications on your Mac. I do not understand this sorcery or the naming convention and I do not care to.</li>
<li>For the <strong>Bottle name</strong>, you can put whatever name you want; it doesn’t matter. I called mine <code>Windows 10</code>.</li>
<li>For <strong>Windows version</strong>, select <strong>Windows 10</strong>.</li>
<li>I left the <strong>Bottle path</strong> as the default.</li>
<li>Click <strong>Create</strong>. Your new bottle should appear in the sidebar. If it isn’t selected, click it.</li>
</ol>
<h2 id="install-steam-for-windows"><a href="https://www.leereamsnyder.com/#install-steam-for-windows" class="header-anchor"><span>Install Steam for Windows</span></a></h2><ol>
<li>Download the Steam for Windows installer. <a href="https://store.steampowered.com/about/">Go here</a> and click the Windows icon. As of this writing, it <a href="https://cdn.cloudflare.steamstatic.com/client/installer/SteamSetup.exe">pointed here</a>.</li>
<li>Back in Whisky, click the <strong>Open C: Drive</strong> button. A Finder window will appear. Mine was a folder called <code>drive_c</code>.</li>
<li>Move the <code>SteamSetup.exe</code> file you downloaded from your Downloads folder to the <code>drive_c</code> folder.</li>
<li>In Whisky, click <strong>Run…</strong>. This should open a dialog with that same <code>drive_c</code> folder.</li>
<li>Select that <code>SteamSetup.exe</code> file and click <strong>Open</strong>.</li>
<li>It’ll look like nothing is happening for a bit, but you should eventually see the horrid standard Windows application installer for Steam, somehow running on your Mac. Neat!</li>
<li>Smash <strong>Next</strong> until it goes away. I accepted all the defaults. As has everyone, for all time, forever. I don’t know why these install wizards exist. Anyway. In Whisky, you should see <strong>Steam</strong> appear.</li>
<li>Double-click <strong>Steam</strong>. There will be no indication that anything is chugging along and nothing will happen for like a minute. Then, Steam will appear!</li>
<li>Log in. I trust you know how to do this.</li>
</ol>
<p>Hot damn, there’s Steam!</p>
<figure>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/hades-2-ea-steam-windows-on-mac-whaa.png" loading="lazy" width="2640" height="1744" alt="A screen capture of Steam for Windows running on a Mac desktop" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/hades-2-ea-steam-windows-on-mac-whaa.png 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/hades-2-ea-steam-windows-on-mac-whaa.png 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/hades-2-ea-steam-windows-on-mac-whaa.png 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/hades-2-ea-steam-windows-on-mac-whaa.png 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/hades-2-ea-steam-windows-on-mac-whaa.png 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/hades-2-ea-steam-windows-on-mac-whaa.png 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/hades-2-ea-steam-windows-on-mac-whaa.png 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/hades-2-ea-steam-windows-on-mac-whaa.png 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/blog/hades-2-ea-steam-windows-on-mac-whaa.png 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/blog/hades-2-ea-steam-windows-on-mac-whaa.png 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/blog/hades-2-ea-steam-windows-on-mac-whaa.png 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/blog/hades-2-ea-steam-windows-on-mac-whaa.png 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2640/q/60/images/blog/hades-2-ea-steam-windows-on-mac-whaa.png 2640w" sizes="(max-width: 32em) 96vw, 30em"></p>
<figcaption>It’s Steam in a window and for Windows but not on Windows. You get it.</figcaption>
</figure>
<p>I mean, it looks identical to the Mac one other than that <span class="sc">WTF</span> “steamwebhelper” application name.</p>
<h2 id="install-hades-2"><a href="https://www.leereamsnyder.com/#install-hades-2" class="header-anchor"><span>Install Hades 2</span></a></h2><ol>
<li>In Steam, click <strong>Library</strong> &gt; <strong>Home</strong>.</li>
<li>In the sidebar, Click <strong>Hades 2</strong>, which you’ve already purchased.</li>
<li>Click <strong>Install</strong>. I went on a walk during this and at some point this process hung on me showing “99% installed” but when I forced-quit out of the app and came back it looked like it had actually completed.</li>
<li>Click <strong>Play</strong>.</li>
</ol>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/hades-2-ea-launch-screen.png" loading="lazy" width="3024" height="1964" alt="A screen capture of the launch screen for the game Hades 2" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/hades-2-ea-launch-screen.png 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/hades-2-ea-launch-screen.png 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/hades-2-ea-launch-screen.png 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/hades-2-ea-launch-screen.png 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/hades-2-ea-launch-screen.png 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/hades-2-ea-launch-screen.png 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/hades-2-ea-launch-screen.png 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/hades-2-ea-launch-screen.png 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/blog/hades-2-ea-launch-screen.png 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/blog/hades-2-ea-launch-screen.png 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/blog/hades-2-ea-launch-screen.png 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/blog/hades-2-ea-launch-screen.png 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/blog/hades-2-ea-launch-screen.png 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2880/q/60/images/blog/hades-2-ea-launch-screen.png 2880w, https://www.leereamsnyder.com/resized-n-optimized-image/w/3024/q/60/images/blog/hades-2-ea-launch-screen.png 3024w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p><em>Hell</em> yeah.</p>
<p>If you play with mouse and keyboard, you’re done.</p>
<h2 id="get-your-controller-working"><a href="https://www.leereamsnyder.com/#get-your-controller-working" class="header-anchor"><span>Get your controller working</span></a></h2><p>I use an Xbox controller, and it didn’t work at first. Let’s fix that.</p>
<ol>
<li>Quit out of Hades 2.</li>
<li>Turn on your controller. (Mine was already paired with my Mac.)</li>
<li>In Steam on the <strong>Library</strong> &gt; <strong>Home</strong> &gt; <strong>Hades 2</strong> page, you should see a box that’s says “This game should work great with your controller.” It lies. Click <strong>View controller settings</strong>.</li>
<li>Click <strong>Disable Steam Input</strong>. This is apparently some Steam helper library that <a href="https://www.reddit.com/r/macgaming/comments/15gwmgj/how_to_play_with_controller_using_gptk_whiskey/">can interfere with controllers on a Mac</a>.</li>
</ol>
<p>Now my controller worked in the game.</p>
<p>I didn’t touch any of the Whisky Bottle Configuration. All defaults.</p>
<p>I’ve been playing for a few hours now and it <em>appears</em> to work flawlessly. On my M1, I was able to crank up the graphics to the “High” setting with no drawbacks. My laptop is getting warm, but the fans haven’t kicked on. I assume later M-series processors will also work.</p>
<p>That said, <strong>don’t ask me for tech support</strong>.</p>
<p>I’m too busy playing.</p>
<p>Death to Chronos.</p>
<h2 id="to-the-lady-hating-mouth-breathers"><a href="https://www.leereamsnyder.com/#to-the-lady-hating-mouth-breathers" class="header-anchor"><span>To the lady-hating mouth-breathers</span></a></h2><p>I’m told there’s a vocal contingent of internet goobers that are big mad that <em>Hades 2</em> has&#8202;—&#8202;horror of horrors&#8202;—&#8202;a <em>female</em> protagonist.</p>
<p>If that’s you, I have prepared a statement: <strong>you can all run naked backwards through a field of dicks</strong>.</p>
<p>That is all.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[This site’s design history]]></title>
            <link>https://www.leereamsnyder.com/version-history</link>
            <guid>https://www.leereamsnyder.com/version-history</guid>
            <pubDate>Tue, 07 May 2024 16:00:00 GMT</pubDate>
            <description><![CDATA[Yes of course this means I redesigned again.]]></description>
            <content:encoded><![CDATA[<div class="intro">
<p>Today I’m pushing out the 7th major design for this site. <em>Let’s go walking down memory lane.</em></p>
</div>
<p>I’ll update this if&#8202;—&#8202;ok fine yes <em>when</em>&#8202;—&#8202;I redesign again.</p>
<p>To ongoing improvements! 🍻</p>
<h2 id="v7-2024now"><a href="https://www.leereamsnyder.com/#v7-2024now" class="header-anchor"><span>v7: 2024–[now]</span></a></h2><p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/version-history-v7-article.png" loading="lazy" width="3023" height="1718" alt="a screen capture of an article from this site from May 2024. Two beige sidebars&#8202;—&#8202;logo on the left, global navigation on the right&#8202;—&#8202;frame the article content. The article content has its own sidebar with a table of contents." srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/version-history-v7-article.png 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/version-history-v7-article.png 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/version-history-v7-article.png 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/version-history-v7-article.png 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/version-history-v7-article.png 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/version-history-v7-article.png 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/version-history-v7-article.png 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/version-history-v7-article.png 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/blog/version-history-v7-article.png 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/blog/version-history-v7-article.png 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/blog/version-history-v7-article.png 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/blog/version-history-v7-article.png 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/blog/version-history-v7-article.png 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2880/q/60/images/blog/version-history-v7-article.png 2880w, https://www.leereamsnyder.com/resized-n-optimized-image/w/3023/q/60/images/blog/version-history-v7-article.png 3023w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>The watchwords here are <em>sidebars</em> and <span class="support">v<span style="font-weight:200">a</span><span style="font-weight:700; --ss13:on;">r</span><span style="font-weight:200">i</span><span style="font-weight:400; --ss07: on;">a</span><span style="font-weight:100">b</span><span style="font-weight:650; --ss01: on;">l</span><span style="font-weight:400; --ss09: on; --ital: 1;">e</span></span> fonts.</p>
<p>The overall layout and nav bits (on really big screens) now frame the content on both sides. On medium-width screens, longer articles have a Table of Contents that follows you around and marks your current location on the page. It’s pretty similar to the <span class="sc">TOC</span> on Wikipedia’s current design, or at least it should be because I studied <a href="https://github.com/wikimedia/mediawiki-skins-Vector/blob/master/resources/skins.vector.js/tableOfContents.js">their codebase</a> haha.</p>
<p>This go around I’m using a couple of brand-new fonts. The body text and headlines are the classy and delicate <a href="https://djr.com/warbler">Warbler from David Jonathan Ross</a>. The logo and supporting bits are using <a href="https://ohnotype.co/fonts/polymath">Polymath from OH no Type</a>. (The <a href="https://ohnotype.co/blog/the-process-of-polymath">process document for Polymath</a> is particularly good if you’re a type dork.) Code and monospaced bits are <a href="https://ohnotype.co/fonts/degular">Degular Mono, also from OH no</a>. All are <a href="https://v-fonts.com">variable fonts</a>, so I get a range of weights, <a href="https://fonts.google.com/knowledge/glossary/optical_sizes">proper optical sizes</a>, and sometimes even italics in a single font file; super convenient for me, and visitors don’t have to separately download dozens of different font files.</p>
<p>I put Polymath’s range of widths and fetching character alternates to work for the new “logo” up top. If you’ve got a mouse, hover over it to bring it to life. I’m particularly fond of the “chaos” variant.</p>
<video class="lazy" width="580" height="578" muted loop playsinline controls preload="none">
  <source src="https://i.imgur.com/315KNHu.mp4" type="video/mp4" />
<p>Your browser does not support the video tag or something has gone wrong with loading the video. <a href="https://imgur.com/OzHRETF">Try it on Imgur</a></p>
</video>
<p>Home pages are hard. I always put them off, and it showed. This time around I <a href="https://www.leereamsnyder.com/">put <em>some</em> work into it</a>!</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/version-history-v7-home.png" loading="lazy" width="2172" height="1718" alt="A screen capture of the home page for this site on May 2024, showing the new motif of semi-accurate quotes about me" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/version-history-v7-home.png 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/version-history-v7-home.png 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/version-history-v7-home.png 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/version-history-v7-home.png 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/version-history-v7-home.png 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/version-history-v7-home.png 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/version-history-v7-home.png 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/version-history-v7-home.png 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/blog/version-history-v7-home.png 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/blog/version-history-v7-home.png 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2172/q/60/images/blog/version-history-v7-home.png 2172w" sizes="(max-width: 32em) 96vw, 30em"></p>
<h2 id="v6-20232024"><a href="https://www.leereamsnyder.com/#v6-20232024" class="header-anchor"><span>v6: 2023&#8202;–&#8202;2024</span></a></h2><p><a href="https://www.leereamsnyder.com/march-2023-design-update">I wrote about v6</a>.</p>
<p>Here’s how an article looked when I first put it out:</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/v6-design-blog-post.jpg" loading="lazy" width="2330" height="1706" alt="screen capture of an article page from this website from late March 2023" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/v6-design-blog-post.jpg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/v6-design-blog-post.jpg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/v6-design-blog-post.jpg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/v6-design-blog-post.jpg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/v6-design-blog-post.jpg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/v6-design-blog-post.jpg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/v6-design-blog-post.jpg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/v6-design-blog-post.jpg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/blog/v6-design-blog-post.jpg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/blog/v6-design-blog-post.jpg 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/blog/v6-design-blog-post.jpg 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2330/q/60/images/blog/v6-design-blog-post.jpg 2330w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>This is when I started worshipping at the altar of <a href="https://ohnotype.co/">OH no Type Co.</a> with <a href="https://ohnotype.co/fonts/vulf">Vulf Mono</a> for the headlines.</p>
<p>A little later, I switched out Vulf Mono for the chonkier Vulf Sans.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/version-history-v6-final-article.png" loading="lazy" width="3024" height="1660" alt="screen capture of an article page from the website from April 2024" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/version-history-v6-final-article.png 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/version-history-v6-final-article.png 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/version-history-v6-final-article.png 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/version-history-v6-final-article.png 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/version-history-v6-final-article.png 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/version-history-v6-final-article.png 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/version-history-v6-final-article.png 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/version-history-v6-final-article.png 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/blog/version-history-v6-final-article.png 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/blog/version-history-v6-final-article.png 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/blog/version-history-v6-final-article.png 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/blog/version-history-v6-final-article.png 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/blog/version-history-v6-final-article.png 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2880/q/60/images/blog/version-history-v6-final-article.png 2880w, https://www.leereamsnyder.com/resized-n-optimized-image/w/3024/q/60/images/blog/version-history-v6-final-article.png 3024w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>The body text was <a href="https://mbtype.com/fonts/heliotrope/">Heliotrope</a> by Matthew Butterick, a supremely weird flare-serif that I loved a lot. Code and monospaced bits were <a href="https://www.monolisa.dev">MonoLisa</a>.</p>
<p>Here’s the final form of the home page, which I only <em>quarter</em>-assed:</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/version-history-v6-final-homepage.png" loading="lazy" width="3024" height="1718" alt="screen capture of the home page of this site from April 2024. It has a selfie of me holding a fish and says that I’m a software developer and fishing enthusiast* (*but not really)" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/version-history-v6-final-homepage.png 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/version-history-v6-final-homepage.png 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/version-history-v6-final-homepage.png 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/version-history-v6-final-homepage.png 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/version-history-v6-final-homepage.png 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/version-history-v6-final-homepage.png 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/version-history-v6-final-homepage.png 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/version-history-v6-final-homepage.png 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/blog/version-history-v6-final-homepage.png 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/blog/version-history-v6-final-homepage.png 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/blog/version-history-v6-final-homepage.png 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/blog/version-history-v6-final-homepage.png 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/blog/version-history-v6-final-homepage.png 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2880/q/60/images/blog/version-history-v6-final-homepage.png 2880w, https://www.leereamsnyder.com/resized-n-optimized-image/w/3024/q/60/images/blog/version-history-v6-final-homepage.png 3024w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>And pour one out for the final form of the “Rob Schneider” joke on the home page:</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/version-history-v6-final-home-digression.png" loading="lazy" width="3002" height="1306" alt="screen capture of the middle of the home page of this site from April 2024. It says that my name is not pronounced like "rim cider", "ram sitar", or "Rob Schneider"" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/version-history-v6-final-home-digression.png 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/version-history-v6-final-home-digression.png 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/version-history-v6-final-home-digression.png 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/version-history-v6-final-home-digression.png 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/version-history-v6-final-home-digression.png 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/version-history-v6-final-home-digression.png 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/version-history-v6-final-home-digression.png 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/version-history-v6-final-home-digression.png 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/blog/version-history-v6-final-home-digression.png 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/blog/version-history-v6-final-home-digression.png 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/blog/version-history-v6-final-home-digression.png 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/blog/version-history-v6-final-home-digression.png 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/blog/version-history-v6-final-home-digression.png 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/3002/q/60/images/blog/version-history-v6-final-home-digression.png 3002w" sizes="(max-width: 32em) 96vw, 30em"></p>
<h2 id="v5-20212023"><a href="https://www.leereamsnyder.com/#v5-20212023" class="header-anchor"><span>v5: 2021&#8202;–&#8202;2023</span></a></h2><p>This is when I got really into dithered images and really, <em>really</em> into gigantic fuckin’ headlines.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/v5-design-home-page.jpg" loading="lazy" width="2470" height="1718" alt="a screen capture of this site’s home page from mid-March 2023" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/v5-design-home-page.jpg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/v5-design-home-page.jpg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/v5-design-home-page.jpg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/v5-design-home-page.jpg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/v5-design-home-page.jpg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/v5-design-home-page.jpg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/v5-design-home-page.jpg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/v5-design-home-page.jpg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/blog/v5-design-home-page.jpg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/blog/v5-design-home-page.jpg 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/blog/v5-design-home-page.jpg 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/blog/v5-design-home-page.jpg 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2470/q/60/images/blog/v5-design-home-page.jpg 2470w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>But how could you not have gigantic fuckin’ headlines when you’ve got <a href="https://newlyn.com/fonts/new-kansas">New Kansas</a> at your disposal? <a href="https://mbtype.com/fonts/concourse/">Matthew Butterick’s Concourse</a>&#8202;—&#8202;still love that one&#8202;—&#8202;was the body text.</p>
<p>It was built using <a href="https://kit.svelte.dev">SvelteKit</a> and that’s stuck for a while. <a href="https://github.com/leereamsnyder/lee-reamsnyder-dot-com-v5">The source code for this version of the app</a> is on GitHub if you’re curious.</p>
<h2 id="v4-20182021"><a href="https://www.leereamsnyder.com/#v4-20182021" class="header-anchor"><span>v4: 2018&#8202;–&#8202;2021</span></a></h2><p><a href="https://www.leereamsnyder.com/back-with-another-new-look">I wrote about v4</a>.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/leereamsnyder-dot-com-capture-20181010.jpg" loading="lazy" width="1000" height="744" alt="a screen capture of this site’s home page from late 2018" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/leereamsnyder-dot-com-capture-20181010.jpg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/leereamsnyder-dot-com-capture-20181010.jpg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/leereamsnyder-dot-com-capture-20181010.jpg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/leereamsnyder-dot-com-capture-20181010.jpg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/leereamsnyder-dot-com-capture-20181010.jpg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1000/q/60/images/blog/leereamsnyder-dot-com-capture-20181010.jpg 1000w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>I still kinda like that clonky “LR” logo… thing.</p>
<p>That ridiculous “Rob Schneider” joke lasted a whole lot longer than I thought it would.</p>
<p>The fonts here are <a href="https://mbtype.com/fonts/concourse/">Concourse</a> and <a href="https://mbtype.com/fonts/triplicate/">Triplicate</a>, both from Matthew Butterick.</p>
<h2 id="v3-20122018"><a href="https://www.leereamsnyder.com/#v3-20122018" class="header-anchor"><span>v3: 2012&#8202;–&#8202;2018</span></a></h2><p>I mentioned above that I always half-assed home pages, and this really shows it 🤦‍♂️.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/leereamsnyder-dot-com-capture-20180930.jpg" loading="lazy" width="1200" height="1416" alt="a screen capture of this site’s home page from roughly 2012&#8202;–&#8202;2018" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/leereamsnyder-dot-com-capture-20180930.jpg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/leereamsnyder-dot-com-capture-20180930.jpg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/leereamsnyder-dot-com-capture-20180930.jpg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/leereamsnyder-dot-com-capture-20180930.jpg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/leereamsnyder-dot-com-capture-20180930.jpg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/leereamsnyder-dot-com-capture-20180930.jpg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/leereamsnyder-dot-com-capture-20180930.jpg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1200/q/60/images/blog/leereamsnyder-dot-com-capture-20180930.jpg 1200w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>This was built using <a href="https://expressionengine.com">ExpressionEngine</a>. The icons are <a href="https://symbolicons.com">Symbolicons</a>&#8202;—&#8202;still using a lot of those, actually!</p>
<h2 id="v2-20102012"><a href="https://www.leereamsnyder.com/#v2-20102012" class="header-anchor"><span>v2: 2010&#8202;–&#8202;2012</span></a></h2><p>I had to scrap this together from some of my prototypes because I no longer have the database or a working copy of the <abbr>CMS</abbr>.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/leereamsnyder-dot-com-2010ish.jpg" loading="lazy" width="2634" height="1656" alt="a screen capture of this site’s home page from roughly 2010" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/leereamsnyder-dot-com-2010ish.jpg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/leereamsnyder-dot-com-2010ish.jpg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/leereamsnyder-dot-com-2010ish.jpg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/leereamsnyder-dot-com-2010ish.jpg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/leereamsnyder-dot-com-2010ish.jpg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/leereamsnyder-dot-com-2010ish.jpg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/leereamsnyder-dot-com-2010ish.jpg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/leereamsnyder-dot-com-2010ish.jpg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/blog/leereamsnyder-dot-com-2010ish.jpg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/blog/leereamsnyder-dot-com-2010ish.jpg 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/blog/leereamsnyder-dot-com-2010ish.jpg 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/blog/leereamsnyder-dot-com-2010ish.jpg 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2634/q/60/images/blog/leereamsnyder-dot-com-2010ish.jpg 2634w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>Lookin’ good, kid!</p>
<p>(I think I still have that shirt?)</p>
<h2 id="v1-20082010"><a href="https://www.leereamsnyder.com/#v1-20082010" class="header-anchor"><span>v1: 2008&#8202;–&#8202;2010</span></a></h2><p>This was more of a portfolio of work and school projects. I was just desperate for someone to hire me to build websites and I kinda can’t believe that worked out looking at this.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/leereamsnyder-dot-com-2008ish.png" loading="lazy" width="600" height="376" alt="a screen capture of this site’s home page from roughly 2008" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/leereamsnyder-dot-com-2008ish.png 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/leereamsnyder-dot-com-2008ish.png 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/600/q/60/images/blog/leereamsnyder-dot-com-2008ish.png 600w" sizes="(max-width: 32em) 96vw, 30em"></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[The 2024 total solar eclipse]]></title>
            <link>https://www.leereamsnyder.com/revengeance-sun-and-moon</link>
            <guid>https://www.leereamsnyder.com/revengeance-sun-and-moon</guid>
            <pubDate>Wed, 10 Apr 2024 16:00:00 GMT</pubDate>
            <description><![CDATA[Starting out small]]></description>
            <content:encoded><![CDATA[<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/heroes/revengeance-solar-eclipse.jpeg" loading="lazy" width="2560" height="1707" alt="" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/heroes/revengeance-solar-eclipse.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/heroes/revengeance-solar-eclipse.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/heroes/revengeance-solar-eclipse.jpeg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/heroes/revengeance-solar-eclipse.jpeg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/heroes/revengeance-solar-eclipse.jpeg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/heroes/revengeance-solar-eclipse.jpeg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/heroes/revengeance-solar-eclipse.jpeg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/heroes/revengeance-solar-eclipse.jpeg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/heroes/revengeance-solar-eclipse.jpeg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/heroes/revengeance-solar-eclipse.jpeg 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/heroes/revengeance-solar-eclipse.jpeg 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/heroes/revengeance-solar-eclipse.jpeg 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/heroes/revengeance-solar-eclipse.jpeg 2560w" sizes="(max-width: 32em) 96vw, 30em"></p>
<div class="intro">
<p>Welcome to <span class="ac">Revengeance</span>, a series where I seek revenge and/or vengeance on things that I feel have wronged me, whatever that means. For this first installment, we’re starting small: <em>the sun and the moon</em>.</p>
</div>
<h2 id="1994-ohio"><a href="https://www.leereamsnyder.com/#1994-ohio" class="header-anchor"><span>1994: Ohio</span></a></h2><p>In 1994, I was in middle school in Columbus, Ohio. On May 10th of that year, <a href="https://www.weather.gov/ind/1994annulareclipse">an annular eclipse</a> was passing over the midwest, so we’d get a decent partial eclipse where we were.</p>
<p>We could go outside to look at it, but only if we brought our own protective eye wear and got a parent to sign a permission slip, because technically we’d be outside of the school building during school hours.</p>
<p>As a budding surly teenager, I did not have any interest in requesting permission for anything. I stayed in math class, like a cool person.</p>
<p>My less cool friends who saw it said it was “neat.”</p>
<p>I did not think about any interactions between the sun and the moon for 23 years.</p>
<p>However, in about a month I foolishly forgot to bring sunscreen to our class’s pool day and I got the worst sunburn of my entire life. Absolutely scorched.</p>
<p>That day, I started a list of targets for eventual revenge and/or vengeance. The sun was #1.</p>
<h2 id="2017-north-carolina"><a href="https://www.leereamsnyder.com/#2017-north-carolina" class="header-anchor"><span>2017: North Carolina</span></a></h2><p>In August 2017, I was living in North Carolina and was vaguely aware of <a href="https://eclipse2017.nasa.gov">the total eclipse that would be slicing through a large chunk of the country</a>. In the center of the state, we <a href="https://eclipse2017.nasa.gov/static/img/eclipse-maps/nc_full.jpg">weren’t going to see the totality</a>, but we’d get 90-odd percent coverage, which sounded like a lot.</p>
<p>A few weeks beforehand, I bought some eclipse glasses to protect my eyes from my long-time nemesis. I also thought about bringing my camera to work that day&#8202;—&#8202;perhaps I could catch my shining nemesis <em>in flagrante delicto</em> dancing in the sky with a lower-class space rock. That was the extent of my advanced planning.</p>
<p>However, in the months leading up <a href="https://kottke.org">Jason Kottke</a> started <a href="https://kottke.org/tag/2017%20solar%20eclipse">sharing <em>lots</em> of stuff about the upcoming eclipse</a>: the <a href="https://kottke.org/17/07/how-to-safely-enjoy-the-2017-solar-eclipse-a-buyers-guide-for-normal-people">gear to buy</a>, how <a href="https://kottke.org/17/08/a-simulated-play-by-play-of-a-total-eclipse">cool the total eclipse was gonna look</a>, how fortunate we were that it’s only a day’s drive away for large swaths of the country.</p>
<p>Maybe, just <em>maybe</em>, I was missing out?</p>
<p>The day of I went to work as usual. At the peak, I stepped out into the plaza in front of our office. It was a smidge darker and shadows were a little sharper, but otherwise things looked… normal? Nothing that’d be obvious in a photograph.</p>
<p>Did I take any pictures <em>at all</em> that day? Let’s check the ol’ camera roll.</p>
<p>I took a selfie with the eclipse glasses in the office! It’s impossible to see what you’re doing with those on. It turned out great.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2017-selfie.jpeg" loading="lazy" width="300" height="400" alt="A selfie of me wearing eclipse glasses indoors. He is not looking at the camera." srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/300/q/60/images/blog/revengeance-solar-eclipse-2017-selfie.jpeg 300w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>I tried hand-holding the glasses over my camera’s lens as a makeshift solar filter, but that didn’t work <em>at all</em>. It was awkward as heck, I couldn’t see anything, it wouldn’t focus even if I could get it pointed the right direction, and my longest lens was only 80mm or so, which would give me <em>at best</em> a few hundred pixels of coverage. Of the freaking sun, the giant ball of fire in the sky. I was outmatched. I gave up.</p>
<p>Oh, but I did take lots of pictures that day! A huge branch fell off a tree into my neighbor’s yard. I have dozens of shots like this that I took for insurance purposes:</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2017-fallen-branch.jpeg" loading="lazy" width="1600" height="1200" alt="The rear-end of a Volkswagen Golf with a large tree branch&#8202;—&#8202;about 6 inches in diameter&#8202;—&#8202;leaning against it. The branch has left a large dent on the roof and shattered the rear glass." srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-2017-fallen-branch.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-2017-fallen-branch.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/revengeance-solar-eclipse-2017-fallen-branch.jpeg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/revengeance-solar-eclipse-2017-fallen-branch.jpeg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/revengeance-solar-eclipse-2017-fallen-branch.jpeg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/revengeance-solar-eclipse-2017-fallen-branch.jpeg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/revengeance-solar-eclipse-2017-fallen-branch.jpeg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/revengeance-solar-eclipse-2017-fallen-branch.jpeg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/blog/revengeance-solar-eclipse-2017-fallen-branch.jpeg 1600w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>So, all told, not a splendid day!</p>
<p>Later, I started reading <a href="https://kottke.org/17/08/my-2017-total-solar-eclipse-trip">reports</a> <a href="https://kottke.org/17/08/what-witnessing-a-total-eclipse-is-like">from</a> <a href="https://kottke.org/17/10/the-eclipse-was-not-black-but-some-other-color-that-screamed-evil">those</a> that traveled to see the totality. They sounded rapturous, awe-struck, moved to tears. <a href="https://kottke.org/17/08/the-best-photos-and-videos-of-the-2017-solar-eclipse">The pictures were unreal</a>.</p>
<p>Some coworkers and friends that traveled to Tennessee for the totality confirmed that, yes, dummy, it was the coolest thing they’d ever seen. We were far beyond this being merely “neat” here. I was <em>definitely</em> missing out.</p>
<p>But! I saw that in 2024 another total eclipse was going to cut through America. In fact, it was going to pass over a huge chunk of Ohio, my birthplace and former home.</p>
<p>It was destiny. I swore an oath. I would do everything in my power to see a total eclipse. I would get my own kick-ass pictures. I would conveniently forget that predicting the weather in Ohio in April is the meteorological equivalent of a shrug emoji.</p>
<p>To my list of targets for revenge and/or vengeance, I added the sun’s occasional dance partner.</p>
<p>I had a date with revengeance. On April 8, 2024, <em>I would have my revenge on the sun and the moon</em>.</p>
<h2 id="2024-ohio-again"><a href="https://www.leereamsnyder.com/#2024-ohio-again" class="header-anchor"><span>2024: Ohio, again</span></a></h2><p>Lodging was easy. I had family in central Ohio still.</p>
<dl>
<dt>Me</dt>
<dd>Mom, are you doing anything for the eclipse in April?</dd>
<dt>Mom</dt>
<dd>The what now?</dd>
<dt>Me</dt>
<dd class="ac">PREPARE YOURSELF I AM COMING</dd>
</dl>
<p>Proper equipment was more work.</p>
<p>I ordered a pile of eclipse viewing goggles six months in advance. No sweat. But what to do for the camera?</p>
<p>My own entirely competent collection of cameras and lenses was insufficient. At this point, I didn’t even own <em>a</em> telephoto lens, because <a href="https://www.leereamsnyder.com/photography-gear-that-hasnt-changed-my-life#sony-70300mm-f4556-ssm">ordinarily I kinda dislike ’em</a>. This would not do. Not when possible revengeance is at stake.</p>
<p>I rented a 100&#8202;–&#8202;400mm lens; that was the biggest thing left at the rental houses even months in advance. Because telephotos lenses are forever a disappointment, even 400mm looks “meh” when you’re pointing it at the sun, the giant ball of fire in the sky. So I added a 2x teleconverter to make it an 800mm lens. That costs me some light, but it’s a giant ball of fire. There’s enough light.</p>
<p>I had a compatible camera already, but it would have been “fine” when my mind was cranked to “extreme overkill.” So I also rented a 45-megapixel Nikon Z7. That’d let me crop down to a still-respectable 20 megapixels at the equivalent of 1200mm.</p>
<p>How’s my weapon of choice look?</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2024-camera-and-lens.jpeg" loading="lazy" width="1280" height="1280" alt="A top-down view of a Nikon Z7 digital camera with a 2x teleconverter and 100&#8202;–&#8202;400mm lens attached. At almost a two feet long, is big, black, and imposing." srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-2024-camera-and-lens.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-2024-camera-and-lens.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/revengeance-solar-eclipse-2024-camera-and-lens.jpeg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/revengeance-solar-eclipse-2024-camera-and-lens.jpeg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/revengeance-solar-eclipse-2024-camera-and-lens.jpeg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/revengeance-solar-eclipse-2024-camera-and-lens.jpeg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/revengeance-solar-eclipse-2024-camera-and-lens.jpeg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/revengeance-solar-eclipse-2024-camera-and-lens.jpeg 1280w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>Yeah, that’ll <a href="https://www.youtube.com/watch?v=sHLEXPoiFy4">shoot down a police helicopter</a>.</p>
<p>I decided to test it out in the backyard. Oh, look, a squirrel 100-odd feet away.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2024-distant-squirrel.jpeg" loading="lazy" width="480" height="640" alt="A wide-angle shot of my back yard. About 50 feet on a distant fence, a large red arrow points at the location of squirrel on the fence. At this magnification, the squirrel is not clearly visible" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-2024-distant-squirrel.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-2024-distant-squirrel.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/480/q/60/images/blog/revengeance-solar-eclipse-2024-distant-squirrel.jpeg 480w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>How’s she look with 1200mm of fury pointed her way?</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2024-squirrel-closeup.jpeg" loading="lazy" width="1280" height="854" alt="A close-up shot of a squirrel on a fence" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-2024-squirrel-closeup.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-2024-squirrel-closeup.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/revengeance-solar-eclipse-2024-squirrel-closeup.jpeg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/revengeance-solar-eclipse-2024-squirrel-closeup.jpeg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/revengeance-solar-eclipse-2024-squirrel-closeup.jpeg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/revengeance-solar-eclipse-2024-squirrel-closeup.jpeg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/revengeance-solar-eclipse-2024-squirrel-closeup.jpeg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/revengeance-solar-eclipse-2024-squirrel-closeup.jpeg 1280w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>Seemed promising! I guesstimated that a squirrel is a few billion times smaller than the sun, but that the sun is also a few billion times farther away than a fence.</p>
<p>To check my math, I asked ChatGPT about how many squirrels long is the sun.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2024-chatgpt-squirrel-math.png" loading="lazy" width="1578" height="718" alt="A screen capture of a chat interface with the ChatGPT large language model. I ask “About how big is the sun compared to the length of 1 squirrel?” ChatGPT responds “The diameter of the Sun is about 1.4 million kilometers (870,000 miles). In comparison, the length of a typical squirrel varies depending on its species, but let's take a common species like the Eastern gray squirrel. An adult Eastern gray squirrel typically ranges from about 38 to 52 centimeters (15 to 20 inches) in length, including its tail. Comparing the two, the diameter of the Sun is immensely larger than the length of a squirrel. The Sun's diameter is roughly 1.4 billion times larger than the length of a squirrel. So, to put it simply, the Sun is much, much bigger than a squirrel.”" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-2024-chatgpt-squirrel-math.png 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-2024-chatgpt-squirrel-math.png 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/revengeance-solar-eclipse-2024-chatgpt-squirrel-math.png 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/revengeance-solar-eclipse-2024-chatgpt-squirrel-math.png 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/revengeance-solar-eclipse-2024-chatgpt-squirrel-math.png 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/revengeance-solar-eclipse-2024-chatgpt-squirrel-math.png 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/revengeance-solar-eclipse-2024-chatgpt-squirrel-math.png 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/revengeance-solar-eclipse-2024-chatgpt-squirrel-math.png 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1578/q/60/images/blog/revengeance-solar-eclipse-2024-chatgpt-squirrel-math.png 1578w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>1.4 billion squirrels actually seems a bit… low? Let’s double check that with Google’s Gemini chatbot.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2024-google-gemini-squirrel-math.png" loading="lazy" width="1510" height="1258" alt="A screen capture of a chat interface with the Google Gemini large language model. I ask “What is the ratio of the length of a squirrel compared to the diameter of the sun.” Gemini responds with a lengthy response including some math, and concludes that the sun is 3.9 trillion times larger than 1 squirrel" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-2024-google-gemini-squirrel-math.png 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-2024-google-gemini-squirrel-math.png 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/revengeance-solar-eclipse-2024-google-gemini-squirrel-math.png 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/revengeance-solar-eclipse-2024-google-gemini-squirrel-math.png 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/revengeance-solar-eclipse-2024-google-gemini-squirrel-math.png 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/revengeance-solar-eclipse-2024-google-gemini-squirrel-math.png 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/revengeance-solar-eclipse-2024-google-gemini-squirrel-math.png 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/revengeance-solar-eclipse-2024-google-gemini-squirrel-math.png 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1510/q/60/images/blog/revengeance-solar-eclipse-2024-google-gemini-squirrel-math.png 1510w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>Four <em>trillion</em> squirrels?! That’s very different! You know, I think <a href="https://www.leereamsnyder.com/chatgpt-and-i-are-python-experts-now">my job is still safe</a>.</p>
<p>With over-hyped technology failing me, I slapped a solar filter on the lens to see for myself. Here’s about 1200mm of sun.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2024-1200mm-moon-test.png.jpeg" loading="lazy" width="1280" height="872" alt="The sun through a 1200mm lens with a solar filter. It's a gray disc with two prominent dark spots. It does not fill the image, but it takes up a respectable amount of it." srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-2024-1200mm-moon-test.png.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-2024-1200mm-moon-test.png.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/revengeance-solar-eclipse-2024-1200mm-moon-test.png.jpeg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/revengeance-solar-eclipse-2024-1200mm-moon-test.png.jpeg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/revengeance-solar-eclipse-2024-1200mm-moon-test.png.jpeg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/revengeance-solar-eclipse-2024-1200mm-moon-test.png.jpeg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/revengeance-solar-eclipse-2024-1200mm-moon-test.png.jpeg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/revengeance-solar-eclipse-2024-1200mm-moon-test.png.jpeg 1280w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>Wait, what are those tiny dark spots? Some grunge on the lens? Nope! Those are <a href="https://earthobservatory.nasa.gov/features/SolarMax/solarmax_2.php">sunspots</a>, where the sun’s temperature is slightly cooler. If I was resolving those, I’m in business.</p>
<p>About <strong>ten days out</strong>, I started checking weather reports for April 8th in Ohio. It showed “fuck you, cloudy” basically everywhere in the totality zone.</p>
<p>“You shouldn’t even check the weather this far out,” my lovely and wise wife said.</p>
<p>“You are of course correct. You are as wise as you are lovely,” I responded before finding ten more weather reports and refreshing them again. And again. And again.</p>
<p><strong>Six days out</strong>, I felt ill. Probably allergies. Pollen from plants, all of them powered by the hated sun.</p>
<p><strong>Two days</strong> beforehand, we drove up to Ohio.</p>
<p><strong>The day before</strong>, I was totally normal and chill.</p>
<p>I said this to every one of my friends and family, so it <em>must</em> be true.</p>
<p>I also said oh thank you for asking it seems like the weather is calling for clouds in the morning and clearing by evening but the important questions around when they’re clearing and if it’ll be clear enough to see the eclipse is a big unknown and where are you going to see it and do you have protective eyewear no really you shouldn’t look it’s very bad for your eyes I have some you can borrow but you <em>can</em> take them off during totality and oh don’t worry you’ll <em>know</em> when it’s totality and are you worried about traffic it seems like it could be bad but maybe it won’t be bad and isn’t it just a cool coincidence that the sun is 400 times larger than the moon but the moon is 400 times closer to us and that’s what allows a total eclipse to happen the way that it does but we only have 600 million more years before the moon has drifted too far away and and and and and and and and and and and and and and and and and and.</p>
<p>A buddy of mine was up in Cleveland that weekend. Let’s see what I was texting him about while I was preparing a taco, shall we?</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2024-helios-chat.jpeg" loading="lazy" width="1290" height="1145" alt="A screen capture of the iPhone Messages application. My first chat bubble says “I am of course being cool and chill about this but also a thought I had was that maybe I shouldn’t be eating beef because perhaps the cattle belonged to Helios the sun good and I do not want to anger him.” My friend replies, “quick, sacrifice and eat a chicken.” I respond, “I believe I have to anoint it in something called double-fat which I am interpreting as guacamole and bacon”" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-2024-helios-chat.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-2024-helios-chat.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/revengeance-solar-eclipse-2024-helios-chat.jpeg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/revengeance-solar-eclipse-2024-helios-chat.jpeg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/revengeance-solar-eclipse-2024-helios-chat.jpeg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/revengeance-solar-eclipse-2024-helios-chat.jpeg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/revengeance-solar-eclipse-2024-helios-chat.jpeg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1290/q/60/images/blog/revengeance-solar-eclipse-2024-helios-chat.jpeg 1290w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>See, I didn’t even fix a typo in there. Normal and chill.</p>
<p>I had a friend with a house in the Dayton area, well inside the totality. I called her to confirm if it’d be OK for us to come her way. The weather (according to the averaged wisdom of 15 different sources checked approximately four trillion times) might be just a little more favorable there. We had discussed this weeks earlier. After this phone call she said “Oh, you’re like <em>that</em>.”</p>
<p>Yes, <em>that</em>. Normal and chill!</p>
<p>And that is how <strong>the day of</strong> we ended up in Brookville, Ohio.</p>
<p>Folks were fretting about traffic in apocalyptic terms, but we shot straight there. Perhaps this was because I left a normal and chill five hours in advance.</p>
<p>Schools were shut down for the day. There was an official town gathering for the eclipse in the school parking lot with some food trucks, some bounce houses for kiddos, and a DJ. There were some wispy clouds but nothing that would block the sun.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2024-brookville.jpeg" loading="lazy" width="640" height="480" alt="The Brookville, OH high school parking lot on April 8. A few dozen people are gathered around a small collection of tents serving food and drink. The sky has thin clouds." srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-2024-brookville.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-2024-brookville.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/revengeance-solar-eclipse-2024-brookville.jpeg 640w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>It was, against all odds in April in Ohio, a nearly perfect spring day. I couldn’t have asked for better.</p>
<p>I bought a root beer from a local shop. The name caught my eye.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2024-lees-root-beer.jpeg" loading="lazy" width="480" height="640" alt="A close-up shot of a bottle of root beer. The label says “Lee’s Old-fashioned Root Beer”" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-2024-lees-root-beer.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-2024-lees-root-beer.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/480/q/60/images/blog/revengeance-solar-eclipse-2024-lees-root-beer.jpeg 480w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>Was this fate?!</p>
<p>I set up shop. My wife took this shot of me looking almost normal and chill about everything.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2024-brookville-gear-setup.jpeg" loading="lazy" width="478" height="553" alt="Me squatting in some grass next to an assembled and extended tripod with a Nikon Z7, a teleconverter, and a 100&#8202;–&#8202;400mm telephoto lens. I am facing the camera and smiling." srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-2024-brookville-gear-setup.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-2024-brookville-gear-setup.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/478/q/60/images/blog/revengeance-solar-eclipse-2024-brookville-gear-setup.jpeg 478w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>I even got a pretty good selfie this time.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2024-selfie.jpeg" loading="lazy" width="257" height="320" alt="A selfie of me, taken from slightly above. I am wearing eclipse protection glasses, but I am looking basically at the camera. Behind me, slightly out of focus, a young woman is looking at the camera and flashing a “peace” sign with two fingers." srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/257/q/60/images/blog/revengeance-solar-eclipse-2024-selfie.jpeg 257w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>After finally spotting the sun&#8202;—&#8202;it’s tricky to line everything up with this much magnification&#8202;—&#8202;I took a test shot.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2024-eclipse-very-start.jpeg" loading="lazy" width="640" height="427" alt="A filtered, zoomed-in picture of the sun. A small chunk of the sun is missing from the bottom-right." srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-2024-eclipse-very-start.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-2024-eclipse-very-start.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/revengeance-solar-eclipse-2024-eclipse-very-start.jpeg 640w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>I stared at the screen. Something seemed off. Was there a little chunk of the sun missing?</p>
<p>Oh, right.</p>
<p>Eclipse.</p>
<p>“Guys, it’s started.”</p>
<p>I immediately regretted not springing for a tracking mount, which would have automatically kept the camera pointed at the sun in the sky. That sucker moves fast! I had to fiddle with the tripod legs every two minutes or so before the sun left the frame.</p>
<p>I was concerned that the camera’s autofocus might not work with a solar filter blocking the light by a factor of 20 or so. Thankfully, the Nikon zipped right to the sun, perfectly, every time.</p>
<p>An unanticipated benefit of using a camera for an eclipse is that during the build-up it’s also a viewing screen, providing a better look at the partial eclipse than you get with the glasses. I invited some kids nearby to take a look. They took a picture of the screen with their phones.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2024-camera-viewing-screen-partial.jpeg" loading="lazy" width="3024" height="4032" alt="A shot from behind and above of a Nikon digital camera. On the rear screen, a partial eclipse is visible, with the moon covering about 80% of the sun" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-2024-camera-viewing-screen-partial.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-2024-camera-viewing-screen-partial.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/revengeance-solar-eclipse-2024-camera-viewing-screen-partial.jpeg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/revengeance-solar-eclipse-2024-camera-viewing-screen-partial.jpeg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/revengeance-solar-eclipse-2024-camera-viewing-screen-partial.jpeg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/revengeance-solar-eclipse-2024-camera-viewing-screen-partial.jpeg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/revengeance-solar-eclipse-2024-camera-viewing-screen-partial.jpeg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/revengeance-solar-eclipse-2024-camera-viewing-screen-partial.jpeg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/blog/revengeance-solar-eclipse-2024-camera-viewing-screen-partial.jpeg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/blog/revengeance-solar-eclipse-2024-camera-viewing-screen-partial.jpeg 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/blog/revengeance-solar-eclipse-2024-camera-viewing-screen-partial.jpeg 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/blog/revengeance-solar-eclipse-2024-camera-viewing-screen-partial.jpeg 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/blog/revengeance-solar-eclipse-2024-camera-viewing-screen-partial.jpeg 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2880/q/60/images/blog/revengeance-solar-eclipse-2024-camera-viewing-screen-partial.jpeg 2880w, https://www.leereamsnyder.com/resized-n-optimized-image/w/3024/q/60/images/blog/revengeance-solar-eclipse-2024-camera-viewing-screen-partial.jpeg 3024w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>Everything seemed pretty normal for a while. Unless you know what’s happening and can look at the sun with protective gear, you’d never know.</p>
<p>It’s not until well over 50% coverage that things seemed a little darker outside. Around 75%, it started to feel cooler.</p>
<p>Around 90%, it was clearly darker.</p>
<p>With a minute or so left, the street lamps in the parking lot turned on.</p>
<p>With a few seconds left, I pulled off the solar filter and quickly adjusted the shutter speed. Because a Z6 that I own is basically identical to the Z7 I was using, I already had pretty good muscle memory for changing settings quickly. Good thing.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2024-beads.jpeg" loading="lazy" width="4352" height="4352" alt="A zoomed in picture of a total solar eclipse, the instant before totality. There is a flash of light around the sun at the upper-left. These are Baily’s beads, where the craggy surface of the moon allows flashes of the sun’s light through." srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-2024-beads.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-2024-beads.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/revengeance-solar-eclipse-2024-beads.jpeg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/revengeance-solar-eclipse-2024-beads.jpeg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/revengeance-solar-eclipse-2024-beads.jpeg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/revengeance-solar-eclipse-2024-beads.jpeg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/revengeance-solar-eclipse-2024-beads.jpeg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/revengeance-solar-eclipse-2024-beads.jpeg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/blog/revengeance-solar-eclipse-2024-beads.jpeg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/blog/revengeance-solar-eclipse-2024-beads.jpeg 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/blog/revengeance-solar-eclipse-2024-beads.jpeg 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/blog/revengeance-solar-eclipse-2024-beads.jpeg 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/blog/revengeance-solar-eclipse-2024-beads.jpeg 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2880/q/60/images/blog/revengeance-solar-eclipse-2024-beads.jpeg 2880w, https://www.leereamsnyder.com/resized-n-optimized-image/w/4352/q/60/images/blog/revengeance-solar-eclipse-2024-beads.jpeg 4352w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>It is impossible to describe just how goddamn weird things got, and how quickly. In a blink, it was dark all around. The horizon looked like dusk, but in <em>all</em> directions. We saw stars in the middle of the afternoon. <a href="https://m.xkcd.com/2914/">The sky was <em>broken</em></a>.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2024-totality-wide.jpeg" loading="lazy" width="4284" height="5712" alt="A wide-angle shot of Brookville Ohio, during the total eclipse. The sky is dark blue, but at the horizon it is dusk. The moon is in front of the sun, so the sun is a black dot with a glowing ring around it. In the foreground, onlookers gaze up." srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-2024-totality-wide.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-2024-totality-wide.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/revengeance-solar-eclipse-2024-totality-wide.jpeg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/revengeance-solar-eclipse-2024-totality-wide.jpeg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/revengeance-solar-eclipse-2024-totality-wide.jpeg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/revengeance-solar-eclipse-2024-totality-wide.jpeg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/revengeance-solar-eclipse-2024-totality-wide.jpeg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/revengeance-solar-eclipse-2024-totality-wide.jpeg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/blog/revengeance-solar-eclipse-2024-totality-wide.jpeg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/blog/revengeance-solar-eclipse-2024-totality-wide.jpeg 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/blog/revengeance-solar-eclipse-2024-totality-wide.jpeg 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/blog/revengeance-solar-eclipse-2024-totality-wide.jpeg 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/blog/revengeance-solar-eclipse-2024-totality-wide.jpeg 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2880/q/60/images/blog/revengeance-solar-eclipse-2024-totality-wide.jpeg 2880w, https://www.leereamsnyder.com/resized-n-optimized-image/w/4284/q/60/images/blog/revengeance-solar-eclipse-2024-totality-wide.jpeg 4284w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>I was able to capture a shot near the beginning of totality where you can clearly see some solar prominences.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2024-eclipse-totality-prominences.jpeg" loading="lazy" width="3762" height="3762" alt="A zoomed-in picture of the sun during a total eclipse. It is only a faint ring of light. In the upper-left, you can see wisps of reddish orange&#8202;—&#8202;prominences of the sun." srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-2024-eclipse-totality-prominences.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-2024-eclipse-totality-prominences.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/revengeance-solar-eclipse-2024-eclipse-totality-prominences.jpeg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/revengeance-solar-eclipse-2024-eclipse-totality-prominences.jpeg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/revengeance-solar-eclipse-2024-eclipse-totality-prominences.jpeg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/revengeance-solar-eclipse-2024-eclipse-totality-prominences.jpeg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/revengeance-solar-eclipse-2024-eclipse-totality-prominences.jpeg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/revengeance-solar-eclipse-2024-eclipse-totality-prominences.jpeg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/blog/revengeance-solar-eclipse-2024-eclipse-totality-prominences.jpeg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/blog/revengeance-solar-eclipse-2024-eclipse-totality-prominences.jpeg 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/blog/revengeance-solar-eclipse-2024-eclipse-totality-prominences.jpeg 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/blog/revengeance-solar-eclipse-2024-eclipse-totality-prominences.jpeg 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/blog/revengeance-solar-eclipse-2024-eclipse-totality-prominences.jpeg 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2880/q/60/images/blog/revengeance-solar-eclipse-2024-eclipse-totality-prominences.jpeg 2880w, https://www.leereamsnyder.com/resized-n-optimized-image/w/3762/q/60/images/blog/revengeance-solar-eclipse-2024-eclipse-totality-prominences.jpeg 3762w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>How’s that look at 100%?</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2024-prominences-close-up.png" loading="lazy" width="1584" height="1226" alt="A close-up of the above picture. You can see a quarter circle of the ring of the sun, with many small red wisps blasting outwards" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-2024-prominences-close-up.png 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-2024-prominences-close-up.png 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/revengeance-solar-eclipse-2024-prominences-close-up.png 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/revengeance-solar-eclipse-2024-prominences-close-up.png 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/revengeance-solar-eclipse-2024-prominences-close-up.png 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/revengeance-solar-eclipse-2024-prominences-close-up.png 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/revengeance-solar-eclipse-2024-prominences-close-up.png 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/revengeance-solar-eclipse-2024-prominences-close-up.png 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1584/q/60/images/blog/revengeance-solar-eclipse-2024-prominences-close-up.png 1584w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p><em>Excellent</em>.</p>
<p>People cheered. Screamed. Wept. I was utterly stunned. I had prepared; I was also <em>not</em> prepared. Sucker punched, even though I saw it coming.</p>
<p>I had read that birds will start signing their nighttime songs during totality. We couldn’t hear any birds because the DJ was playing an amiable mix of Taylor Swift, Millennial wedding dance songs, and songs vaguely on theme (“Total Eclipse of the Heart,” “Black Hole Sun,” etc.). During totality, he was moved to silence. So <em>something</em> changed its song.</p>
<p>After I said “holy fucking shit” a few dozen times (sorry, children), I was able to gather enough sense to try to capture the corona.</p>
<p>I was thankful for my chill and normal obsessive research here. Lots of online articles that were supposed guides to taking pictures of the eclipse were basically “I dunno! Bracket?” But <a href="https://www.photographingspace.com/photograph-total-solar-eclipse/">one actually good guide</a> linked out to this <a href="http://xjubier.free.fr/en/site_pages/SolarEclipseExposure.html">amazing exposure calculator</a> that was, as far as I can tell, dead on.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2024-totality-corona.jpeg" loading="lazy" width="5504" height="5504" alt="A zoomed-in shot of the sun during a total eclipse. The sun is a black circle, surrounded by ethereal white light&#8202;—&#8202;the sun’s corona, visible only during a total eclipse." srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-2024-totality-corona.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-2024-totality-corona.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/revengeance-solar-eclipse-2024-totality-corona.jpeg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/revengeance-solar-eclipse-2024-totality-corona.jpeg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/revengeance-solar-eclipse-2024-totality-corona.jpeg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/revengeance-solar-eclipse-2024-totality-corona.jpeg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/revengeance-solar-eclipse-2024-totality-corona.jpeg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/revengeance-solar-eclipse-2024-totality-corona.jpeg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/blog/revengeance-solar-eclipse-2024-totality-corona.jpeg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/blog/revengeance-solar-eclipse-2024-totality-corona.jpeg 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/blog/revengeance-solar-eclipse-2024-totality-corona.jpeg 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/blog/revengeance-solar-eclipse-2024-totality-corona.jpeg 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/blog/revengeance-solar-eclipse-2024-totality-corona.jpeg 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2880/q/60/images/blog/revengeance-solar-eclipse-2024-totality-corona.jpeg 2880w, https://www.leereamsnyder.com/resized-n-optimized-image/w/5504/q/60/images/blog/revengeance-solar-eclipse-2024-totality-corona.jpeg 5504w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>We had totality for three and a half minutes, but it felt like it passed in a blink.</p>
<p>Here’s an over-exposed flash of <a href="https://en.wikipedia.org/wiki/Baily's_beads">Baily’s beads</a>, seconds before it’s all over.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2024-totality-end-bailys.jpeg" loading="lazy" width="4697" height="4697" alt="A zoomed-in shot of the sun during a total eclipse. At the bottom of the sun, a flare of bright light appears. This is Baily’s beads at the end, where irregularities on the moon’s surface allow flashes of sunlight through" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-2024-totality-end-bailys.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-2024-totality-end-bailys.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/revengeance-solar-eclipse-2024-totality-end-bailys.jpeg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/revengeance-solar-eclipse-2024-totality-end-bailys.jpeg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/revengeance-solar-eclipse-2024-totality-end-bailys.jpeg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/revengeance-solar-eclipse-2024-totality-end-bailys.jpeg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/revengeance-solar-eclipse-2024-totality-end-bailys.jpeg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/revengeance-solar-eclipse-2024-totality-end-bailys.jpeg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/blog/revengeance-solar-eclipse-2024-totality-end-bailys.jpeg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/blog/revengeance-solar-eclipse-2024-totality-end-bailys.jpeg 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/blog/revengeance-solar-eclipse-2024-totality-end-bailys.jpeg 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/blog/revengeance-solar-eclipse-2024-totality-end-bailys.jpeg 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/blog/revengeance-solar-eclipse-2024-totality-end-bailys.jpeg 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2880/q/60/images/blog/revengeance-solar-eclipse-2024-totality-end-bailys.jpeg 2880w, https://www.leereamsnyder.com/resized-n-optimized-image/w/4697/q/60/images/blog/revengeance-solar-eclipse-2024-totality-end-bailys.jpeg 4697w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>And then it really is <em>done</em>. Suddenly it’s much lighter. You can’t look up anymore. The sky is unbroken. DJs resume their Cha Cha Slides.</p>
<p>My heart was <span class="sc">pounding</span> for over an hour afterwards.</p>
<p>When I got home, I made a quick collage of the event. I am aware that this is a bit of a cliché, but also I do not care because this one is <em>mine</em>.</p>
<figure>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-2024-collage.jpg" loading="lazy" width="6000" height="4000" alt="A collage of the total solar eclipse. From left to right, 5 suns in a row. The first is about 20% covered by the moon. The second is about 80% covered. The third, central sun is in total eclipse with the whisps of the corona visible. The fourth sun is about 80% covered with the moon crossing towards the upper left. The final sun is about 20% covered." srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-2024-collage.jpg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-2024-collage.jpg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/revengeance-solar-eclipse-2024-collage.jpg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/revengeance-solar-eclipse-2024-collage.jpg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/revengeance-solar-eclipse-2024-collage.jpg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/revengeance-solar-eclipse-2024-collage.jpg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/blog/revengeance-solar-eclipse-2024-collage.jpg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/blog/revengeance-solar-eclipse-2024-collage.jpg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/blog/revengeance-solar-eclipse-2024-collage.jpg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/blog/revengeance-solar-eclipse-2024-collage.jpg 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/blog/revengeance-solar-eclipse-2024-collage.jpg 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/blog/revengeance-solar-eclipse-2024-collage.jpg 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/blog/revengeance-solar-eclipse-2024-collage.jpg 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2880/q/60/images/blog/revengeance-solar-eclipse-2024-collage.jpg 2880w, https://www.leereamsnyder.com/resized-n-optimized-image/w/6000/q/60/images/blog/revengeance-solar-eclipse-2024-collage.jpg 6000w" sizes="(max-width: 32em) 96vw, 30em"></p>
</figure>
<p>I am grateful that I made these celestial enemies.</p>
<p>When our paths crossed, I can’t say that I defeated them. How <em>could</em> I? What are men to the moon and stars?</p>
<p>But our fated meeting gave me glorious purpose. The whole day was astonishing. I had so much fun. And I can never unsee what I saw.</p>
<p>It was&#8202;—&#8202;I mean this literally&#8202;—&#8202;awesome.</p>
<p>This particular three-body problem is resolved. I am at peace. I can cross the sun and the moon off my list.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/revengeance-solar-eclipse-cleared-list.jpeg" loading="lazy" width="640" height="640" alt="A hand-written list titled “Revenge List Five.” Item one, The Sun, is crossed out. Item two, trampolines, remains. Item three, Radiohead, is crossed out. Item four is “Baked mac & cheese.” Finally, item five, The Moon, is crossed out." srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/revengeance-solar-eclipse-cleared-list.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/revengeance-solar-eclipse-cleared-list.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/revengeance-solar-eclipse-cleared-list.jpeg 640w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>Although… actually I <em>did</em> get a little sunburned that day.</p>
<p>Anyone up for <a href="https://nso.edu/for-public/eclipse-map-2026/">a trip to Spain in 2026</a>?</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Write CSS. Not too much. Mostly scoped.]]></title>
            <link>https://www.leereamsnyder.com/write-css-not-too-much-mostly-scoped</link>
            <guid>https://www.leereamsnyder.com/write-css-not-too-much-mostly-scoped</guid>
            <pubDate>Thu, 22 Feb 2024 17:00:00 GMT</pubDate>
            <description><![CDATA[Let’s talk about Tailwind and appease no one]]></description>
            <content:encoded><![CDATA[<p>I’ve been a web developer of various stripes for over 15 years now. At roughly the same time that I was starting to sling <span class="sc">HTML</span> and <span class="sc">CSS</span> onto the internet, the author and journalist Michael Pollan attempted to answer the <a href="https://www.npr.org/2008/01/01/17725932/in-defense-of-food-author-offers-advice-for-health">“supposedly incredibly complicated and confusing question of what we humans should eat in order to be maximally healthy”</a>. He came up with some simple guidelines that could be boiled down to seven little words:</p>
<blockquote>
<p>Eat food. Not too much. Mostly plants.</p>
</blockquote>
<p>You should eat stuff that is <em>recognizably food</em> instead of hyper-processed garbage. Keep your portions reasonable. Prefer fruits and vegetables, which are overall better for you and the environment.</p>
<p>It was simple, sensible, and backed by science. With that, we never argued about what we should be putting in our bodies ever again.</p>
<p>Just kidding! Flash forward to today and we spend our time <a href="https://www.healthline.com/nutrition/atkins-vs-keto#keto">rehashing dietary trends from last century</a>, <a href="https://www.garbageday.email/p/lifehack-your-water">arguing about water</a>, <a href="https://en.wikipedia.org/wiki/Consumption_of_Tide_Pods#Tide_Pod_Challenge">urging people not to eat Tide Pods</a>, and fighting over <a href="https://www.youtube.com/watch?v=RADEfBJmtk4">appropriate vessels to contain water</a>.</p>
<p>Perhaps Pollan underestimated how much we like to argue online.</p>
<p>I see that same love of arguing playing out in web development with the endless discussion over <a href="https://tailwindcss.com">Tailwind, the utility-first <span class="sc">CSS</span> framework and toolset</a> that hit the scene in 2017.</p>
<p>If you’re somehow unfamiliar with Tailwind, the idea is the framework provides a gigantic pile of utility classes. Take some meat-and-potatoes markup like this (an abridged sample <a href="https://tailwindcss.com/docs/utility-first">from their docs</a>):</p>
<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;chat-notification&quot;</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;chat-notification-content&quot;</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;chat-notification-title&quot;</span>&gt;</span>ChitChat<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">
  <span class="hljs-selector-class">.chat-notification</span> {
    <span class="hljs-attribute">display</span>: flex;
    <span class="hljs-attribute">max-width</span>: <span class="hljs-number">24rem</span>;
    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;
    <span class="hljs-attribute">padding</span>: <span class="hljs-number">1.5rem</span>;
    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0.5rem</span>;
    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fff</span>;
    <span class="hljs-attribute">box-shadow</span>:
      <span class="hljs-number">0</span> <span class="hljs-number">20px</span> <span class="hljs-number">25px</span> -<span class="hljs-number">5px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.1</span>),
      <span class="hljs-number">0</span> <span class="hljs-number">10px</span> <span class="hljs-number">10px</span> -<span class="hljs-number">5px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.04</span>);
  }

  <span class="hljs-selector-class">.chat-notification-content</span> {
    <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">1.5rem</span>;
    <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">0.25rem</span>;
  }

  <span class="hljs-selector-class">.chat-notification-title</span> {
    <span class="hljs-attribute">color</span>: <span class="hljs-number">#1a202c</span>;
    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1.25rem</span>;
    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.25</span>;
  }
</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>
</code></pre>
<p>With Tailwind, you bring in their huge stylesheet or (very preferably) use their build tooling and build the same component like so, using only the library’s classes that often apply a single styling property like font size or color or background color:</p>
<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;p-6 max-w-sm mx-auto bg-white rounded-xl shadow-lg flex items-center space-x-4&quot;</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-xl font-medium text-black&quot;</span>&gt;</span>ChitChat<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
</code></pre>
<p>Take a beat and examine your feelings about those code samples. Do either of them raise your hackles or make you want to yell at strangers online?</p>
<p>You might think that using Tailwind and coding in this style would be a personal preference, but it <em>clearly</em> hits something deeper. Tailwind is possibly the most divisive thing I’ve seen in my career as a developer.</p>
<p>Here’s a small list of articles. First, some <strong>pro</strong> ones:</p>
<ul>
<li><a href="https://adamwathan.me/css-utility-classes-and-separation-of-concerns/">CSS Utility Classes and “Separation of Concerns”</a> by Adam Wathan, the creator of Tailwind, that lays out how he converged on the idea of Tailwind</li>
<li><a href="https://www.swyx.io/why-tailwind">Why Tailwind</a> by Shawn Wang</li>
<li><a href="https://laravel-news.com/11-benefits-of-tailwind-css">11 Benefits of Tailwind CSS</a> by Jason Beggs</li>
<li><a href="https://dev.to/neophen/tailwind-is-bad-because-i-don-t-like-it-24eh">Tailwind is bad because i don’t like it</a> by Mykolas Mankevicius. (Fair warning the lever on this one is verging towards “unhinged” as it’s responding aggressively to <a href="https://dev.to/brianboyko/tailwindcss-adds-complexity-does-nothing-3hpn">another article</a>)</li>
</ul>
<p>And some <strong>con</strong> ones:</p>
<ul>
<li><a href="https://pdx.su/blog/2023-07-26-tailwind-and-the-death-of-craftsmanship/">Tailwind, and the death of web craftsmanship</a> by Jeff Sandberg</li>
<li><a href="https://johanronsse.be/2020/07/08/why-youll-probably-regret-using-tailwind/">Why you’ll probably regret using Tailwind</a></li>
<li><a href="https://www.aleksandrhovhannisyan.com/blog/why-i-dont-like-tailwind-css/">Why I Don’t Like Tailwind CSS</a> by Aleksandr Hovhannisyan</li>
<li><a href="https://blog.shimin.io/why-i-dont-use-tailwind-in-production/">Why I don’t use Tailwind CSS in Production</a> by Shimin Zhang</li>
<li><a href="https://www.spicyweb.dev/why-tailwind-isnt-for-me/">Why Tailwind Isn’t for Me</a> by Jared White</li>
<li><a href="https://thoughtbot.com/blog/tailwind-and-the-femininity-of-css">Tailwind and the Femininity of CSS</a> by Elaina Natario</li>
</ul>
<p>Most recently, here’s <a href="https://heydonworks.com/article/what-is-utility-first-css/">What is Utility-First CSS?</a> by Heydon Pickering, which is very spicy:</p>
<blockquote>
<p>So why is this utility-first approach so popular at the moment? Partly because the designs we’re charged with coding often are f**ked and we need equally f**ked tools to wrangle them. Partly it’s because the f**ked tools we’ve adopted to write f**ked JavaScript don’t play so well with CSS or, for that matter, HTML. Mostly, it’s because developer insecurity and neophilia are easily exploited: “Have you ever written CSS you weren’t quite happy with? Well here’s a radical, paradigm-shifting, quasi-proprietary solution! You’ll never embarrass yourself again!”</p>
<p>It turns out, people in tech are particularly bad at distinguishing between paradigm shifts and paradigm sharts. That’s why we have nose-diving cryptocurrencies, dust-collecting monkey JPEG portfolios, and AI-generated children’s books teaching kids about pink, two-headed dinosaurs that never existed.</p>
</blockquote>
<p>I mean c’mon that’s pretty funny.</p>
<p>We can’t stop talking about it. Here I am talking about it more.</p>
<p>I recommend that you read all of those articles, as both sides make plenty of interesting points. But in the interest of your time, if I had to <em>greatly</em> reduce their arguments, the <strong>Yay-Tailwind</strong> folks are saying:</p>
<ul>
<li>Tailwind’s utility-first, just-use-these-classes philosophy clicks for me in a way that the <a href="http://smacss.com">many</a>, <a href="https://getbem.com">many</a>, <a href="https://technotif.com/manage-large-css-projects-with-itcss/">many</a> mental models for managing <span class="sc">CSS</span> haven’t.</li>
<li>Managing <span class="sc">CSS</span> at scale is very hard, and I mostly don’t have to do that with Tailwind.</li>
<li>Tailwind makes it easy to put together something that looks OK quickly. (This partially confuses the usefulness of a utility-first philosophy with the usefulness of a whole-ass design system, but, sure, OK. You like it.)</li>
</ul>
<p>Meanwhile, the <strong>Down-With-Tailwind</strong> folks say:</p>
<ul>
<li>You’re adding a dependency on Tailwind’s build tooling for customization and (especially) performance. Are you really looking for more complexity in your tech stack?</li>
<li>Because Tailwind is theoretically replacing all your <span class="sc">CSS</span>, their surface area is huge. If you’re going to <a href="https://v2.tailwindcss.com/docs">learn a bunch of Tailwind</a> to do box models, margin, padding, borders, typography, sizing, spacing, box-shadows, backgrounds, colors, fonts, animations, <a href="https://tailwindcss.com/docs/backdrop-hue-rotate">backdrop hue rotations</a>(???) etc etc, why not just learn <span class="sc">CSS</span>?</li>
<li>If you are choosing to not learn <span class="sc">CSS</span>, you might regret that choice when you have to troubleshoot your Tailwind code, which is inevitably just <span class="sc">CSS</span>. (I personally don’t see this brought up often enough.)</li>
<li>The markup is ugly!</li>
</ul>
<p>So, <strong>where do I stand</strong>?</p>
<p>I have built stuff with and without Tailwind professionally, and I see the merits of both sides.</p>
<p>The way Tailwind <a href="https://dev.to/cher/sexism-racism-toxic-positivity-and-tailwindcss-cil">actively pushes against making hasty abstractions</a> is&#8202;—&#8202;really&#8202;—&#8202;the smartest thing about it. In my experience, when you’re building something new you’re better off making something functional quickly and worrying about code elegance and deduplication and abstractions later, when you’re hopefully still in business. With a little practice, in a Tailwind project it’s relatively easy to get into a just-building-the-thing flow state. I get to shove the part of me that frets about good naming and specificity and leaking styles and efficient reuse into a drawer for a bit. It’s kinda nice.</p>
<p>And, sure, the output looks decent, if you accept that I will be able to spot your Tailwind-powered dashboard from <a href="https://twitter.com/chriscoyier/status/1331303400835837953?lang=en">a mile away</a> just like the (approx.) 7 quadrillion <a href="https://getbootstrap.com/docs/5.0/getting-started/introduction/">Bootstrap</a>-powered dashboards I’ve seen. (“You can customize it!” “You didn’t, though.”)</p>
<p>On the other hand, the pleasant-in-use simplicity of Tailwind falls apart when you’re doing something of even moderate complexity:</p>
<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">button</span>
  <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;
  [<span class="hljs-symbol">&amp;amp;</span>&gt;[data-slot=icon]]:-mx-0.5
  [<span class="hljs-symbol">&amp;amp;</span>&gt;[data-slot=icon]]:my-0.5
  [<span class="hljs-symbol">&amp;amp;</span>&gt;[data-slot=icon]]:shrink-0
  [<span class="hljs-symbol">&amp;amp;</span>&gt;[data-slot=icon]]:size-5
  [<span class="hljs-symbol">&amp;amp;</span>&gt;[data-slot=icon]]:sm:my-1
  [<span class="hljs-symbol">&amp;amp;</span>&gt;[data-slot=icon]]:sm:size-4
  [<span class="hljs-symbol">&amp;amp;</span>&gt;[data-slot=icon]]:text-[--btn-icon]
  [--btn-bg:theme(colors.zinc.900)]
  [--btn-border:theme(colors.zinc.950/90%)]
  [--btn-hover-overlay:theme(colors.white/10%)]
  [--btn-icon:theme(colors.zinc.400)]
  after:-z-10
  after:absolute
  after:data-[active]:bg-[--btn-hover-overlay]
  after:data-[disabled]:shadow-none
  after:data-[hover]:bg-[--btn-hover-overlay]
  after:inset-0
  after:rounded-[calc(theme(borderRadius.lg)-1px)]
  after:shadow-[shadow:inset_0_1px_theme(colors.white/15%)]
  before:-z-10
  before:absolute
  before:bg-[--btn-bg]
  before:data-[disabled]:shadow-none
  before:inset-0
  before:rounded-[calc(theme(borderRadius.lg)-1px)]
  before:shadow
  bg-[--btn-border]
  border
  border-transparent
  dark:[--btn-bg:theme(colors.zinc.600)]
  dark:[--btn-hover-overlay:theme(colors.white/5%)]
  dark:after:-inset-px
  dark:after:rounded-lg
  dark:before:hidden
  dark:bg-[--btn-bg]
  dark:border-white/5
  dark:text-white
  data-[active]:[--btn-icon:theme(colors.zinc.300)]
  data-[disabled]:opacity-50
  data-[focus]:outline
  data-[focus]:outline-2
  data-[focus]:outline-blue-500
  data-[focus]:outline-offset-2
  data-[hover]:[--btn-icon:theme(colors.zinc.300)]
  focus:outline-none
  font-semibold
  forced-colors:[--btn-icon:ButtonText]
  forced-colors:data-[hover]:[--btn-icon:ButtonText]
  gap-x-2
  inline-flex
  isolate
  items-center
  justify-center
  px-[calc(theme(spacing[3.5])-1px)]
  py-[calc(theme(spacing[2.5])-1px)]
  relative
  rounded-lg
  sm:px-[calc(theme(spacing.3)-1px)]
  sm:py-[calc(theme(spacing[1.5])-1px)]
  sm:text-sm/6
  text-base/6
  text-white&quot;</span>
&gt;</span>
  Button
<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
</code></pre>
<p>That’s for <em>one</em> (1) button. The chat notification sample above didn’t make me retch, but this? 🤢</p>
<p>Ok, look, I’m not a purist about pretty code and one look at my website or wardrobe should tell you that I have questionable taste. But I would think that both sides of this debate would say that code looks <em>absolutely bananas</em>. But no, because that’s one of the buttons from the <a href="https://catalyst.tailwindui.com/">Catalyst framework</a>, built by the Tailwind team.</p>
<p>Sure, fine, buttons can be deceptively complex and Catalyst is still in development, so maybe this changes in the future. But code like this&#8202;—&#8202;especially interactive elements or things that need media queries&#8202;—&#8202;is not atypical.</p>
<p>First, Tailwind’s build tooling <a href="https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values">lets you define new classes on the fly in <span class="sc">HTML</span></a>. This can be relatively harmless like defining a one-off margin length. Or it could be like above with, <code>sm:py-[calc(theme(spacing[1.5])-1px)]</code> where you’re involving media queries, accessing Tailwind’s theme values, then doing math to make a one-off length and OK now admit we’re just writing <span class="sc">CSS</span> but doing so very awkwardly. They’re committed to the bit, though, I’ll give them that. If you were hoping Tailwind would force your developers to stick to the design system, they won’t. (I didn’t.)</p>
<p>Second, Tailwind’s built-in solution to address the class landfill and compact your giant class heaps into something easier to consume (<a href="https://tailwindcss.com/docs/reusing-styles#extracting-classes-with-apply"><code>@apply</code></a>) is both <a href="https://tailwindcss.com/docs/reusing-styles#avoiding-premature-abstraction">clearly not recommended</a> and also a frankly weird mishmash of nonstandard <span class="sc">CSS</span> and Tailwind-ese. It reeks of “we added this to address complaints from the haterz, but only under duress.” I wouldn’t touch it.</p>
<p>So, yeah, Tailwind: it’s kinda pleasant, while occasionally being an extraordinary pain in the ass.</p>
<p>Meanwhile, in the past couple years since Tailwind rolled around, I’d say writing <span class="sc">CSS</span> is now also kinda pleasant, and while it also can occasionally be a pain in the ass, it’s far less frequent than it used to be.</p>
<p>So to tie things back to Michael Pollan, here’s where I land on the incredibly complicated and confusing question of how we humans should style documents and applications on the web at scale:</p>
<p><strong>Write CSS. Not too much. Mostly scoped.</strong></p>
<p>I’ll break that down.</p>
<h2 id="write-css"><a href="https://www.leereamsnyder.com/#write-css" class="header-anchor"><span>Write CSS</span></a></h2><p>For styling, you should strive to write code that is recognizably <span class="sc">CSS</span>.</p>
<p>You don’t need to know everything there is to know about <span class="sc">CSS</span>, but what you do learn will be portable and future-proof.</p>
<p>If you’re currently using Tailwind and like it, that’s really fine. I get it.</p>
<p>However, you might be kinda shocked at what <span class="sc">CSS</span> looks like these days.</p>
<h3 id="things-that-used-to-be-hard-are-easy-now"><a href="https://www.leereamsnyder.com/#things-that-used-to-be-hard-are-easy-now" class="header-anchor"><span>Things that used to be hard are easy now</span></a></h3><p>For pete’s sake, <a href="https://www.joshwcomeau.com/css/center-a-div/">centering things is easy</a>. Has been for years.</p>
<p><a href="https://moderncss.dev/equal-height-elements-flexbox-vs-grid/">You have multiple ways to equalize the heights of items in a row</a>.</p>
<p><a href="https://dev.to/akhilarjun/one-line-sticky-header-using-css-5gp3">Elements that stay “stuck” to the viewport take two lines of code</a>.</p>
<p>Hell, <a href="https://rachelandrew.co.uk/archives/2023/12/19/align-content-in-block-layout/">real soon now you won’t even need grid or flexbox to center things vertically</a>.</p>
<p>Card demo authors rejoice, <a href="https://developer.mozilla.org/en-US/blog/getting-started-with-css-container-queries/">because you can respond to an element’s container, not just the viewport</a>.</p>
<p>Really, skim through all of <a href="https://moderncss.dev">these modern solutions to old problems</a>. I have personally had to work around literally all of them, so it struck a lot of nerves.</p>
<h3 id="use-css-variables"><a href="https://www.leereamsnyder.com/#use-css-variables" class="header-anchor"><span>Use CSS variables</span></a></h3><p>CSS variables, <span class="sc">AKA</span> custom properties, are universally supported. You can <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties">learn the basic syntax</a> in like 5 minutes and <a href="https://moderncss.dev/how-custom-property-values-are-computed/">learn some of the subtleties</a> in under an hour and then you’re set for life.</p>
<p>They’re great for consuming design system tokens, and with inheritance and the cascade and the ability to use them in functions and shorthands you can really cut down on the amount of new <span class="sc">CSS</span> you have to write.</p>
<pre><code class="language-css"><span class="hljs-selector-pseudo">:root</span> {
  <span class="hljs-attr">--page-background-color</span>: white;
  <span class="hljs-attr">--text-color</span>: black;
  <span class="hljs-attr">--page-margin</span>: <span class="hljs-number">0.5rem</span>;
}

<span class="hljs-comment">/* adjust colors based on dark/light preference */</span>
<span class="hljs-keyword">@media</span> (<span class="hljs-attribute">prefers-color-scheme</span>: dark) {
  <span class="hljs-selector-pseudo">:root</span> {
    <span class="hljs-attr">--page-background-color</span>: black;
    <span class="hljs-attr">--text-color</span>: white;
  }
}

<span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">50rem</span>) {
  <span class="hljs-comment">/* increased margins on wider screens */</span>
  <span class="hljs-selector-pseudo">:root</span> {
    <span class="hljs-attr">--page-margin</span>: <span class="hljs-number">2rem</span>;
  }
}

<span class="hljs-comment">/* use the properties once! */</span>
<span class="hljs-selector-tag">body</span> {
  <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">var</span>(--page-background);
  <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--text-color);
  <span class="hljs-attribute">margin</span>: <span class="hljs-built_in">var</span>(--page-margin);
}
</code></pre>
<p>This is just scratching the surface. Check out <a href="https://css-irl.info/7-uses-for-css-custom-properties/">Michelle Barker’s article for more uses for custom properties</a>, <a href="https://ishadeed.com/article/practical-css-variables/">other ideas from Ahmad Shadeed</a>, or a <a href="https://lea0.verou.me/tag/css-variables/">whole pile of articles from Lea Verou</a>.</p>
<h3 id="you-can-nest-selectors-now"><a href="https://www.leereamsnyder.com/#you-can-nest-selectors-now" class="header-anchor"><span>You can nest selectors now</span></a></h3><p><a href="https://css-irl.info/css-nesting-is-here/">For real</a>, you can just write this in regular <span class="sc">CSS</span> and it works.</p>
<pre><code class="language-css"><span class="hljs-selector-class">.body-copy</span> {
  <span class="hljs-attribute">font-family</span>: <span class="hljs-built_in">var</span>(--font-family, serif);

  <span class="hljs-comment">/* 
    equivalent to .body-copy &gt; * + * 
  */</span>
  &gt; * + * {
    <span class="hljs-attribute">margin-block-start</span>: <span class="hljs-number">1em</span>;
    <span class="hljs-attribute">max-width</span>: <span class="hljs-number">80ch</span>;
  }
}
</code></pre>
<h3 id="use-newer-css-functions"><a href="https://www.leereamsnyder.com/#use-newer-css-functions" class="header-anchor"><span>Use newer CSS functions</span></a></h3><p>Length math methods like <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/min"><code>min()</code></a>, <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/max"><code>max()</code></a>, <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/clamp"><code>clamp()</code></a> let you implement sophisticated constraints using just <span class="sc">CSS</span>. Check out how <a href="https://utopia.fyi">Utopia</a> lets you build a fluid type and sizing scale with <code>clamp()</code> and zero media queries.</p>
<p>And, while we’re at it, it’s beyond safe to do some math in your stylesheets. The <code>calc()</code> function has been fully supported for years now.</p>
<p>Color, too, has gotten real neat in the past few years with <a href="https://chriscoyier.net/2023/06/06/modern-css-in-real-life/#new-colors">new color spaces</a> and the <code>color-mix()</code> function. <a href="https://www.abeautifulsite.net/posts/better-buttons-with-color-mix-and-custom-properties/">Check out how Cory LaViska builds a button</a> that will automatically compute reasonable hover and active colors from its current color in just a few lines of code.</p>
<h3 id="theres-the-long-desired-parent-selector-now"><a href="https://www.leereamsnyder.com/#theres-the-long-desired-parent-selector-now" class="header-anchor"><span>There’s the long-desired parent selector now</span></a></h3><p>Finally! You can say “style this, but only if it contains that” with <code>:has()</code> and <a href="https://webkit.org/blog/13096/css-has-pseudo-class/">it is glorious</a>.</p>
<p>Check out <a href="https://moderncss.dev/modern-css-for-dynamic-component-based-architecture/#component-buttons">how Stephanie Eckles builds a button</a> component that can change its skin to accommodate text, icons, or any combination by checking its own internals with <code>:has()</code>. 👨‍🍳♥️</p>
<h3 id="see-if-you-can-go-without-build-tooling"><a href="https://www.leereamsnyder.com/#see-if-you-can-go-without-build-tooling" class="header-anchor"><span>See if you can go without build tooling</span></a></h3><p>I have <a href="https://www.leereamsnyder.com/#use-tooling-that-generates-scoped-css">one major exception</a> which I’ll get in to later.</p>
<p>But in the year two thousand and twenty four you maybe don’t need some of the classic make-<span class="sc">CSS</span>-better tooling anymore. Native support for nesting and variables probably covers most of what you’re doing with SASS or PostCSS, and browsers have moved past prefixed experimental properties, so you can drop Autoprefixer.</p>
<p>Finally, you might not need something to concatenate all your <span class="sc">CSS</span> files if you’re writing way less <span class="sc">CSS</span> in general. Speaking of…</p>
<h2 id="not-too-much"><a href="https://www.leereamsnyder.com/#not-too-much" class="header-anchor"><span>Not too much</span></a></h2><p>People generally have problems with <span class="sc">CSS</span> when there’s a shitload of it. I like <span class="sc">CSS</span>, but I really do think the key to long-term happiness in a project is to avoid writing more of it&#8202;—&#8202;if you can.</p>
<p>Thankfully, new features and modern thinking about utilities and layout have you covered.</p>
<h3 id="build-some-layout-helpers"><a href="https://www.leereamsnyder.com/#build-some-layout-helpers" class="header-anchor"><span>Build some layout helpers</span></a></h3><p>The best way I’ve found to avoid writing tons of <span class="sc">CSS</span> is to have a small arsenal of reusable, battle-hardened layout helpers at the ready.</p>
<p>Ideally you should not be writing more <span class="sc">CSS</span> when you have place some elements horizontally. You should instead have a utility class or a component that <em>puts things side-by-side for you</em>, and you should reach for that first.</p>
<p>The actual implementations will depend on your needs, your tooling, and probably on your design system. <a href="https://www.leereamsnyder.com/row-stack-space-layout-components">I have an article about thinking about layout in rows, stacks, and spaces</a> that might illuminate things. Or look at <a href="https://every-layout.dev/"><em>Every Layout</em></a> by Heydon Pickering and Andy Bell. Or <a href="https://smolcss.dev">SmolCSS</a> by Stephanie Eckles for some other layout primitives.</p>
<h3 id="have-a-design-system"><a href="https://www.leereamsnyder.com/#have-a-design-system" class="header-anchor"><span>Have a design system</span></a></h3><p>Any system!</p>
<p>It’s very easy to rabbit-hole on this, but even a small selection of “approved” fonts, text sizes, spacing sizes, and colors will go a long way towards improving visual consistency and discouraging weird-looking one-off pages or components.</p>
<p>Slinging them around as <a href="https://www.leereamsnyder.com/#use-css-variables"><span class="sc">CSS</span> variables</a> makes a ton of sense to me.</p>
<pre><code class="language-css"><span class="hljs-selector-pseudo">:root</span> {
  <span class="hljs-comment">/* system goes here */</span>
  <span class="hljs-attr">--heading-font-family</span>: sans-serif;
  <span class="hljs-attr">--heading-line-height</span>: <span class="hljs-number">1.1</span>;
  <span class="hljs-attr">--heading-color</span>: green;
}

<span class="hljs-selector-tag">h1</span>,
<span class="hljs-selector-tag">h2</span>,
<span class="hljs-selector-tag">h3</span>,
<span class="hljs-selector-tag">h4</span> {
  <span class="hljs-attribute">font-family</span>: <span class="hljs-built_in">var</span>(--heading-font-family);
  <span class="hljs-attribute">line-height</span>: <span class="hljs-built_in">var</span>(--heading-line-height);
  <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--heading-color);
}
</code></pre>
<p>Now, <em>sticking to a system</em> requires actual discipline from both designers and developers, but that’s a whole different problem.</p>
<h3 id="have-a-reasonably-small-collection-of-design-token-and-property-classes"><a href="https://www.leereamsnyder.com/#have-a-reasonably-small-collection-of-design-token-and-property-classes" class="header-anchor"><span>Have a (reasonably small) collection of design token and property classes</span></a></h3><p>Tailwind proponents do get this right, to a point: it <em>is goddamned delightful</em> to slap together a simple component or page with a few utility classes.</p>
<p>They’re undeniably handy, but don’t write one for every single <span class="sc">CSS</span> property.</p>
<p>Here’s my personal guidelines for when to write a utility class. First, <strong>is it some styling you’re writing all the time</strong>? Second, <strong>is the class name extremely obvious</strong>? If so, go for it. Otherwise, tread carefully.</p>
<p>As an example, you’re probably making components that have a wrapper element, but all that wrapper element is really doing is serving as a <code>position: relative</code> container for children.</p>
<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;some-dropdown-wrapper-with-relative-positioning&quot;</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;absolutely-positioned-dropdown&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
</code></pre>
<p>This is a spot where some single-property utility classes let you apply common properties quickly, spare you from having to think of a good class name for the wrapper, and the names are <span class="sc">IMO</span> obvious because they’re discrete keywords of a property:</p>
<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">
  <span class="hljs-comment">/* in your global stylesheet */</span>
  <span class="hljs-selector-class">.relative</span> {
    <span class="hljs-attribute">position</span>: relative;
  }
  <span class="hljs-selector-class">.absolute</span> {
    <span class="hljs-attribute">position</span>: absolute;
  }
</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;relative&quot;</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;absolute&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
</code></pre>
<p>I also have utilities for accessibility or layout annoyances that I end up using on every project ever, like these:</p>
<pre><code class="language-css"><span class="hljs-selector-class">.nowrap</span>,
<span class="hljs-selector-class">.no-wrap</span> <span class="hljs-comment">/* lol I can never keep this straight */</span> {
  <span class="hljs-attribute">white-space</span>: nowrap;
}

<span class="hljs-selector-class">.screen-reader-only</span> {
  <span class="hljs-attribute">border</span>: <span class="hljs-number">0</span>;
  <span class="hljs-attribute">clip</span>: <span class="hljs-built_in">rect</span>(<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>);
  <span class="hljs-attribute">height</span>: <span class="hljs-number">1px</span>;
  <span class="hljs-attribute">margin</span>: -<span class="hljs-number">1px</span>;
  <span class="hljs-attribute">overflow</span>: hidden;
  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;
  <span class="hljs-attribute">position</span>: absolute;
  <span class="hljs-attribute">width</span>: <span class="hljs-number">1px</span>;
}
</code></pre>
<p>Or properties derived from your design system, but now names are harder:</p>
<pre><code class="language-css"><span class="hljs-selector-class">.font-primary</span> {
  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;Heliotrope&#x27;</span>, Optima, sans-serif;
}
<span class="hljs-selector-class">.font-monospace</span> {
  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;Mono Lisa&#x27;</span>, monospace;
}

<span class="hljs-selector-class">.fs-0</span> {
  <span class="hljs-attribute">font-size</span>: <span class="hljs-built_in">var</span>(--step-<span class="hljs-number">0</span>);
}
<span class="hljs-selector-class">.fs-1</span> {
  <span class="hljs-attribute">font-size</span>: <span class="hljs-built_in">var</span>(--step-<span class="hljs-number">1</span>);
}
<span class="hljs-selector-class">.fs-2</span> {
  <span class="hljs-attribute">font-size</span>: <span class="hljs-built_in">var</span>(--step-<span class="hljs-number">2</span>);
}
<span class="hljs-comment">/* and so on */</span>
</code></pre>
<p>I do like to have resets like <code>.p-0</code> or <code>.m-0</code> to zero out padding and margin in a pinch, but not more than that. With layout utilities, I try to avoid thinking about padding and margin directly.</p>
<p>I get antsy writing utility classes for colors. Which color? Background? Text? Border? Outline? Are they also going to handle changes like hover, or dark mode? Should they? Are you going to account for tints and shades? Are there going to be so many that it’s hard to keep them straight? At that point, it’s easier to just write the <span class="sc">CSS</span> for whatever component I’m dealing with.</p>
<p>All this to say: keep the selection not-too-big: utility classes lose a lot of their power if you can’t keep most of the ones available to you in your noggin <span class="sc">RAM</span>.</p>
<p>But you would be stunned at how much you can build with a small handful of <a href="https://www.leereamsnyder.com/#build-some-layout-helpers">layout components</a> and a couple of classes that let you access bits of your design system. That’s really the sweet spot you should be aiming for.</p>
<p>When one-offs or deviations from the system arise&#8202;—&#8202;which they absolutely will&#8202;—&#8202;there are a couple more tricks to keep new <span class="sc">CSS</span> to a minimum…</p>
<h3 id="combine-selectors-with-is--where"><a href="https://www.leereamsnyder.com/#combine-selectors-with-is--where" class="header-anchor"><span>Combine selectors with :is &amp; :where</span></a></h3><p>All browsers now support the <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:is"><code>:is</code></a> and <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:where"><code>:where</code></a> pseudo-classes.</p>
<p>Both are great for writing less verbose <span class="sc">CSS</span>. The classic example is combining <code>:hover</code>/<code>:focus</code> selectors into single selectors like so:</p>
<pre><code class="language-css"><span class="hljs-selector-tag">a</span> {
  <span class="hljs-attribute">color</span>: purple;
}

<span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:is</span>(<span class="hljs-selector-pseudo">:hover</span>, <span class="hljs-selector-pseudo">:focus</span>) {
  <span class="hljs-attribute">color</span>: blue;
}
</code></pre>
<p>The zero specificity of <code>:where()</code> is amazing for keeping the specificity of your selectors as low as possible, which makes overrides&#8202;—&#8202;should you need them&#8202;—&#8202;a lot easier. But if you’re having specificity problems, <a href="https://www.leereamsnyder.com/#mostly-scoped">you might want to look at scoping</a>.</p>
<h3 id="take-advantage-of-inheritance"><a href="https://www.leereamsnyder.com/#take-advantage-of-inheritance" class="header-anchor"><span>Take advantage of inheritance</span></a></h3><p>It’s not your enemy! Learn <a href="https://web.dev/learn/css/inheritance#which_properties_are_inherited_by_default">what properties inherit</a>, and set them as high as you possibly can.</p>
<p>One classic example is font-family. If you’ve got a primary font, set that on the <code>body</code> and everything will inherit it, and you don’t write <code>font-family</code> ever again.</p>
<pre><code class="language-css"><span class="hljs-selector-tag">body</span> {
  <span class="hljs-attribute">font-family</span>: sans-serif;
}

<span class="hljs-comment">/* ahem these don&#x27;t inherit by default */</span>
<span class="hljs-selector-tag">button</span>,
<span class="hljs-selector-tag">input</span>,
<span class="hljs-selector-tag">select</span>,
<span class="hljs-selector-tag">textarea</span> {
  <span class="hljs-attribute">font</span>: inherit;
}
</code></pre>
<h3 id="latch-on-to-accessibility-attributes"><a href="https://www.leereamsnyder.com/#latch-on-to-accessibility-attributes" class="header-anchor"><span>Latch on to accessibility attributes</span></a></h3><p>You might not have to think of more classes if you’re adding additional markup for accessibility. You can latch on to those attributes that you’re adding anyway. <a href="https://adrianroselli.com/2021/06/using-css-to-enforce-accessibility.html">Adrian Roselli has a big roundup of ideas</a>.</p>
<pre><code class="language-css"><span class="hljs-comment">/* good if you&#x27;re doing this anyway */</span>
<span class="hljs-selector-tag">textarea</span><span class="hljs-selector-attr">[aria-invalid=<span class="hljs-string">&#x27;true&#x27;</span>]</span> {
  <span class="hljs-attr">--border-color</span>: red;
}
</code></pre>
<h2 id="mostly-scoped"><a href="https://www.leereamsnyder.com/#mostly-scoped" class="header-anchor"><span>Mostly scoped</span></a></h2><p>If you’re up to speed with modern <span class="sc">CSS</span> and writing way less of it and you’re still struggling, I’m willing to bet that your issue is managing the scope or reach of your selectors.</p>
<p>Maybe your selectors are targeting more elements than you intended, or you have conflicts when you combine components. This is where you really start fighting with specificity and selector ordering and get to thinking that <span class="sc">CSS</span> is stupid as hell.</p>
<p>Scoping your <span class="sc">CSS</span> more-or-less solves all these problems for you, and modern browsers and tooling make this increasingly accessible.</p>
<h3 id="use-tooling-that-generates-scoped-css"><a href="https://www.leereamsnyder.com/#use-tooling-that-generates-scoped-css" class="header-anchor"><span>Use tooling that generates scoped CSS</span></a></h3><p>Although I <a href="https://www.leereamsnyder.com/#see-if-you-can-go-without-build-tooling">mentioned above</a> that you can live without a lot of <span class="sc">CSS</span> tooling, if you can take advantage of something that automatically writes styles scoped to a component’s markup, do it.</p>
<p>Because these work by slightly altering and (typically) increasing the specificity of your selectors, there’s <em>sometimes</em> subtleties and gotchas, but these things help you sidestep so many other <span class="sc">CSS</span> authoring issues that they’re absolutely worth it: they let you write simple selectors with very low specificity, they keep your styles from “leaking” out of the component, and they’re easier to work with than all the subtleties of the Shadow <span class="sc">DOM</span>.</p>
<p>The lightest possible thing I know of is <a href="https://www.11ty.dev/docs/languages/webc/">the WebC template language</a> and <a href="https://www.11ty.dev/docs/languages/webc/#webcscoped">its <code>webc:scoped</code> mechanism</a>. The <a href="https://svelte.dev">Svelte</a> framework also has <a href="https://geoffrich.net/posts/svelte-scoped-styles/">built-in, default support for scoped styles</a>, as does <a href="https://vuejs.org/api/sfc-css-features.html">Vue</a>.</p>
<p>If you’re using React or some other web framework that forgot that styles are a thing, CSS-in-JS libraries like <a href="https://styled-components.com/"><code>styled-components</code></a> or <a href="https://emotion.sh/docs/introduction"><code>emotion</code></a> generally output scoped styles.</p>
<p>Or look into <a href="https://github.com/css-modules/css-modules?tab=readme-ov-file"><span class="sc">CSS</span> modules</a>, where you import <code>.css</code> files in your scripts. It’s not a standard, but <a href="https://github.com/css-modules/css-modules/blob/master/docs/get-started.md">lots of build pipelines and frameworks</a> let you do it.</p>
<h3 id="look-into-cascade-layers"><a href="https://www.leereamsnyder.com/#look-into-cascade-layers" class="header-anchor"><span>Look into cascade layers</span></a></h3><p>What if I told you that <span class="sc">CSS</span> now has a native, globally supported way to <em>reduce</em> specificity and effectively <em>reorder</em> entire blocks of code or imported files? <a href="https://12daysofweb.dev/2022/cascade-layers/">Meet cascade layers</a>. These still scramble my brain a little bit, but theme and library authors in particular should be looking real hard at this right now. Shipped in all browsers two years ago.</p>
<h3 id="maybe-you-want-shadow-dom"><a href="https://www.leereamsnyder.com/#maybe-you-want-shadow-dom" class="header-anchor"><span>Maybe you want Shadow DOM</span></a></h3><p>If you’re working in web components <span class="sc">aka</span> custom elements, the Shadow <span class="sc">DOM</span> lets you write styles that are scoped to the component’s generated, isolated markup. This is a whole thing and comes <a href="https://www.matuzo.at/blog/2023/pros-and-cons-of-shadow-dom/">with a whole heap of caveats</a>, but it’s standardized and available without extra tooling. <a href="https://blog.openreplay.com/shadow-dom--the-ultimate-guide/">This introduction to the shadow <span class="sc">DOM</span> is pretty solid.</a> If you’re really interested in web components, <a href="https://thomaswilburn.github.io/wc-book/index.html">Thomas Wilburn’s book about them</a> is the best practical overview I’ve read.</p>
<h3 id="get-ready-for-scope"><a href="https://www.leereamsnyder.com/#get-ready-for-scope" class="header-anchor"><span>Get ready for @scope</span></a></h3><p>This is Chromium-only right now, but <code>@scope</code> lets you write boundaries for selectors, either <a href="https://developer.chrome.com/docs/css-ui/at-scope#introducing_scope">in code</a> or <a href="https://developer.chrome.com/docs/css-ui/at-scope#prelude-less_scope">based on the parent of the style tag</a>. <a href="https://fullystacked.net/scope-in-css/">Ollie Williams</a> and <a href="https://keithjgrant.com/posts/2023/04/scoped-css-is-back/">Keith J. Grant</a> have good introductions here.</p>
<h3 id="theres-always-bem"><a href="https://www.leereamsnyder.com/#theres-always-bem" class="header-anchor"><span>There’s always BEM</span></a></h3><p>If you’re not ready for things like cascade layers or you can’t adopt additional tooling, the battle-proven mental frameworks like <a href="https://getbem.com/introduction/">BEM</a> are and were popular for a reason. You’ve gotta get everyone on board and (ugh) think of names for things, but the broad guidelines are sound: writing modular code with low specificity class selectors can definitely help you avoid big swaths of <span class="sc">CSS</span>-at-scale problems.</p>
<p><a href="https://twitter.com/aardrian/status/1164956147499053056">Maybe do your best to keep the class names shortish, though, mmm-kay?</a> 😉</p>
<h2 id="thats-it"><a href="https://www.leereamsnyder.com/#thats-it" class="header-anchor"><span>That’s it?</span></a></h2><p>So, yeah, I’ve been at this for a while, and this is the answer: <strong>Write <span class="sc">CSS</span>. Not too much. Mostly scoped.</strong></p>
<p>I’m sure we’ll never argue about how to manage <span class="sc">CSS</span> ever again.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[My (semi) recent media diet, February 2024 edition]]></title>
            <link>https://www.leereamsnyder.com/media-diet-feb-2024</link>
            <guid>https://www.leereamsnyder.com/media-diet-feb-2024</guid>
            <pubDate>Sun, 11 Feb 2024 17:00:00 GMT</pubDate>
            <description><![CDATA[Man, there’s a lot of good stuff]]></description>
            <content:encoded><![CDATA[<p>With <a href="https://kottke.org/tag/media%20diet">a hat tip to Jason Kottke</a>, here’s all of the things I’ve been watching, hearing, reading, and playing of late. Because I’ve never done this before, this is more or less everything I had eyeballs on during 2023.</p>
<p>Don’t get too hung up on the ratings!</p>
<h2 id="essays"><a href="https://www.leereamsnyder.com/#essays" class="header-anchor"><span>Essays</span></a></h2><p><a href="https://aworkinglibrary.com/writing/unified-theory-of------"><strong>A unified theory of fucks by Mandy Brown</strong></a>. I put this up top in the hopes that if you click through to just one more thing, I hope it’s this. (A+)</p>
<p><a href="https://fontreviewjournal.com"><strong>Font Review Journal by Bethany Heck</strong></a>. I have an obsession with typefaces, and this sadly lapsed series of reviews was so satisfying. (A)</p>
<p><a href="https://pitchfork.com/reviews/sunday/"><strong>The Sunday Reviews on Pitchfork</strong></a>. I used to read <em>Pitchfork</em> religiously, and their ongoing effort to flesh out their back catalog is one of the best ideas they had. Read them <a href="https://defector.com/music-journalism-cant-afford-a-hollowed-out-pitchfork">before their corporate overlords ruin them</a>. (8.6)</p>
<h2 id="books"><a href="https://www.leereamsnyder.com/#books" class="header-anchor"><span>Books</span></a></h2><p><a href="https://bookshop.org/p/books/tomorrow-and-tomorrow-and-tomorrow-gabrielle-zevin/17502475?ean=9780593321201"><strong>Tomorrow, and Tomorrow, and Tomorrow</strong></a>. An astonishing novel about friendship, art, collaboration, commerce, love, and how they all interact, messily. This one has stuck with me. (A+)</p>
<p><a href="https://bookshop.org/p/books/the-fall-of-numenor-and-other-tales-from-the-second-age-of-middle-earth-j-r-r-tolkien/18510201?ean=9780063280687"><strong>The Fall of Númenor: And Other Tales from the Second Age of Middle-Earth</strong></a>. Read it for the the Tolkien meetup group I’ve been attending. Pretty remarkable feat of editing to sew this good of a story out of the threads that he left behind. If you can read <a href="https://www.esquire.com/entertainment/books/a41867030/jrr-tolkien-the-fall-of-numenor/">the story of Aldarion and Erendis</a> without getting <a href="https://www.youtube.com/watch?v=DVx8L7a3MuE">“Brandy”</a> in your head, good for you. (B)</p>
<p><a href="https://bookshop.org/p/books/starter-villain-john-scalzi/18753219?ean=9780765389220"><strong>Starter Villain</strong></a>. Your dead uncle was a super-villain and left his seedy business to you is <em>such</em> a great concept, but this leans too hard on “whoa isn’t this all craaaazy???” banter. (B−)</p>
<p><a href="https://bookshop.org/p/books/the-bullet-that-missed-a-thursday-murder-club-mystery-richard-osman/18057150?ean=9780593299418"><strong>The Bullet That Missed: A Thursday Murder Club Mystery</strong></a>. Probably my favorite of this charming series so far. These books are too long but I love the characters so much that I don’t necessarily mind it. (B+)</p>
<p><a href="https://bookshop.org/p/books/the-anthropocene-reviewed-essays-on-a-human-centered-planet-john-green/15429590?ean=9780525555247"><strong>The Anthropocene Reviewed</strong></a>. John Green is a heck of an essayist. I think the podcast series these essays were based on was slightly better if you feel like you have to choose. I implore you to listen to <a href="https://www.wnycstudios.org/podcasts/anthropocene-reviewed/episodes/episode-3-googling-strangers-and-kentucky-bluegrass">the one about Googling strangers</a>. If you liked that and can handle some more emotional terrorism, follow it up <a href="https://gimletmedia.com/shows/heavyweight/j4hg2jz">with this episode of Heavyweight</a>. (A−)</p>
<h2 id="television"><a href="https://www.leereamsnyder.com/#television" class="header-anchor"><span>Television</span></a></h2><p><a href="https://www.peacocktv.com/stream-tv/the-traitors"><strong>The Traitors</strong></a>. Because you know who the “traitors” are, this is Dramatic Irony: The Show. It’s still fun to cackle at the television when someone is spilling secrets and saying “I know I can trust you” to someone they absolutely can’t trust. Also there’s Alan Cummings peacocking around. (B)</p>
<p><a href="https://www.peacocktv.com/stream-tv/poker-face"><strong>Poker Face</strong></a>. A little uneven&#8202;—&#8202;the season peaks early with the <span class="sc">BBQ</span> joint episode&#8202;—&#8202;but Natasha Lyonne is incredible, there’s fun guest stars, and each episode’s mystery is solid. (A−)</p>
<p><a href="https://www.netflix.com/title/81193104"><strong>Murderville</strong></a>. Each week there’s a new murder to solve and a new guest star, but the guest&#8202;—&#8202;and only the guest&#8202;—&#8202;doesn’t get a script and has to improvise through it. Not every bit lands but when it’s clicking, it’s great. Marshawn Lynch slays during his guest stint. (B)</p>
<p><a href="https://www.hulu.com/series/bba197b5-eb03-4a09-b5f6-f04c053471d7"><strong>Scrubs</strong></a>. Mostly a rewatch. This was one of my favorite shows back when it was originally airing, but I had never seen it all end-to-end. Similar to <em>How I Met Your Mother</em>, this is a terrific sitcom with an excellent mix of laughs and heart and a handful of episodes that should go in a “Greatest episodes of television of all time” hall of fame… and a final season that’s so so terrible that it crushes the good feelings you had about it. (B+ seasons 1&#8202;–&#8202;8; F+ season 9)</p>
<p><a href="https://www.hbo.com/somebody-somewhere"><strong>Somebody Somewhere</strong></a>. As I was telling a friend the other day: finally, a show that isn’t about living in New York or Los Angeles. This show treats everyone on it with such kindness. Bridget Everett is a treasure. (A)</p>
<p><a href="https://tv.apple.com/us/show/shrinking/umc.cmc.apzybj6eqf6pzccd97kev7bs"><strong>Shrinking</strong></a>. I support Jason Segel&#8202;—&#8202;indeed, anyone ever involved in <a href="https://en.wikipedia.org/wiki/Freaks_and_Geeks"><em>Freaks and Geeks</em></a>&#8202;—&#8202;in anything, and this is the perfect vehicle for his talents. Harrison Ford should do more comedies and be on a screen all the time, generally, IMO. If you were let down a smidge by the later seasons of <em>Ted Lasso</em>, look here. (A)</p>
<p><a href="https://www.peacocktv.com/stream-tv/mrs-davis"><strong>Mrs. Davis</strong></a>. Not everything in this show worked, exactly, but it was so committed to being batshit insane that it was impossible to look away. (B)</p>
<p><a href="https://www.fxnetworks.com/shows/reservation-dogs"><strong>Reservation Dogs</strong></a>. Perfect television. The big guest star in the penultimate episode was just so perfect. <a href="https://www.vulture.com/tv/reservation-dogs/">Kali Simmons’ recaps at Vulture</a> were enlightening supplemental reading, too. (A+)</p>
<p><a href="https://www.fxnetworks.com/shows/archer"><strong>Archer</strong></a>. Possibly the best voice cast ever assembled for this caustic, quippy, callback-dense cartoon spy comedy. The middle coma-dream seasons are just OK. (B+)</p>
<p><a href="https://www.amazon.com/gp/video/detail/B0BYZ6RH44/ref=atv_dp_share_cu_r"><strong>Good Omens season 2</strong></a>: Ugh with the so-called &quot;minisodes&quot;—the rest of the universe calls such things “flashbacks” and they aren’t novel. Still, the principals are fun; Jon Hamm steals every scene he’s in. (C−)</p>
<p><a href="https://www.hbo.com/the-gilded-age"><strong>The Gilded Age season 2</strong></a>: This is not a good show but I keep watching it. I like seeing big hats and Christine Baranski fearing change. (C )</p>
<p><a href="https://www.starz.com/us/en/series/party-down/2011"><strong>Party Down season 3</strong></a>: This accomplishes so much good in six short episodes: it meaningfully extends the arcs of its characters, concludes satisfyingly, smartly leaves the door open for more 🤞. Ken Marino mishandling a catering tray is the funniest bit of physical comedy I’ve seen in years. (A)</p>
<p><a href="https://www.netflix.com/title/81388090"><strong>The Wonderful Story of Henry Sugar</strong></a>. I love Wes Anderson, but I’ll admit that 40-odd minutes for this chatty, cozy Roald Dahl adaptation is the perfect amount of Wes Anderson. (A−)</p>
<p><a href="https://tv.apple.com/us/show/the-afterparty/umc.cmc.5wg8cnigwrkfzbdruaufzb6b0"><strong>The Afterparty season 1</strong></a>. A murder mystery retold through flashbacks, but each one is filmed like a different genre (romantic comedy, action, thriller, musical(!) and so on). Terrific cast. (A−)</p>
<p><a href="https://www.amazon.com/Deadloch-Season-1/dp/B0BYKCW8MW"><strong>Deadloch</strong></a>. Like <em>Shawn of the Dead</em> and <em>Hot Fuzz</em>, this threads the needle of being both a clever, twisty mystery <em>and</em> a wry send-up of the genre. (A for the show; F− for Amazon Prime’s trashy ads in the middle of it)</p>
<h2 id="movies"><a href="https://www.leereamsnyder.com/#movies" class="header-anchor"><span>Movies</span></a></h2><p><a href="https://johnwick.movie"><strong>John Wick Chapter 4</strong></a>. I wish they had split this into two shorter movies, but of course the action scenes were tremendous. (B+)</p>
<p><a href="https://en.wikipedia.org/wiki/Butch_Cassidy_and_the_Sundance_Kid"><strong>Butch Cassidy &amp; The Sundance Kid</strong></a>. I’ll watch anything with Paul Newman he’s too pretty. I think this one’s truly excellent for like half of it, but dragged towards the end. (B)</p>
<p><a href="https://en.wikipedia.org/wiki/The_Lost_City_(2022_film)"><strong>The Lost City</strong></a>. I’ll watch anything with Channing Tatum he’s too pretty. I really need to look into <em>Romancing The Stone</em>. (B)</p>
<p><a href="https://en.wikipedia.org/wiki/Spider-Man:_Across_the_Spider-Verse"><strong>Spider-Man: Across the Spider-Verse</strong></a>. I would have watched three more hours of this, and I suppose that I will when the sequel-conclusion comes out. A delight in every frame, even if it’s not the (relatively) self-contained bolt of lightning that <em>Into the Spider-Verse</em> was. (A−)</p>
<p><a href="https://en.wikipedia.org/wiki/Barbie_(film)"><strong>Barbie</strong></a>. I also would have watched three more hours of this. Give Greta Gerwig a damn Oscar nomination, you cowards! (A)</p>
<p><a href="https://en.wikipedia.org/wiki/Past_Lives_(film)"><strong>Past Lives</strong></a>. For a movie where nothing really happens, I was on the edge of my seat. Give Celine Song a damn Oscar nomination, you cowards! (A)</p>
<p><a href="https://en.wikipedia.org/wiki/Mission:_Impossible_&#8202;–&#8202;_Dead_Reckoning_Part_One"><strong>Mission: Impossible – Dead Reckoning Part One</strong></a>. Not as great as <em>Fallout</em> but still fun. Worth seeing for the car chase in Rome alone. (A−)</p>
<p><a href="https://en.wikipedia.org/wiki/Dungeons_%26_Dragons:_Honor_Among_Thieves"><strong>Dungeons and Dragons: Honor Among Thieves</strong></a>. I’ll watch anything with Chris Pine he’s too pretty. I should watch it again when I don’t have <span class="sc">COVID</span>, but I remember enjoying it when I could focus. (B)</p>
<p><a href="https://www.hallmarkchannel.com/round-and-round"><strong>Round and Round</strong></a>: I wouldn’t have known this delightful Hallmark Hanukkah movie existed if not for <a href="https://www.npr.org/2023/12/15/1219585032/one-last-hanukkah-gift-from-hallmark-round-and-round-is-a-really-fun-romcom">Linda Holmes reviewing it</a>. You had me at “time loop rom-com.” (B+)</p>
<p><a href="https://en.wikipedia.org/wiki/The_Muppet_Christmas_Carol"><strong>The Muppet Christmas Carol</strong></a>: I hadn’t watched this in like 30 years. Better than I remember. Michael Caine playing it absolutely straight is what elevates this so, so much. (A−)</p>
<p><a href="https://en.wikipedia.org/wiki/Bottoms_(film)"><strong>Bottoms</strong></a>. Here let me roll my handy random story idea dice. [High school] [Lesbian] [Outcast] [Fight Club] [Comedy]??? Somehow it works! There’s something funny happening in nearly every shot. (B+)</p>
<h2 id="music"><a href="https://www.leereamsnyder.com/#music" class="header-anchor"><span>Music</span></a></h2><p>Oh lordy <a href="https://pjvogt.substack.com/p/how-am-i-supposed-to-find-new-music">I’m old and don’t listen to new music anymore</a>.</p>
<p><a href="https://open.spotify.com/album/1bt6q2SruMsBtcerNVtpZB"><strong>Rumours</strong></a>. I had listened to a Fleetwood Mac Greatest Hits CD that I stole from my dad about 20,000 times, but I hadn’t gone through their proper albums. <a href="https://pitchfork.com/reviews/albums/17499-rumours/">This one’s perfect</a>, turns out. I <a href="https://embedded.substack.com/p/roman-empire-trend-is-over">don’t think about the Roman empire all that much</a>, but I think about the drums on “Dreams” roughly every day. (A+)</p>
<p><a href="https://www.oliviarodrigo.com/releases-archive/guts/"><strong>GUTS</strong></a>. Although there’s nothing here that reaches the heights of the perfectly prickly “deja vu,” the kid’s not a one-and-done, that’s for sure. (B+)</p>
<h2 id="video-games"><a href="https://www.leereamsnyder.com/#video-games" class="header-anchor"><span>Video games</span></a></h2><p><strong>Metroid Prime: Remastered</strong>. Oh hell yeah this was the best game on the Gamecube, and <a href="https://retroxp.substack.com/p/ranking-the-top-101-nintendo-games-99f?s=r">one of Nintendo’s best games ever</a>. With this remaster, it looks how I <em>remember</em> it looking, which means it looks <em>way better</em>&#8202;—&#8202;this is a stunning game. The only ding against it now it is lacks any sort of fast-travel to speed up the endgame fetch quests. This sent me down a bit of a Metroid rabbit hole. (A)</p>
<p><strong>Metroid Fusion</strong>. This came out at about the same time as <em>Metroid Prime</em>, but I never played it back then on the Game Boy. This one has a (prescient?) story about struggling with your artificial intelligence asshole of a boss. Too linear at first, but that makes it feel all the better when you eventually power up, defy orders, and smash your way through the map. (B−)</p>
<p><strong>Metroid Zero Mission</strong>. It’s the original Nintendo Metroid game, totally re-thought with more modern mechanics. The gameplay, progression, and map design are great. Has a real wild twist as you get near the end. Getting 100% here was an enormous pain in the ass, because the designers <a href="https://www.youtube.com/watch?v=k2hdr49UCiY&amp;t=29s">love twitchy Speed Boost puzzles</a> a little too much. (B+)</p>
<p><strong>Zelda: Tears of the Kingdom</strong>. <a href="https://www.leereamsnyder.com/tears-of-the-kingdom-tips">I was a fan</a>. One wouldn’t think you could improve on <em>Breath of the Wild</em>, but here we are. The rare game where there’s a half dozen ways to tackle any problem, and all of them are valid. (A+)</p>
<p><strong>Super Mario Wonder</strong>: There’s more imagination in any single random level of this one then there was in the entirety of the The Super Mario Bros. Movie. (B+)</p>
<p><strong>Super Mario RPG remastered</strong>: Not as charming as I remember it being, but it has its moments. (C+)</p>
<p><strong>Prince of Persia: The Lost Crown</strong>: I played this on the Switch. Because this is the buggiest modern game I’ve played&#8202;—&#8202;weird clipping issues, lock-ups during and after cutscenes, and tons of crashes&#8202;—&#8202;I can’t recommend it. Pity, because I love a <a href="https://en.wikipedia.org/wiki/Metroidvania">Metroidvania</a> (see above), and this one has a lot of good in it when it’s not busted. (D)</p>
<h2 id="podcasts"><a href="https://www.leereamsnyder.com/#podcasts" class="header-anchor"><span>Podcasts</span></a></h2><p><a href="https://www.theringer.com/60-songs-that-explain-the-90s"><strong>60 Songs That Explain The ’90s</strong></a>. Part culture study, part genre analysis, part artist history, and part Ohio dork biography, this is laser-targeted at me personally. I learn something interesting from every episode, even about songs and bands that I already adored. (A)</p>
<p><a href="https://pjvogt.substack.com"><strong>Search Engine</strong></a>. I’ve missed hearing PJ Vogt in my ears ever since <em>Reply All</em> fell apart. <a href="https://pjvogt.substack.com/p/whats-it-like-to-slowly-go-blind">“What’s it like to slowly go blind?”</a> is the current standout episode for me. (B+)</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Lookit how the Photo Shuffle iPhone wallpaper plays with depth]]></title>
            <link>https://www.leereamsnyder.com/fun-with-dogs-and-iphone-depth-effect</link>
            <guid>https://www.leereamsnyder.com/fun-with-dogs-and-iphone-depth-effect</guid>
            <pubDate>Tue, 05 Dec 2023 17:00:00 GMT</pubDate>
            <description><![CDATA[Also lookit my pup]]></description>
            <content:encoded><![CDATA[<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/heroes/otis-iphone-15-lock-screen-overlaps.jpeg" loading="lazy" width="1290" height="726" alt="" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/heroes/otis-iphone-15-lock-screen-overlaps.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/heroes/otis-iphone-15-lock-screen-overlaps.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/heroes/otis-iphone-15-lock-screen-overlaps.jpeg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/heroes/otis-iphone-15-lock-screen-overlaps.jpeg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/heroes/otis-iphone-15-lock-screen-overlaps.jpeg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/heroes/otis-iphone-15-lock-screen-overlaps.jpeg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/heroes/otis-iphone-15-lock-screen-overlaps.jpeg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1290/q/60/images/heroes/otis-iphone-15-lock-screen-overlaps.jpeg 1290w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>For a year or so I’ve been using a “Photo Shuffle” lock screen on my iPhone. If you’ve never used it, you pick a broad category of photos (like “People” or “Nature”) and then every once in a while it’ll change your lock screen’s photo to a random photo of that type from your library.</p>
<p>I have mine set to “Pets,” so it cycles through pictures of my dog, Otis. It’s great!</p>
<p>But when I got an iPhone 15 Pro the other month, I noticed that now the lock screen will try to arrange the photo so that the main subject will get placed near the system time, and then it’ll do this “overlap” effect to place the subject <em>barely</em> in front of the clock.</p>
<p>Words are hard. Here’s some examples:</p>
<figure>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/figures/otis-iphone-15-max-lock-screens-1.jpg" loading="lazy" width="3870" height="2796" alt="three iphone lock screens in a row. The first shows a side-profile of a brown dog; he appears to be smiling and his tongue is waaaay outside his mouth; the top of his head barely covers the “6:01” on the system time shown in large white numbers. The second shows the same dog sitting on a deck, smiling at the camera; the top of his head overlaps the “9:46” system time. The third shows the same dog curled up against a Christmas-themed pillow; he is looking at the camera; one ear is straight up, and it covers the colon in the “9:26” system time." srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/figures/otis-iphone-15-max-lock-screens-1.jpg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/figures/otis-iphone-15-max-lock-screens-1.jpg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/figures/otis-iphone-15-max-lock-screens-1.jpg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/figures/otis-iphone-15-max-lock-screens-1.jpg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/figures/otis-iphone-15-max-lock-screens-1.jpg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/figures/otis-iphone-15-max-lock-screens-1.jpg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/figures/otis-iphone-15-max-lock-screens-1.jpg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/figures/otis-iphone-15-max-lock-screens-1.jpg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/figures/otis-iphone-15-max-lock-screens-1.jpg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/figures/otis-iphone-15-max-lock-screens-1.jpg 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/figures/otis-iphone-15-max-lock-screens-1.jpg 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/figures/otis-iphone-15-max-lock-screens-1.jpg 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/figures/otis-iphone-15-max-lock-screens-1.jpg 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2880/q/60/images/figures/otis-iphone-15-max-lock-screens-1.jpg 2880w, https://www.leereamsnyder.com/resized-n-optimized-image/w/3870/q/60/images/figures/otis-iphone-15-max-lock-screens-1.jpg 3870w" sizes="(max-width: 80em) 97vw, (max-width: 99.9em) 62vw, 55vw"></p>
<figcaption>Like this</figcaption>
</figure>
<p>See how my doggo partially obscures the time? That.</p>
<p>I don’t know if this is an operating system thing or a hardware thing&#8202;—&#8202;they both would have been upgraded when I got the new phone. Theoretically this <a href="https://www.digitaltrends.com/mobile/how-use-depth-effect-ios-16-lock-screen/">“Depth Effect” came with iOS 16</a>, and <a href="https://support.apple.com/guide/iphone/create-a-custom-lock-screen-iph4d0e6c351/ios">was supported</a> on my older phone (an iPhone 11). But I don’t recall this happening on my old device with Photo Shuffle on.</p>
<p>Regardless of the why, what a dang delight!</p>
<p>At first I thought it must be reusing depth information from the phone’s multiple cameras (like for Portrait mode), but the left photo was taken with a regular camera, so that isn’t quite it.</p>
<p>There must be some sort of machine learning here to recognize the subjects, figure out some sort of depth map of the image, see if it’s possible to arrange things so that the time is still legible, and so on. I dunno which gaggle of engineers in Apple made this feature their passion project and got it out here, but 👏.</p>
<p>Sometimes it’s quite clever! Like the one on the right where the ear is shooting up to divide the hours and minutes? Dang.</p>
<p>Anyway, it’s a tiny little thing that I’ve been enjoying. And it’s an excuse to post a bunch of pictures of my dog. Win win.</p>
<figure>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/figures/otis-iphone-15-max-lock-screens-2.jpg" loading="lazy" width="3870" height="2796" alt="three iphone lock screens in a row. The first shows a front-facing portrait of a brown dog; he appears to be smiling and his tongue is way outside his mouth like a little goon; the top of his head barely covers the “12:51” on the system time shown in large white numbers. The second shows the same dog sitting on a mat near a doorway; he is holding a yellow bone and appears to be about to drop it; the top of his head overlaps the “7:17” system time. The third shows the same dog dressed up as a mail carrier for Halloween; he is looking pathetically off-camera; his adorable little hat partially obscures the “9:26” system time." srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/figures/otis-iphone-15-max-lock-screens-2.jpg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/figures/otis-iphone-15-max-lock-screens-2.jpg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/figures/otis-iphone-15-max-lock-screens-2.jpg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/figures/otis-iphone-15-max-lock-screens-2.jpg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/figures/otis-iphone-15-max-lock-screens-2.jpg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/figures/otis-iphone-15-max-lock-screens-2.jpg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/figures/otis-iphone-15-max-lock-screens-2.jpg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/figures/otis-iphone-15-max-lock-screens-2.jpg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/figures/otis-iphone-15-max-lock-screens-2.jpg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/figures/otis-iphone-15-max-lock-screens-2.jpg 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/figures/otis-iphone-15-max-lock-screens-2.jpg 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/figures/otis-iphone-15-max-lock-screens-2.jpg 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/figures/otis-iphone-15-max-lock-screens-2.jpg 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2880/q/60/images/figures/otis-iphone-15-max-lock-screens-2.jpg 2880w, https://www.leereamsnyder.com/resized-n-optimized-image/w/3870/q/60/images/figures/otis-iphone-15-max-lock-screens-2.jpg 3870w" sizes="(max-width: 80em) 97vw, (max-width: 99.9em) 62vw, 55vw"></p>
</figure>
<figure>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/figures/otis-iphone-15-max-lock-screens-3.jpg" loading="lazy" width="3870" height="2796" alt="three iphone lock screens in a row. The first shows a portrait of a brown dog; the camera is near the dog’s rear; the dog is looking back towards the camera with a puzzled look on his face; the top of his head obscures the “11:32” on the system time shown in large white numbers. The second shows the face of the same dog resting on a person’s leg, facing the camera; Christmas lights are out of focus in the background; the top of his head overlaps the “7:31” system time. The third shows the same dog as a puppy lounging in a ‘sling’-style chair; his paw is nestled under his nose and he is looking, sleepily, straight at the camera; the crest of his head covers the colon in the “9:17” system time." srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/figures/otis-iphone-15-max-lock-screens-3.jpg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/figures/otis-iphone-15-max-lock-screens-3.jpg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/figures/otis-iphone-15-max-lock-screens-3.jpg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/figures/otis-iphone-15-max-lock-screens-3.jpg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/figures/otis-iphone-15-max-lock-screens-3.jpg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/figures/otis-iphone-15-max-lock-screens-3.jpg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/figures/otis-iphone-15-max-lock-screens-3.jpg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/figures/otis-iphone-15-max-lock-screens-3.jpg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/figures/otis-iphone-15-max-lock-screens-3.jpg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/figures/otis-iphone-15-max-lock-screens-3.jpg 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/figures/otis-iphone-15-max-lock-screens-3.jpg 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/figures/otis-iphone-15-max-lock-screens-3.jpg 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/figures/otis-iphone-15-max-lock-screens-3.jpg 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2880/q/60/images/figures/otis-iphone-15-max-lock-screens-3.jpg 2880w, https://www.leereamsnyder.com/resized-n-optimized-image/w/3870/q/60/images/figures/otis-iphone-15-max-lock-screens-3.jpg 3870w" sizes="(max-width: 80em) 97vw, (max-width: 99.9em) 62vw, 55vw"></p>
</figure>
<figure>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/figures/otis-iphone-15-max-lock-screens-4.jpg" loading="lazy" width="3870" height="2796" alt="three iphone lock screens in a row. The first shows an older brown dog; he is sitting in a sling-style chair and is wearing a tie clipped to his collar that has little bones on it; he looks vaguely unsettled at the fashion choices his parents subject him to; the top of his head barely covers the “7:55” on the system time shown in large white numbers. The second shows the same dog sitting on a deck in front of some lawn chairs; his tongue is out, cooling off in the summer heat; the top of his head overlaps the “12:27” system time. The third shows the same dog on a walk; the camera is low, near his feet, and the dog is smiling with a sun flare behind him; his head partially obscures the “9:06” system time." srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/figures/otis-iphone-15-max-lock-screens-4.jpg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/figures/otis-iphone-15-max-lock-screens-4.jpg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/figures/otis-iphone-15-max-lock-screens-4.jpg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/figures/otis-iphone-15-max-lock-screens-4.jpg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/figures/otis-iphone-15-max-lock-screens-4.jpg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/figures/otis-iphone-15-max-lock-screens-4.jpg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/figures/otis-iphone-15-max-lock-screens-4.jpg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/figures/otis-iphone-15-max-lock-screens-4.jpg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/figures/otis-iphone-15-max-lock-screens-4.jpg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/figures/otis-iphone-15-max-lock-screens-4.jpg 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/figures/otis-iphone-15-max-lock-screens-4.jpg 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/figures/otis-iphone-15-max-lock-screens-4.jpg 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/figures/otis-iphone-15-max-lock-screens-4.jpg 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2880/q/60/images/figures/otis-iphone-15-max-lock-screens-4.jpg 2880w, https://www.leereamsnyder.com/resized-n-optimized-image/w/3870/q/60/images/figures/otis-iphone-15-max-lock-screens-4.jpg 3870w" sizes="(max-width: 80em) 97vw, (max-width: 99.9em) 62vw, 55vw"></p>
</figure>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Let’s make a web component for doing "Select All" checkboxes]]></title>
            <link>https://www.leereamsnyder.com/select-allosaurus-web-component</link>
            <guid>https://www.leereamsnyder.com/select-allosaurus-web-component</guid>
            <pubDate>Tue, 21 Nov 2023 17:00:00 GMT</pubDate>
            <description><![CDATA[Did I make this just for the custom name? Maybe!]]></description>
            <content:encoded><![CDATA[<p>The other day I <a href="https://www.leereamsnyder.com/web-component-and-somehow-also-js-101">wrote a whole thing</a> about web components, but mostly it was about deciphering <code>this</code>, constructors, and classes in JavaScript.</p>
<p>Truth is, I’ve worked with web components for years but I haven’t written very many library-free ones (I’ve used Lit and Stencil a good bit). As luck would have it, I had a good excuse to make one at work today. Figured it was worth sharing.</p>
<p>So, the situation was we had a group of many checkboxes, and we wanted to add an additional “Select all” checkbox that would check or uncheck all of them at once.</p>
<p>Pretty typical markup:</p>
<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">fieldset</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">legend</span>&gt;</span>Why didn’t you write about web components sooner?<span class="hljs-tag">&lt;/<span class="hljs-name">legend</span>&gt;</span>

  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
    <span class="hljs-comment">&lt;!-- this is our &quot;special&quot; controlling checkbox --&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;select-all&quot;</span> /&gt;</span>
      Select all
    <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>

  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;excuses&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;hungry&quot;</span> /&gt;</span>
    Thought about it; got hungry
  <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;excuses&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;distracted&quot;</span> /&gt;</span>
    Distracted by other shiny thing
  <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;excuses&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;imposter-syndrome&quot;</span> /&gt;</span>
    What do I know I&#x27;m just some guy
  <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">fieldset</span>&gt;</span>
</code></pre>
<p>The existing script for the app did the old-fashioned script thing where it’d wait for the document to finish, then set up all the event listeners…</p>
<pre><code class="language-js"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;DOMContentLoaded&#x27;</span>, <span class="hljs-function">() =&gt;</span> {
  <span class="hljs-keyword">const</span> selectAll = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;select-all&#x27;</span>)
  <span class="hljs-keyword">const</span> checkboxes = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;[name=&quot;excuses&quot;]&#x27;</span>)

  selectAll.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> {
    <span class="hljs-comment">// and so on…</span>
  })

  <span class="hljs-comment">// and so on with other initialization and event listeners</span>
})
</code></pre>
<p>But this seemed like the sort of thing where a so-called <a href="https://www.zachleat.com/web/a-taxonomy-of-web-component-types/">HTML web component</a> that enhances an existing element might be a better way to organize the logic. Plus, it’d be reusable!</p>
<p>So, with a hat-tip to Zach Leatherman for the name, I give you <code>&lt;select-allosaurus /&gt;</code>!</p>
<p>[Pauses for applause for the punny name. No applause is forthcoming.]</p>
<p>OK, then!</p>
<p>Wrap your special “select all” checkbox with it, specifying a <abbr>CSS</abbr> selector for the other checkboxes on the <code>target</code> attribute:</p>
<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">select-allosaurus</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;[name=&#x27;excuses&#x27;]&quot;</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;select-all&quot;</span> /&gt;</span>
    Select all
  <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">select-allosaurus</span>&gt;</span>
</code></pre>
<p>If you’d prefer to skip my whole journey and <a href="https://www.leereamsnyder.com/#the-final-component-code">jump to the final code, that’s down here</a>, along with <a href="https://codepen.io/leereamsnyder/pen/RwvyGjK">a CodePen of it my final component in action</a>.</p>
<h2 id="first-pass"><a href="https://www.leereamsnyder.com/#first-pass" class="header-anchor"><span>First pass</span></a></h2><p>So here was my first pass at that component:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">SelectAllosaurus</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">HTMLElement</span> {
  <span class="hljs-title function_">connectedCallback</span>(<span class="hljs-params"></span>) {
    <span class="hljs-keyword">const</span> selectAllCheckbox = (<span class="hljs-variable language_">this</span>.<span class="hljs-property">selectAllCheckbox</span> =
      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;input[type=&quot;checkbox&quot;]&#x27;</span>))

    <span class="hljs-keyword">if</span> (!selectAllCheckbox) <span class="hljs-keyword">return</span>

    selectAllCheckbox.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">selectAllChangedCallback</span>)
  }

  <span class="hljs-title function_">getOtherCheckboxes</span>(<span class="hljs-params"></span>) {
    <span class="hljs-keyword">const</span> selector = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&#x27;target&#x27;</span>)
    <span class="hljs-keyword">return</span> [...<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(selector)]
  }

  <span class="hljs-title function_">selectAllChangedCallback</span>(<span class="hljs-params">event</span>) {
    <span class="hljs-keyword">const</span> newChecked = event.<span class="hljs-property">target</span>.<span class="hljs-property">checked</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getOtherCheckboxes</span>().<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">checkbox</span>) =&gt;</span> {
      checkbox.<span class="hljs-property">checked</span> = newChecked
    })
  }
}

customElements.<span class="hljs-title function_">define</span>(<span class="hljs-string">&#x27;select-allosaurus&#x27;</span>, <span class="hljs-title class_">SelectAllosaurus</span>)
</code></pre>
<p>So the <code>connectedCallback()</code> method looks for a child element checkbox, then adds an event listener that fires the <code>selectAllChangedCallback()</code> method when that checkbox’s value changes.</p>
<p>When that happens, we look up all the other checkboxes using the <code>target</code> attribute in the markup as a selector. Then we set all their <code>checked</code> attributes to match the “Select all” checkbox.</p>
<p>I felt pretty good about this chunk of code, tried it out, and of course it… didn’t work!</p>
<p>Can you spot the bug?</p>
<h2 id="fixing-issues-with-this-in-class-methods"><a href="https://www.leereamsnyder.com/#fixing-issues-with-this-in-class-methods" class="header-anchor"><span>Fixing issues with “this” in class methods</span></a></h2><p>This is one of those things where I’ve footgun’d myself a billion times while writing older-style React components with <a href="https://react.dev/reference/react/Component">their class syntax</a>.</p>
<p>The problems starts when I added that event listener like so…</p>
<pre><code class="language-js">selectAllCheckbox.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">selectAllChangedCallback</span>)
</code></pre>
<p>This is an extremely common mistake when dealing with <code>this</code> and callbacks in class code. What this is roughly equivalent to is writing:</p>
<pre><code class="language-js"><span class="hljs-keyword">const</span> selectAllChangedCallback = <span class="hljs-variable language_">this</span>.<span class="hljs-property">selectAllChangedCallback</span>
selectAllCheckbox.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, selectAllChangedCallback)
</code></pre>
<p>… and you might recall from <a href="https://www.leereamsnyder.com/web-component-and-somehow-also-js-101#what-is-this">very early in my last article</a> that strange things happen with the value of <code>this</code> in a method when you separate a method from its parent object and call it later.</p>
<p>In our case, with the method effectively stripped from its context, <code>this</code> will no longer be our custom element. It’ll weirdly be <code>undefined</code> now?! So that results in an error when we try to call the <code>selectAllChangedCallback</code> off of <code>undefined</code>.</p>
<p>This is very avoidable! We have a few options.</p>
<p>Option One is to use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions">an arrow function</a> for the callback to <code>addEventListener</code>:</p>
<pre><code class="language-js">selectAllCheckbox.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> {
  <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">selectAllChangedCallback</span>(event)
})
</code></pre>
<p>One of the most charming aspects of arrow functions&#8202;—&#8202;besides their terse syntax&#8202;—&#8202;is that they maintain the current contextual value of <code>this</code> as they’re passed around. Handy!</p>
<p>So now <code>selectAllChangedCallback</code> is re-attached to <code>this</code> (our custom element) and <code>this</code> won’t change later. Problem solved.</p>
<p>Option Two is to use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind">the function method <code>.bind</code></a>, which lets you specify what <code>this</code> <em>will be</em> any subsequent times a function is called:</p>
<pre><code class="language-js"><span class="hljs-keyword">const</span> callback = <span class="hljs-variable language_">this</span>.<span class="hljs-property">selectAllChangedCallback</span>.<span class="hljs-title function_">bind</span>(<span class="hljs-variable language_">this</span>)
selectAllCheckbox.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, callback)
</code></pre>
<p>I mean, <code>this.whateverMethod.bind(this)</code> <em>feels</em> so unnecessary, but it works.</p>
<p>But! You have to remember (and also know precisely when) you have to tack <code>.bind(this)</code> on a method. And a lot of people don’t know precisely when they have to do this, because, and I cannot stress this enough, basically no one writing JavaScript understands how <code>this</code> works, except me and you if you read my last article (and hoo boy did I gloss over a lot of nuance there).</p>
<p>Anyway, another drawback to this is if you have method calls sprinkled elsewhere in other methods, you might have to <code>.bind(this)</code> all of those as well, which is easy to forget.</p>
<p>To avoid that problem, Option Three is basically Nuclear Option Two. Here you reflexively use <code>.bind(this)</code> for every class method in the <code>constructor()</code>:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">extends</span> <span class="hljs-title class_">HTMLElement</span> {
  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">super</span>()

    <span class="hljs-variable language_">this</span>.<span class="hljs-property">someMethod</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">someMethod</span>.<span class="hljs-title function_">bind</span>(<span class="hljs-variable language_">this</span>)
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">someOtherMethod</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">someOtherMethod</span>.<span class="hljs-title function_">bind</span>(<span class="hljs-variable language_">this</span>)
  }

  <span class="hljs-title function_">someMethod</span>(<span class="hljs-params"></span>) {}

  <span class="hljs-title function_">someOtherMethod</span>(<span class="hljs-params"></span>) {}
}
</code></pre>
<p>Now when we make an instance of the class, we’re overriding all the methods with functions that are now perma-<code>this</code>’d to our new object.</p>
<p>That’s pretty safe! I see folks using this pattern <em>a lot</em> in the wild. But it also sucks because when you add or remove or rename class methods you also have to add or remove or rename those bound redefinitions in the constructor. Tedious!</p>
<p>Ah, but <a href="https://stackoverflow.com/a/47632110">clever people put all our options together</a> and figured out that defining a class <em>property</em> like so:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">extends</span> <span class="hljs-title class_">HTMLElement</span> {
  something = <span class="hljs-number">42</span>
}
</code></pre>
<p>… is syntax sugar for setting a property to that value in the constructor, like this…</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">extends</span> <span class="hljs-title class_">HTMLElement</span> {
  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">super</span>()
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">something</span> = <span class="hljs-number">42</span>
  }
}
</code></pre>
<p>… so if you were to define a property <em>with an arrow function</em>…</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">extends</span> <span class="hljs-title class_">HTMLElement</span> {
  someMethod = <span class="hljs-function">() =&gt;</span> {
    <span class="hljs-comment">// do stuff with &quot;this&quot;</span>
  }
}
</code></pre>
<p>…that’s basically the same thing as…</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">extends</span> <span class="hljs-title class_">HTMLElement</span> {
  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">super</span>()

    <span class="hljs-variable language_">this</span>.<span class="hljs-property">someMethod</span> = <span class="hljs-function">() =&gt;</span> {
      <span class="hljs-comment">// do stuff with &quot;this&quot;</span>
    }
  }
}
</code></pre>
<p>Because arrow functions inherit <code>this</code> from the context in which they’re defined, that’s not terribly different from using <code>.bind(this)</code> on a method of the same name…</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">extends</span> <span class="hljs-title class_">HTMLElement</span> {
  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">super</span>()

    <span class="hljs-variable language_">this</span>.<span class="hljs-property">someMethod</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">someMethod</span>.<span class="hljs-title function_">bind</span>(<span class="hljs-variable language_">this</span>)
  }

  <span class="hljs-title function_">someMethod</span>(<span class="hljs-params"></span>) {
    <span class="hljs-comment">// do stuff with &quot;this&quot;</span>
  }
}
</code></pre>
<p>…which looks just like Option Three, but you only had to write…</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">extends</span> <span class="hljs-title class_">HTMLElement</span> {
  someMethod = <span class="hljs-function">() =&gt;</span> {
    <span class="hljs-comment">// do stuff with &quot;this&quot;</span>
  }
}
</code></pre>
<p>… and not dink around manually with <code>.bind(this)</code> in the constructor. Huzzah!</p>
<p>Because life’s too short for dealing with <code>this</code> problems, I define custom class methods with arrow functions defensively by default.</p>
<p>So, let’s fix my class:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">SelectAllosaurus</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">HTMLElement</span> {
  <span class="hljs-title function_">connectedCallback</span>(<span class="hljs-params"></span>) {
    <span class="hljs-comment">// SNIP same as before</span>
  }

  <span class="hljs-comment">// arrow functions for defining methods now</span>
  getOtherCheckboxes = <span class="hljs-function">() =&gt;</span> {
    <span class="hljs-keyword">const</span> selector = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&#x27;target&#x27;</span>)
    <span class="hljs-keyword">return</span> [...<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(selector)]
  }

  selectAllChangedCallback = <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> {
    <span class="hljs-keyword">const</span> newChecked = event.<span class="hljs-property">target</span>.<span class="hljs-property">checked</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getOtherCheckboxes</span>().<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">checkbox</span>) =&gt;</span> {
      checkbox.<span class="hljs-property">checked</span> = newChecked
    })
  }
}
</code></pre>
<p>That works!</p>
<p><a href="https://codepen.io/leereamsnyder/pen/YzBagVb">Here’s a CodePen with everything up to this point in action</a>.</p>
<p><strong>Update</strong>: After publishing this I learned <a href="https://thathtml.blog/2023/07/handleevent-is-mindblowing/">from Jared White about the built-in <code>handleEvent()</code> method</a> (<a href="https://dev.to/thepassle/events-are-the-shit-b3i">via Andrea Giammarchi</a>), which offers some intriguing possibilities here too. You could just watch for a <code>change</code> event on the component itself with <code>this.addEventListener('change', this)</code>, then you can catch the bubbling-up <code>change</code> events from a child checkbox in the <code>handleEvent()</code> method. As a bonus, you avoid <em>this entire goddamn problem</em> where your event handler callbacks need to be bound to <code>this</code> somehow. <em>Loving</em> all the blog chatter about web components lately!</p>
<h2 id="handling-indeterminate-states"><a href="https://www.leereamsnyder.com/#handling-indeterminate-states" class="header-anchor"><span>Handling indeterminate states</span></a></h2><p>Now, if you play around with that, you might notice that if you select all of the checkboxes, then clear some of them, the “Select all” box stays checked.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/select-allosaurus-missing-indeterminate.png" loading="lazy" width="1100" height="252" alt="Screen capture of a bunch of checkboxes. "Select all" checkbox is checked, but some of the checkboxes it controls are not checked" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/select-allosaurus-missing-indeterminate.png 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/select-allosaurus-missing-indeterminate.png 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/select-allosaurus-missing-indeterminate.png 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/select-allosaurus-missing-indeterminate.png 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/blog/select-allosaurus-missing-indeterminate.png 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/blog/select-allosaurus-missing-indeterminate.png 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1100/q/60/images/blog/select-allosaurus-missing-indeterminate.png 1100w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>Ideally our special checkbox would reflect this things-are-neither-all-checked-nor-all-unchecked state with <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#indeterminate_state_checkboxes"><code>indeterminate</code></a>.</p>
<p>That’s just a few more event listeners, so let’s add that:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">SelectAllosaurus</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">HTMLElement</span> {
  <span class="hljs-title function_">connectedCallback</span>(<span class="hljs-params"></span>) {
    <span class="hljs-keyword">const</span> selectAllCheckbox = (<span class="hljs-variable language_">this</span>.<span class="hljs-property">selectAllCheckbox</span> =
      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;input[type=&quot;checkbox&quot;]&#x27;</span>))

    <span class="hljs-keyword">if</span> (!selectAllCheckbox) <span class="hljs-keyword">return</span>

    selectAllCheckbox.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">selectAllChangedCallback</span>)

    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getOtherCheckboxes</span>().<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">checkbox</span>) =&gt;</span> {
      checkbox.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">update</span>)
    })

    <span class="hljs-comment">// initial checked/indeterminate setting</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">update</span>()
  }

  getOtherCheckboxes = <span class="hljs-function">() =&gt;</span> {
    <span class="hljs-keyword">const</span> selector = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&#x27;target&#x27;</span>)
    <span class="hljs-keyword">return</span> [...<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(selector)]
  }

  selectAllChangedCallback = <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> {
    <span class="hljs-keyword">const</span> newChecked = event.<span class="hljs-property">target</span>.<span class="hljs-property">checked</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getOtherCheckboxes</span>().<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">checkbox</span>) =&gt;</span> {
      checkbox.<span class="hljs-property">checked</span> = newChecked
    })
  }

  update = <span class="hljs-function">() =&gt;</span> {
    <span class="hljs-keyword">const</span> otherCheckboxes = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getOtherCheckboxes</span>()
    <span class="hljs-keyword">const</span> allChecked = otherCheckboxes.<span class="hljs-title function_">every</span>(<span class="hljs-function">(<span class="hljs-params">{ checked }</span>) =&gt;</span> checked)
    <span class="hljs-keyword">const</span> allNotChecked = otherCheckboxes.<span class="hljs-title function_">every</span>(<span class="hljs-function">(<span class="hljs-params">{ checked }</span>) =&gt;</span> !checked)

    <span class="hljs-variable language_">this</span>.<span class="hljs-property">selectAllCheckbox</span>.<span class="hljs-property">checked</span> = allChecked
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">selectAllCheckbox</span>.<span class="hljs-property">indeterminate</span> = !(allChecked || allNotChecked)
  }
}
</code></pre>
<p><a href="https://codepen.io/leereamsnyder/pen/BaMxKEX">Here’s a Codepen with that additional <code>indeterminate</code> handling added</a>.</p>
<h2 id="mounting-problems"><a href="https://www.leereamsnyder.com/#mounting-problems" class="header-anchor"><span>Mounting problems</span></a></h2><p>So in my previous article, I urged folks to try to do as much setup work as possible in the <code>connectedCallback</code> method, because that’s what runs when an element is actually added to the page.</p>
<p>Turns out there’s some nuance to that.</p>
<p>Of course there is.</p>
<p>So that all works perfectly well, <strong>assuming</strong> our custom <code>&lt;select-allosaurus /&gt;</code> element gets defined after the page is mostly finished loading.</p>
<p>Like, roughly your page markup is</p>
<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">select-allosaurus</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;[name=&#x27;excuses&#x27;]&quot;</span>&gt;</span>
  <span class="hljs-comment">&lt;!-- snip --&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">select-allosaurus</span>&gt;</span>

<span class="hljs-comment">&lt;!-- the rest of your page --&gt;</span>

<span class="hljs-comment">&lt;!-- or loading an external script, or using defer… --&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">
  <span class="hljs-keyword">class</span> <span class="hljs-title class_">SelectAllosaurus</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">HTMLElement</span> {
    <span class="hljs-comment">// snip</span>
  }
  customElements.<span class="hljs-title function_">define</span>(<span class="hljs-string">&#x27;select-allosaurus&#x27;</span>, <span class="hljs-title class_">SelectAllosaurus</span>)
</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
</code></pre>
<p>This way, the page’s <abbr>DOM</abbr> has been parsed already and we’re just waiting for our currently-doing-nothing element to be “upgraded” when <code>customElements.define</code> runs. Then its <code>connectedCallback</code> will run, we’ll be able to query for any child elements, and everything is good.</p>
<p>BUT, what if you were to define your component before it’s in the page?</p>
<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">
  <span class="hljs-keyword">class</span> <span class="hljs-title class_">SelectAllosaurus</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">HTMLElement</span> {
    <span class="hljs-comment">// snip</span>
  }
  customElements.<span class="hljs-title function_">define</span>(<span class="hljs-string">&#x27;select-allosaurus&#x27;</span>, <span class="hljs-title class_">SelectAllosaurus</span>)
</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>

<span class="hljs-comment">&lt;!-- the rest of your page --&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">select-allosaurus</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;[name=&#x27;excuses&#x27;]&quot;</span>&gt;</span>
  <span class="hljs-comment">&lt;!-- snip --&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> /&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">select-allosaurus</span>&gt;</span>
</code></pre>
<p>I thought this would be fine, but it’s really not. In my <code>connectedCallback</code>, I’d query for a child <code>input</code> and <code>this.querySelector</code> wouldn’t find it.</p>
<p>But, uh, it’s there! Right??</p>
<p>Wrong! Ish. When a custom element has been defined already <em>and</em> then it’s added to the page, the <abbr>DOM</abbr> parser is basically super greedy about initializing that element. It’s all</p>
<ol>
<li>Ah, I see a <code>&lt;select-allosaurus&gt;</code> and I know what that is! Let me run its <code>constructor()</code>!</li>
<li>Oh, it has attributes! Maybe I’ll run the <code>attributeChangedCallback()</code>!</li>
<li>OK great now I’ll run <code>connectedCallback()</code>!</li>
<li>Cool cool cool let’s keep working our way down the document and <em>oh butterbeans</em> <code>&lt;select-allosaurus&gt;</code> has some child elements! I’ll deal with those now…</li>
</ol>
<p>Put another way, <code>connectedCallback()</code> happens when the parser sees an opening tag, <em>not</em> after it has gone through any children and found the closing tag.</p>
<p>So if you’re querying for child elements in <code>connectedCallback</code>, that might not always, uh, work, because the browser at that point doesn’t even know those child elements exist in the tree.</p>
<p>This is a bummer, because I <em>thought</em> one of the most promising parts of using web components to enhance child elements in this fashion was that you could <em>just stop caring</em> about when and how to initialize them.</p>
<p>My in-brain model was the browser would see the element <em>and</em> its children, then handle initialization for you (via <code>connectedCallback</code>, ideally), so you’d always be good to go. Turns out, this is <a href="https://github.com/WICG/webcomponents/issues/551#issuecomment-429262811">not entirely correct</a>.</p>
<p>So what we <em>really</em> need is a callback that happens <em>after</em> all of an elements children have been parsed. That should be the best time to initialize all our stuff in our wrapper component. … Right?</p>
<p>Whelp, turns out that’s so complicated that <a href="https://github.com/WICG/webcomponents/issues/809">the Web Incubator Community Group has been going back and forth around it for over 4 years now</a>. Which doesn’t help us right now.</p>
<p>So what <em>can</em> we do about it right now?</p>
<p>Like with avoiding method + <code>this</code> shenanigans, we’ve got a few options.</p>
<p>Option One is bringing in <a href="https://github.com/WebReflection/html-parsed-element">Andrea Giammarchi’s <code>HTMLParsedElement</code> class</a> and extending off of that, which now provides a <code>parsedCallback()</code> method:</p>
<pre><code class="language-js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">HTMLParsedElement</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;https://unpkg.com/html-parsed-element/esm/index.js&#x27;</span>

<span class="hljs-keyword">class</span> <span class="hljs-title class_">extends</span> <span class="hljs-title class_">HTMLParsedElement</span> {
  <span class="hljs-title function_">parsedCallback</span>(<span class="hljs-params"></span>) {
    <span class="hljs-comment">// children will be parsed at this point</span>
  }
}
</code></pre>
<p>Option Two, which is robust but also uggggggh, would be to set up a <code>MutationObserver</code> in your constructor, watching for any children to get added or removed from the custom element:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">extends</span> <span class="hljs-title class_">HTMLElement</span> {
  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">super</span>()

    <span class="hljs-variable language_">this</span>.<span class="hljs-property">mutationObserver</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">MutationObserver</span>(<span class="hljs-function"><span class="hljs-params">records</span> =&gt;</span> {
      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> {addedNodes, removedNodes} <span class="hljs-keyword">of</span> records) {
        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> addedNode <span class="hljs-keyword">of</span> <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(addedNodes)) {
          <span class="hljs-comment">// do some checks, maybe run this.setup if things look good</span>
        }
        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> removedNode <span class="hljs-keyword">of</span> <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(removedNodes)) {
          <span class="hljs-comment">// do some checks, maybe clean things up?</span>
        }
      }
    })

    <span class="hljs-comment">// start watching for added/removed child nodes</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">mutationObserver</span>.<span class="hljs-title function_">observe</span>(<span class="hljs-variable language_">this</span>, {<span class="hljs-attr">childList</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">subtree</span>: <span class="hljs-literal">true</span>})
  }

  setup = <span class="hljs-function">() =&gt;</span> {
    <span class="hljs-comment">// do your setup code</span>
  }
}
</code></pre>
<p>Option Three <a href="https://stackoverflow.com/a/75969785">is Fuck This Don’t Overthink It Just Use <code>setTimeout()</code></a>:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">extends</span> <span class="hljs-title class_">HTMLElement</span> {
  <span class="hljs-title function_">connectedCallback</span>(<span class="hljs-params"></span>) {
    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {
      <span class="hljs-comment">// do your setup code</span>
      <span class="hljs-comment">// children will be parsed now</span>

      <span class="hljs-comment">// note the arrow function so &quot;this&quot; still works!</span>
    })
  }
}
</code></pre>
<p>And that works! It’s fine!</p>
<p>But <code>setTimeout</code> always <em>feels</em> like the last resort of scoundrels, even though this is perfectly functional.</p>
<p>Finally, I saw <a href="https://www.milezero.org/index.php/tech/web/components/chiaroscuro.html">an intriguing option in this great article on web components by Thomas Wilburn</a>, who knows a thing or thousand about them. He points out that you could use the shadow <span class="sc">DOM</span>…</p>
<p>[Boos, hisses from the audience]</p>
<p>Whoa whoa whoa whoa whoa I know that it feels like we’re all trying to avoid that, but hear me out! We set up possibly the simplest shadow <span class="sc">DOM</span> possible, a single <code>&lt;slot&gt;</code>, in the constructor:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">extends</span> <span class="hljs-title class_">HTMLElement</span> {
  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">super</span>()
    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">attachShadow</span>({<span class="hljs-attr">mode</span>: <span class="hljs-string">&#x27;open&#x27;</span>})
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">shadowRoot</span>.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&#x27;&lt;slot&gt;&lt;/slot&gt;&#x27;</span>
  }
}
</code></pre>
<p>With <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/slot">one default <code>&lt;slot&gt;</code></a>, any child element will get teleported into our element’s shadow <span class="sc">DOM</span>.</p>
<p>The great part of slotted content is that it’s still very much “part” of the parent document. Unlike elements and styles solely defined in the shadow <span class="sc">DOM</span> of a component, slotted elements still get <abbr>CSS</abbr> from the parent page and appear as direct children of the element without having to jump through hoops like querying <code>element.shadowRoot</code>.</p>
<p>Also! When slots get filled, there’s a <code>slotchange</code> event! Here’s what Thomas says about that:</p>
<blockquote>
<p><code>slotchange</code> is basically connectedCallback, but for direct children instead the custom element itself: you get notified whenever the elements in a slot are added or removed.</p>
</blockquote>
<p>Which is, basically, exactly what we want! Let’s set that up:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">extends</span> <span class="hljs-title class_">HTMLElement</span> {
  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">super</span>()
    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">attachShadow</span>({<span class="hljs-attr">mode</span>: <span class="hljs-string">&#x27;open&#x27;</span>})
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">shadowRoot</span>.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&#x27;&lt;slot&gt;&lt;/slot&gt;&#x27;</span>

    <span class="hljs-variable language_">this</span>.<span class="hljs-property">shadowRoot</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;slotchange&#x27;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">setup</span>)
  }

  setup = <span class="hljs-function">() =&gt;</span> {
    <span class="hljs-comment">// do all the setup code, event listeners, etc</span>
    <span class="hljs-comment">// can query for child elements with this.querySelector etc</span>
  }
}
</code></pre>
<p>Now your setup code will work, regardless of whether the element is defined super early, upgraded later, dynamically inserted in the <span class="sc">DOM</span>, whatever.</p>
<h2 id="hiding-everything-until-setup"><a href="https://www.leereamsnyder.com/#hiding-everything-until-setup" class="header-anchor"><span>Hiding everything until setup</span></a></h2><p>If our script around this component fails to load or execute for whatever reason, we’re in a pickle: we’ll have our child checkbox visible, but it does nothing at all. Not ideal!</p>
<p>This could be a real solid use case for having the component just create its own checkbox via script&#8202;—&#8202;discarding the whole “I’ll just enhance an existing input” thing.</p>
<p>However, I decided against that because this component will have to support a whole bunch of design systems and frameworks that all have different ideas of what the markup for a checkbox looks like (which is a separate problem but so it goes). We’ve got more custom web components, we’ve got <code>input</code> + <code>label</code> side-by-side, we’ve got <code>label</code>s wrapping <code>inputs</code>, we’ve got visually hidden <code>input</code>s controlling <abbr>SVG</abbr> &quot;checkboxes&quot;, you name it.</p>
<p>So this is just more useful for folks if this is a &quot;<abbr title="Bring Your Own">BYO</abbr> checkbox&quot; situation.</p>
<p>But how can we hide this until it sets up?</p>
<p>I mean, there’s like a hundred ways, but a simple one is to add the <code>hidden</code> attribute to the element:</p>
<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">select-allosaurus</span> <span class="hljs-attr">hidden</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;input[name=&#x27;excuses&#x27;]&quot;</span>&gt;</span>
  <span class="hljs-comment">&lt;!-- add input[type=checkbox] somewhere --&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">select-allosaurus</span>&gt;</span>
</code></pre>
<p>Then remove that attribute in its script:</p>
<pre><code class="language-js">setup = <span class="hljs-function">() =&gt;</span> {
  <span class="hljs-comment">// SNIP other bits</span>

  <span class="hljs-variable language_">this</span>.<span class="hljs-property">hidden</span> = <span class="hljs-literal">false</span>
}
</code></pre>
<p>Done! Ish! Worth noting that <a href="https://css-tricks.com/the-hidden-attribute-is-visibly-weak/">the <code>hidden</code> attribute does hide elements but it’s pretty “weak”</a>; my global stylesheets typically have something like</p>
<pre><code class="language-css"><span class="hljs-selector-attr">[hidden]</span> {
  <span class="hljs-attribute">display</span>: none <span class="hljs-meta">!important</span>;
}
</code></pre>
<p>to beef it up.</p>
<h2 id="the-final-component-code"><a href="https://www.leereamsnyder.com/#the-final-component-code" class="header-anchor"><span>The final component code</span></a></h2><p>Here’s putting all that together with the component definition:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">SelectAllosaurus</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">HTMLElement</span> {
  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">super</span>()
    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">attachShadow</span>({ <span class="hljs-attr">mode</span>: <span class="hljs-string">&#x27;open&#x27;</span> })
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">shadowRoot</span>.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&#x27;&lt;slot&gt;&lt;/slot&gt;&#x27;</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">shadowRoot</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;slotchange&#x27;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">setup</span>)
  }

  setup = <span class="hljs-function">() =&gt;</span> {
    <span class="hljs-keyword">const</span> selectAllCheckbox = (<span class="hljs-variable language_">this</span>.<span class="hljs-property">selectAllCheckbox</span> =
      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;input[type=&quot;checkbox&quot;]&#x27;</span>))

    <span class="hljs-keyword">if</span> (!selectAllCheckbox) <span class="hljs-keyword">return</span>

    <span class="hljs-variable language_">this</span>.<span class="hljs-property">hidden</span> = <span class="hljs-literal">false</span>

    selectAllCheckbox.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">selectAllChangedCallback</span>)

    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getOtherCheckboxes</span>().<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">checkbox</span>) =&gt;</span> {
      checkbox.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">update</span>)
    })

    <span class="hljs-comment">// initial checked/indeterminate setting</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">update</span>()
  }

  getOtherCheckboxes = <span class="hljs-function">() =&gt;</span> {
    <span class="hljs-keyword">const</span> selector = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&#x27;target&#x27;</span>)
    <span class="hljs-keyword">return</span> [...<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(selector)]
  }

  selectAllChangedCallback = <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> {
    <span class="hljs-keyword">const</span> newChecked = event.<span class="hljs-property">target</span>.<span class="hljs-property">checked</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getOtherCheckboxes</span>().<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">checkbox</span>) =&gt;</span> {
      checkbox.<span class="hljs-property">checked</span> = newChecked
    })
  }

  update = <span class="hljs-function">() =&gt;</span> {
    <span class="hljs-keyword">const</span> otherCheckboxes = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getOtherCheckboxes</span>()
    <span class="hljs-keyword">const</span> allChecked = otherCheckboxes.<span class="hljs-title function_">every</span>(<span class="hljs-function">(<span class="hljs-params">{ checked }</span>) =&gt;</span> checked)
    <span class="hljs-keyword">const</span> allNotChecked = otherCheckboxes.<span class="hljs-title function_">every</span>(<span class="hljs-function">(<span class="hljs-params">{ checked }</span>) =&gt;</span> !checked)

    <span class="hljs-variable language_">this</span>.<span class="hljs-property">selectAllCheckbox</span>.<span class="hljs-property">checked</span> = allChecked
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">selectAllCheckbox</span>.<span class="hljs-property">indeterminate</span> = !(allChecked || allNotChecked)
  }
}
</code></pre>
<p>Register it at any time, even before parsing the entire <span class="sc">DOM</span> like so:</p>
<pre><code class="language-js">customElements.<span class="hljs-title function_">define</span>(<span class="hljs-string">&#x27;select-allosaurus&#x27;</span>, <span class="hljs-title class_">SelectAllosaurus</span>)
</code></pre>
<p>And wrap it around your desired checkbox (you provide whatever input and label you like!) like so:</p>
<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">select-allosaurus</span> <span class="hljs-attr">hidden</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;input[name=&#x27;excuses&#x27;]&quot;</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> /&gt;</span>
    Select all
  <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">select-allosaurus</span>&gt;</span>
</code></pre>
<p>Neat!</p>
<p><a href="https://codepen.io/leereamsnyder/pen/RwvyGjK">Here’s a CodePen with this complete, sorta-Shadow-<span class="sc">DOM</span>-y version in action</a>. Note that I define the component in the <strong>HTML</strong> section now, before it appears in the markup and it still works.</p>
<p>This could be even more robust by implementing the child checkbox <code>change</code> event <a href="https://thathtml.blog/2023/07/handleevent-is-mindblowing/">via the <code>handleEvent()</code> method</a>&#8202;—&#8202;which would probably let us avoid using the shadow <span class="sc">DOM</span> entirely&#8202;—&#8202;and also I <em>really</em> should be adding (and removing!) event listeners on the “other” checkboxes via <code>attributeChangedCallback()</code> in case someone adjusts the <code>target</code> after the fact, but this is Good Enough For Now™ and also this article is too long already.</p>
<h2 id="ok-fine-lets-make-it-better"><a href="https://www.leereamsnyder.com/#ok-fine-lets-make-it-better" class="header-anchor"><span>OK fine let’s make it better</span></a></h2><p>(<strong>Added 19 December 2023</strong>) This was gnawing on me, so here’s a version of the component with all those changes:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">SelectAllosaurus</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">HTMLElement</span> {
  <span class="hljs-keyword">static</span> observedAttributes = [<span class="hljs-string">&#x27;target&#x27;</span>]

  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">super</span>()

    <span class="hljs-comment">// basic shadow DOM with a slot</span>
    <span class="hljs-comment">// lets us run a callback if/when the children change via `slotchange`</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">attachShadow</span>({ <span class="hljs-attr">mode</span>: <span class="hljs-string">&#x27;open&#x27;</span> })
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">shadowRoot</span>.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">`
      &lt;style&gt;
        :host { display: block; }
        :host[hidden] { display: none; }
      &lt;/style&gt;
      &lt;slot&gt;&lt;/slot&gt;`</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">shadowRoot</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;slotchange&#x27;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">onSlotChange</span>)
  }

  <span class="hljs-comment">// the only observed attribute is &quot;target&quot;</span>
  <span class="hljs-comment">// but if it changes, we need to figure out the new status of our checkbox</span>
  <span class="hljs-title function_">attributeChangedCallback</span>(<span class="hljs-params">name, oldValue, newValue</span>) {
    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">update</span>()
  }

  <span class="hljs-title function_">connectedCallback</span>(<span class="hljs-params"></span>) {
    <span class="hljs-comment">// this funnels through this.handleEvent</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, <span class="hljs-variable language_">this</span>)

    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">onDelegatedChange</span>)
  }

  <span class="hljs-comment">// cleanup</span>
  <span class="hljs-title function_">disconnectedCallback</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">removeEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, <span class="hljs-variable language_">this</span>)
    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">removeEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">onDelegatedChange</span>)
  }

  getSelectAllCheckbox = <span class="hljs-function">() =&gt;</span> {
    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;input[type=&quot;checkbox&quot;]&#x27;</span>)
  }

  getOtherCheckboxes = <span class="hljs-function">() =&gt;</span> {
    <span class="hljs-keyword">const</span> selector = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&#x27;target&#x27;</span>)
    <span class="hljs-keyword">return</span> [...<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(selector)]
  }

  <span class="hljs-comment">// this is the &quot;change&quot; event callback</span>
  <span class="hljs-title function_">handleEvent</span>(<span class="hljs-params">event</span>) {
    <span class="hljs-keyword">const</span> newChecked = event.<span class="hljs-property">target</span>.<span class="hljs-property">checked</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getOtherCheckboxes</span>().<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">checkbox</span>) =&gt;</span> {
      checkbox.<span class="hljs-property">checked</span> = newChecked
    })
  }

  onSlotChange = <span class="hljs-function">() =&gt;</span> {
    <span class="hljs-keyword">const</span> selectAllCheckbox = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getSelectAllCheckbox</span>()
    <span class="hljs-keyword">if</span> (!selectAllCheckbox) <span class="hljs-keyword">return</span>

    <span class="hljs-variable language_">this</span>.<span class="hljs-property">hidden</span> = <span class="hljs-literal">false</span>

    <span class="hljs-comment">// initial checked/indeterminate setting</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">update</span>()
  }

  onDelegatedChange = <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> {
    <span class="hljs-keyword">const</span> targets = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getOtherCheckboxes</span>()
    <span class="hljs-keyword">if</span> (targets.<span class="hljs-title function_">includes</span>(event.<span class="hljs-property">target</span>)) {
      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">update</span>()
    }
  }

  update = <span class="hljs-function">() =&gt;</span> {
    <span class="hljs-keyword">const</span> selectAllCheckbox = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getSelectAllCheckbox</span>()

    <span class="hljs-keyword">if</span> (!selectAllCheckbox || !<span class="hljs-variable language_">this</span>.<span class="hljs-property">isConnected</span>) <span class="hljs-keyword">return</span>

    <span class="hljs-keyword">const</span> otherCheckboxes = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getOtherCheckboxes</span>()

    <span class="hljs-keyword">const</span> allChecked = otherCheckboxes.<span class="hljs-title function_">every</span>(<span class="hljs-function">(<span class="hljs-params">{ checked }</span>) =&gt;</span> checked)
    <span class="hljs-keyword">const</span> allNotChecked = otherCheckboxes.<span class="hljs-title function_">every</span>(<span class="hljs-function">(<span class="hljs-params">{ checked }</span>) =&gt;</span> !checked)

    selectAllCheckbox.<span class="hljs-property">checked</span> = allChecked
    selectAllCheckbox.<span class="hljs-property">indeterminate</span> = !(allChecked || allNotChecked)
  }
}
</code></pre>
<p>I’ve shifted some things around and renamed some methods, but the big changes are:</p>
<ul>
<li>I’m putting a <code>change</code> event listener on the component itself (instead of the wrapped checkbox) with <code>this.addEventListener('change', this)</code>. Now, we don’t have to worry about adding or removing an event listener on any children checkboxes should those change after the fact; the one <code>handleEvent</code> callback will take care of any checkbox change, regardless of the child checkbox that triggered it.</li>
<li>I thought the above would let me get rid of the shadow <abbr>DOM</abbr> entirely, but the <code>slotchange</code> is still useful for managing the <code>hidden</code> attribute and running an <code>update()</code> if the child nodes change at some point.</li>
<li>Also, because I still have a shadow <abbr>DOM</abbr> anyway, I include some rudimentary scoped styles (mostly for handling <code>hidden</code>) so implementers don’t have to.</li>
<li>Instead of sticking an event listener on all the <code>target</code> checkboxes, I’m using <a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#event_delegation">event delegation</a> with a single <code>change</code> event listener on the document. With event delegation, I don’t have to concern myself with adding or removing listeners on the other checkboxes directly and I don’t have to worry about what happens if the <code>target</code> attribute changes; I just have to manage the single callback on the document and the the <code>update()</code> method will figure out the right thing to do when a change happens.</li>
<li>I’ve set up the <code>target</code> attribute as one of the <code>observedAttributes</code>, so if you were to change that at some point, the component will set things straight via <code>update()</code>.</li>
</ul>
<p>That’s a little more robust! Here’s <a href="https://codepen.io/leereamsnyder/pen/eYXOJqr">a CodePen with this latest version in action</a>.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Messin’ around with web components. Also—JavaScript, generally]]></title>
            <link>https://www.leereamsnyder.com/web-component-and-somehow-also-js-101</link>
            <guid>https://www.leereamsnyder.com/web-component-and-somehow-also-js-101</guid>
            <pubDate>Tue, 14 Nov 2023 17:00:00 GMT</pubDate>
            <description><![CDATA[Free crash course on JavaScripts objects, "this", and classes!]]></description>
            <content:encoded><![CDATA[<p>I’ve been enjoying <a href="https://buttondown.email/cascade/">Robin Rendle’s new email newsletter called The Cascade</a>. He’s been kicking the tires on web components (also known as custom elements) and last week posted <a href="https://buttondown.email/cascade/archive/005-why-web-components/">some thoughts about why you might want to use them</a>.</p>
<p>Now this week <a href="https://buttondown.email/cascade/archive/006-shadow-dom-is-not-a-good-default/">he went a little deeper into some code for one of these bad boys</a> and expressed some mild frustration and confusion about how it all works.</p>
<p>He’s trying to set up a custom element like this:</p>
<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">thanksgiving-button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">thanksgiving-button</span>&gt;</span>
</code></pre>
<p>With some script like:</p>
<pre><code class="language-js"><span class="hljs-keyword">const</span> template = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;template&#x27;</span>)
template.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">`&lt;button&gt;Happy Thanksgiving!&lt;/button&gt;`</span>

<span class="hljs-keyword">class</span> <span class="hljs-title class_">ThanksGivingButton</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">HTMLElement</span> {
  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">super</span>()
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_shadowRoot</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">attachShadow</span>({ <span class="hljs-attr">mode</span>: <span class="hljs-string">&#x27;open&#x27;</span> })
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_shadowRoot</span>.<span class="hljs-title function_">appendChild</span>(template.<span class="hljs-property">content</span>.<span class="hljs-title function_">cloneNode</span>(<span class="hljs-literal">true</span>))
  }
}

customElements.<span class="hljs-title function_">define</span>(<span class="hljs-string">&#x27;thanksgiving-button&#x27;</span>, <span class="hljs-title class_">ThanksGivingButton</span>)
</code></pre>
<p>Then, he says this:</p>
<blockquote>
<p>I think I have to use the constructor() here since I’m setting <code>this</code>. But also there are no good blog posts out there explaining any of this stuff and so I challenge you, nay dare you, to really explain all this to me</p>
</blockquote>
<p>Ha, <strong>challenge accepted</strong>.</p>
<h2 id="objects-classes-and-this"><a href="https://www.leereamsnyder.com/#objects-classes-and-this" class="header-anchor"><span>Objects, Classes and “this”</span></a></h2><p>To understand all of this (and, ahem, <code>this</code>), we have to step way, way back into first principles.</p>
<h3 id="almost-everything-in-javascript-is-an-object"><a href="https://www.leereamsnyder.com/#almost-everything-in-javascript-is-an-object" class="header-anchor"><span>(Almost) everything in JavaScript is an object</span></a></h3><p>Although this is simplifying some, in JavaScript if something is not a string (<code>&quot;hello&quot;</code>), number (<code>42</code>), or the programming-y bits like <code>true</code>, <code>false</code>, or <code>undefined</code>, it’s an object.</p>
<p>Think of objects like a basket of stuff. They have properties (bits of data on the object), and methods (functions attached to the object). For example, here is a simple object, stored as the variable <code>ultimateQuestion</code>:</p>
<pre><code class="language-js"><span class="hljs-keyword">const</span> ultimateQuestion = {
  <span class="hljs-attr">answer</span>: <span class="hljs-number">42</span>,
  <span class="hljs-attr">getAnswer</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {
    <span class="hljs-keyword">return</span> <span class="hljs-string">`The answer to life and so forth is 42`</span>
  },
}

<span class="hljs-comment">// accessing property by name</span>
<span class="hljs-comment">// ultimateQuestion[&#x27;answer&#x27;] is equivalent</span>
ultimateQuestion.<span class="hljs-property">answer</span>
<span class="hljs-comment">// --&gt; 42</span>

<span class="hljs-comment">// calling a method</span>
ultimateQuestion.<span class="hljs-title function_">getAnswer</span>()
<span class="hljs-comment">// --&gt; &quot;The answer to life and so forth is 42&quot;</span>
</code></pre>
<p>So in the above, <code>answer</code> is a property, and <code>getAnswer</code> is a method (function) on that object.</p>
<p>You’re probably familiar with some of the big important objects in a browser’s environment like <code>document</code> or <code>window</code>, but under the covers, basically everything is an object. Arrays are a special kind of object with numbers for properties and special methods like <code>.forEach()</code>; <code>Date</code>s are objects; even functions are, deep down, objects with properties and methods of their own.</p>
<h3 id="what-is-this"><a href="https://www.leereamsnyder.com/#what-is-this" class="header-anchor"><span>What is &quot;this&quot;?</span></a></h3><p>So, fair warning up front: the <code>this</code> keyword in JavaScript is one of the most confusing parts of the language.</p>
<p>You may have noticed on my <code>ultimateQuestion</code> that I repeated <code>42</code>, once in the answer property, then again in what I’m logging in the <code>getAnswer</code> method:</p>
<pre><code class="language-js"><span class="hljs-keyword">const</span> ultimateQuestion = {
  <span class="hljs-attr">answer</span>: <span class="hljs-number">42</span>,
  <span class="hljs-attr">getAnswer</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {
    <span class="hljs-keyword">return</span> <span class="hljs-string">`The answer to life and so forth is 42`</span>
  },
}
</code></pre>
<p>That kinda stinks. Like our <code>answer</code> is some data we’re storing on the object, and it’d be great if <code>getAnswer</code> could refer to that data, yah?</p>
<p>Enter <code>this</code>:</p>
<pre><code class="language-js"><span class="hljs-keyword">const</span> ultimateQuestion = {
  <span class="hljs-attr">answer</span>: <span class="hljs-number">42</span>,
  <span class="hljs-attr">getAnswer</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {
    <span class="hljs-keyword">return</span> <span class="hljs-string">`The answer to life and so forth is <span class="hljs-subst">${<span class="hljs-variable language_">this</span>.answer}</span>`</span>
  },
}
</code></pre>
<p>Lookit, now we’re using <code>this</code> in <code>getAnswer</code>. When we call that method…</p>
<pre><code class="language-js">ultimateQuestion.<span class="hljs-title function_">getAnswer</span>()
<span class="hljs-comment">// --&gt; &quot;The answer to life and so forth is 42&quot;</span>
</code></pre>
<p>… it works just like before, but now it’s referring to the <code>answer</code> property on the <code>ultimateQuestion</code> object (represented in the method by <code>this</code>)!</p>
<p>Should I change the <code>answer</code> property on the <code>ultimateQuestion</code> object, calling <code>getAnswer()</code> later on will do the right thing:</p>
<pre><code class="language-js">ultimateQuestion.<span class="hljs-property">answer</span> = <span class="hljs-number">1</span>
ultimateQuestion.<span class="hljs-title function_">getAnswer</span>()
<span class="hljs-comment">// --&gt; &quot;The answer to life and so forth is 1&quot;</span>
</code></pre>
<p>So, we’ve arrived at <strong>one</strong> of the things that <code>this</code> can be: <strong><code>this</code> is the <em>context</em> in which a method is called</strong>. With <code>ultimateQuestion.getAnswer()</code>, we are invoking the <code>getAnswer</code> method, but it’s attached to the <code>ultimateQuestion</code> object, so <code>this</code> within the method is <em>that specific</em> <code>ultimateQuestion</code> object.</p>
<p>In short, to know what <code>this</code> actually <em>is</em>, you have to look at what object the function is attached to when it is getting called.</p>
<pre><code class="language-js"><span class="hljs-comment">//                  ↙️ to know what &quot;this&quot; is in here…</span>
ultimateQuestion.<span class="hljs-title function_">getAnswer</span>()
<span class="hljs-comment">//    ↖️ …you have to look back here</span>
</code></pre>
<p>Now, I am glossing over <span class="sc">MANY</span> oddities in the language, like you can redefine what <code>this</code> is on the fly with the <code>.call()</code>, <code>.apply()</code>, and <code>.bind()</code> methods on functions, or if you were to try to peel off <code>getAnswer()</code> and call it separated from <code>ultimateQuestion</code>, it wouldn’t do the same thing…</p>
<pre><code class="language-js"><span class="hljs-comment">// with .call, you&#x27;re invoking a method with a different &quot;this&quot;</span>
ultimateQuestion.<span class="hljs-property">getAnswer</span>.<span class="hljs-title function_">call</span>({ <span class="hljs-attr">answer</span>: <span class="hljs-string">&#x27;strippers &amp; blackjack&#x27;</span> })
<span class="hljs-comment">// --&gt; &quot;The answer to life and so forth is strippers &amp; blackjack&quot;</span>

<span class="hljs-keyword">const</span> getAnswer = ultimateQuestion.<span class="hljs-property">getAnswer</span>
<span class="hljs-title function_">getAnswer</span>()
<span class="hljs-comment">// --&gt; actually what happens here depends on if you&#x27;re in strict mode or not lolololol</span>
</code></pre>
<p>JavaScript is bonkers sometimes! But let’s move on.</p>
<h3 id="creating-new-objects-with-constructor-functions"><a href="https://www.leereamsnyder.com/#creating-new-objects-with-constructor-functions" class="header-anchor"><span>Creating new objects with constructor functions</span></a></h3><p>So my little <code>ultimateQuestion</code> object is pretty great, but you might be thinking, “Golly it’d be great to create my <em>own</em> questions, with different answers!”</p>
<p>More power to you! This is where constructors come in!</p>
<p>A “constructor” is a fancy name for a function that returns a new object. That’s all they are!</p>
<p>But they’re, uh, a little weird. Let’s make a constructor function:</p>
<pre><code class="language-js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">UltimateQuestion</span>(<span class="hljs-params">answer</span>) {
  <span class="hljs-variable language_">this</span>.<span class="hljs-property">answer</span> = answer
  <span class="hljs-variable language_">this</span>.<span class="hljs-property">getAnswer</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {
    <span class="hljs-keyword">return</span> <span class="hljs-string">`The answer to life and so forth is <span class="hljs-subst">${<span class="hljs-variable language_">this</span>.answer}</span>`</span>
    <span class="hljs-comment">// btw don&#x27;t do this in real life</span>
    <span class="hljs-comment">// I am trying very hard not to say &quot;prototype&quot; in this article</span>
  }
}
</code></pre>
<p>(Constructors function names are capitalized by convention, but they don’t have to be.)</p>
<p>Wait, we’re using <code>this</code> here now? Hang in there!</p>
<p>You use a constructor function like so, with the <code>new</code> keyword:</p>
<pre><code class="language-js"><span class="hljs-keyword">const</span> myQuestion = <span class="hljs-keyword">new</span> <span class="hljs-title class_">UltimateQuestion</span>(<span class="hljs-number">42</span>)
myQuestion.<span class="hljs-title function_">getAnswer</span>()
<span class="hljs-comment">// --&gt; &quot;The answer to life and so forth is 42&quot;</span>
</code></pre>
<p>The super important part is the <code>new</code> keyword before calling the function (as in <code>new UltimateQuestion(42)</code>), which leads us to the <strong>second</strong> special thing that <code>this</code> can be: <strong>in a (constructor) function called with <code>new</code>, <code>this</code> is the new object being created</strong>.</p>
<p>So my <code>UltimateQuestion</code> function is sticking a property and method onto <code>this</code>, which is a new object every time someone calls <code>new UltimateQuestion()</code>.</p>
<p>Now because we have a dedicated function for building them, we can make a bunch of <code>UltimateQuestion</code>s, each with their own stored <code>answer</code> property and <code>getAnswer()</code> method that refers to that property.</p>
<pre><code class="language-js"><span class="hljs-keyword">const</span> bendersQuestion = <span class="hljs-keyword">new</span> <span class="hljs-title class_">UltimateQuestion</span>(<span class="hljs-string">&#x27;strippers &amp; blackjack&#x27;</span>)
bendersQuestion.<span class="hljs-title function_">getAnswer</span>()
<span class="hljs-comment">// --&gt; &quot;The answer to life and so forth is strippers &amp; blackjack&quot;</span>
</code></pre>
<p>You might have noticed that I didn’t have to do something like <code>return this</code> at the end of the constructor; that’s assumed when you use <code>new</code>.</p>
<p>You might be thinking, “Golly, this seems maybe needlessly complicated? If I wanted a function that makes an object for me, couldn’t I just… make and return a new object?”</p>
<pre><code class="language-js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">makeUltimateQuestion</span>(<span class="hljs-params">answer</span>) {
  <span class="hljs-keyword">return</span> {
    answer,
    <span class="hljs-attr">getAnswer</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {
      <span class="hljs-keyword">return</span> <span class="hljs-string">`The answer to life and forth is <span class="hljs-subst">${<span class="hljs-variable language_">this</span>.answer}</span>`</span>
    },
  }
}

<span class="hljs-keyword">const</span> myQuestion = <span class="hljs-title function_">makeUltimateQuestion</span>(<span class="hljs-number">42</span>)
<span class="hljs-keyword">const</span> bendersQuestion = <span class="hljs-title function_">makeUltimateQuestion</span>(<span class="hljs-string">&#x27;strippers &amp; blackjack&#x27;</span>)
bendersQuestion.<span class="hljs-property">answer</span>
<span class="hljs-comment">// --&gt; &quot;strippers &amp; blackjack&quot;</span>
</code></pre>
<p>That works! I’d probably do that!</p>
<p>But what constructor functions and <code>new</code> let you do is check what <em>kind</em> of object you have with <code>instanceof</code>.</p>
<pre><code class="language-js"><span class="hljs-keyword">const</span> ultimateQuestion = <span class="hljs-keyword">new</span> <span class="hljs-title class_">UltimateQuestion</span>(<span class="hljs-number">42</span>)

ultimateQuestion <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">UltimateQuestion</span>
<span class="hljs-comment">// --&gt; true</span>

ultimateQuestion <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">HTMLElement</span>
<span class="hljs-comment">// --&gt; false</span>

<span class="hljs-keyword">const</span> imposterQuestion = { <span class="hljs-attr">answer</span>: <span class="hljs-number">42</span> }
imposterQuestion <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">UltimateQuestion</span>
<span class="hljs-comment">// --&gt; false</span>
</code></pre>
<p>What <code>instanceof</code> does is tells you if the thing on the left sprang forth in any way from a constructor on the right.</p>
<p>This is… well in many years of writing JavaScript I rarely used <code>instanceof</code>, but it’s a low-key superpower in TypeScript.</p>
<p>Remember: almost everything is an object, so being able to <em>narrow down what specific kind of object something is</em>&#8202;—&#8202;and, accordingly, gaining some understanding of what properties and methods will be on that object&#8202;—&#8202;can be very useful.</p>
<pre><code class="language-typescript">someRandomObject.<span class="hljs-property">answer</span>
<span class="hljs-comment">// ❌ TypeScript error; it isn&#x27;t sure &quot;answer&quot; is a property on this object</span>

<span class="hljs-keyword">if</span> (someRandomObject <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">UltimateQuestion</span>) {
  <span class="hljs-comment">// ✅ TypeScript understands that &quot;answer&quot; is a property on this object</span>
  someRandomObject.<span class="hljs-property">answer</span>
}
</code></pre>
<p>A more practical real-world use is verifying that a given element is a specific <span class="sc">HTML</span> element, each of which has a dedicated constructor like <code>HTMLImageElement</code> or <code>HTMLParagraphElement</code>:</p>
<pre><code class="language-js"><span class="hljs-keyword">if</span> (someElement <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">HTMLImageElement</span>) {
  <span class="hljs-comment">// now TS knows the someElement could have &lt;img /&gt;-specific properties</span>
  <span class="hljs-comment">// like &quot;src&quot;, &quot;width&quot;, &quot;height&quot;</span>
}
</code></pre>
<h3 id="class-is-in-session"><a href="https://www.leereamsnyder.com/#class-is-in-session" class="header-anchor"><span>Class is in session</span></a></h3><p>Alright, now you can make your own new questions with whatever answer you want, but the constructor function…</p>
<pre><code class="language-js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">UltimateQuestion</span>(<span class="hljs-params">answer</span>) {
  <span class="hljs-variable language_">this</span>.<span class="hljs-property">answer</span> = answer
  <span class="hljs-variable language_">this</span>.<span class="hljs-property">getAnswer</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {
    <span class="hljs-keyword">return</span> <span class="hljs-string">`The answer to life and so forth is <span class="hljs-subst">${<span class="hljs-variable language_">this</span>.answer}</span>`</span>
  }
}
</code></pre>
<p>… is kinda <em>gross-looking</em>, yeah? You have to keep referring to <code>this</code> to add properties and methods to our newly-created object. Also, you kinda have to <em>know</em> that <code>UltimateQuestion</code> is a special constructor function&#8202;—&#8202;either because of the (not-required!) capitalized name or because it uses <code>this</code> inside.</p>
<p>Enter <code>class</code>, which is (really!) just a different, arguably nicer syntax for constructor functions. My original <code>ultimateQuestion</code> would look like this as a class:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">UltimateQuestion</span> {
  <span class="hljs-comment">// property</span>
  answer = <span class="hljs-number">42</span>

  <span class="hljs-comment">// method</span>
  <span class="hljs-title function_">getAnswer</span>(<span class="hljs-params"></span>) {
    <span class="hljs-keyword">return</span> <span class="hljs-string">`The answer to life and so forth is <span class="hljs-subst">${<span class="hljs-variable language_">this</span>.answer}</span>`</span>
  }
}

<span class="hljs-keyword">const</span> myQuestion = <span class="hljs-keyword">new</span> <span class="hljs-title class_">UltimateQuestion</span>()
myQuestion.<span class="hljs-property">answer</span>
<span class="hljs-comment">// --&gt; 42</span>
myQuestion.<span class="hljs-title function_">getAnswer</span>()
<span class="hljs-comment">// --&gt; &quot;The answer to life and so forth is 42&quot;</span>
</code></pre>
<p>(Like with constructor functions, it’s conventional to capitalize class names.)</p>
<p>There’s some weird stuff now! The property <code>answer</code> looks more like a variable assignment (<code>answer = 42</code>), instead of like an object property assignment (<code>answer: 42,</code>) for some reason!</p>
<p>Also, the class <code>UltimateQuestion</code> that we’re creating is <em>just a template</em> for objects. If you tried to do <code>UltimateQuestion.answer</code>, it’ll be <code>undefined</code>. You don’t actually make a real object with your properties and methods until you call it like a function with <code>new UltimateQuestion()</code>&#8202;—&#8202;just like constructor functions.</p>
<p>We’ve reverted a bit here; the <code>UltimateQuestion</code> class above doesn’t let you set any old answer.</p>
<p>If we wanted folks to define their own answers again, classes can have a special method called <code>constructor()</code>. When you go to actually make a new object from a class with <code>new</code>, the <code>constructor</code> method gets called.</p>
<p>Again, this is just like our “regular function” constructors, but with a class it’s now <em>explicitly</em> called <code>constructor</code>. Also just like before when we were calling a regular function with <code>new</code>, within the <code>constructor()</code> method the value of <code>this</code> is the new object that is being created.</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">UltimateQuestion</span> {
  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">answer</span>) {
    <span class="hljs-comment">// &quot;this&quot; is the new object we will be making</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">answer</span> = answer
  }

  <span class="hljs-title function_">getAnswer</span>(<span class="hljs-params"></span>) {
    <span class="hljs-keyword">return</span> <span class="hljs-string">`The answer to life and so forth is <span class="hljs-subst">${<span class="hljs-variable language_">this</span>.answer}</span>`</span>
  }
}

<span class="hljs-keyword">const</span> goodQuestion = <span class="hljs-keyword">new</span> <span class="hljs-title class_">UltimateQuestion</span>(<span class="hljs-number">42</span>)
<span class="hljs-keyword">const</span> worseQuestion = <span class="hljs-keyword">new</span> <span class="hljs-title class_">UltimateQuestion</span>(<span class="hljs-number">43</span>)
</code></pre>
<p>Here’s where I can see the appeal of this syntax:</p>
<ul>
<li>With <code>class</code>, we’re making it clear that we’re defining the template for an object.</li>
<li>Anything required for initialization or setup can be done in the <code>constructor</code>, so that has a nice, dedicated purpose and a clear(ish) name.</li>
<li>You can define the various methods on your object separately from the <code>constructor</code>, so they’re not cluttering up the constructor code.</li>
</ul>
<p>Oh, and also you can build on existing classes by…</p>
<h3 id="extending-classes"><a href="https://www.leereamsnyder.com/#extending-classes" class="header-anchor"><span>Extending classes</span></a></h3><p>Another neat thing about <code>class</code> is its close buddy <code>extends</code>. What <code>extends</code> lets you do is, well, extend existing classes. When you <code>extend</code> an existing class (or constructor), you are building on top of what the original does for free, without having to duplicate that code.</p>
<p>Here’s an example where I make a new class that adds additional methods:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">QuestionLogger</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">UltimateQuestion</span> {
  <span class="hljs-title function_">whisperAnswer</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`[mumbles softly] <span class="hljs-subst">${<span class="hljs-variable language_">this</span>.getAnswer()}</span>`</span>)
  }

  <span class="hljs-title function_">yellAnswer</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`THE ANSWER TO LIFE AND SO FORTH IS `</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">answer</span> + <span class="hljs-string">&#x27;!!!!!!&#x27;</span>)
  }
}
</code></pre>
<p>Above, <code>QuestionLogger</code> is the child or subclass, and it is building on top of what happens in <code>UltimateQuestion</code>, the parent class.</p>
<p>Check out how I can access and reuse the properties and methods of <code>UltimateQuestion</code>, via <code>this</code> in each of those methods. Those bits from <code>UltimateQuestion</code> come along for free because I am extending it.</p>
<p>Maybe we could add additional methods that let you change existing properties in a controlled way:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">CounterQuestion</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">UltimateQuestion</span> {
  <span class="hljs-title function_">increment</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">answer</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">answer</span> + <span class="hljs-number">1</span>
  }
  <span class="hljs-title function_">decrement</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">answer</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">answer</span> - <span class="hljs-number">1</span>
  }
}

<span class="hljs-keyword">const</span> counterQuestion = <span class="hljs-keyword">new</span> <span class="hljs-title class_">CounterQuestion</span>(<span class="hljs-number">42</span>)
counterQuestion.<span class="hljs-title function_">getAnswer</span>()
<span class="hljs-comment">// --&gt; &quot;The answer to life and so forth is 42&quot;</span>

counterQuestion.<span class="hljs-title function_">increment</span>()
counterQuestion.<span class="hljs-title function_">increment</span>()
counterQuestion.<span class="hljs-title function_">increment</span>()
counterQuestion.<span class="hljs-title function_">decrement</span>()
counterQuestion.<span class="hljs-title function_">getAnswer</span>()
<span class="hljs-comment">// --&gt; &quot;The answer to life and so forth is 44&quot;</span>
</code></pre>
<p>See how it’s totally fine to access and even change the properties on <code>this</code> in the child methods?</p>
<p>Child classes can even override a method on the parent class:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">LouderUltimateQuestion</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">UltimateQuestion</span> {
  <span class="hljs-title function_">getAnswer</span>(<span class="hljs-params"></span>) {
    <span class="hljs-keyword">return</span> <span class="hljs-string">`THE ANSWER TO LIFE AND SO FORTH IS <span class="hljs-subst">${<span class="hljs-variable language_">this</span>.answer}</span>!!!!!!`</span>
  }
}

<span class="hljs-keyword">new</span> <span class="hljs-title class_">LouderUltimateQuestion</span>(<span class="hljs-number">42</span>).<span class="hljs-title function_">getAnswer</span>()
<span class="hljs-comment">// --&gt; &quot;THE ANSWER TO LIFE AND SO FORTH IS 42!!!!!!&quot;</span>
</code></pre>
<p>Note also that I am not defining a <code>constructor()</code> method in the child classes. If I leave that off, they’ll just (kinda sorta) reuse the same one as the parent class.</p>
<p>But if you <em>do</em> want to override that constructor…</p>
<h3 id="what-is-super"><a href="https://www.leereamsnyder.com/#what-is-super" class="header-anchor"><span>What is “super()”?</span></a></h3><p>So when a child class is extending a parent <em>and</em> has to do more stuff in its <code>constructor</code>, that’s where <code>super()</code> comes into play.</p>
<p>Maybe a child class of <code>UltimateQuestion</code> wants let you pass in a template to control what gets returned when you call <code>getAnswer()</code>, so that’s an additional argument in the constructor:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">TemplatedAnswerQuestion</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">UltimateQuestion</span> {
  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">answer, template</span>) {
    <span class="hljs-variable language_">super</span>(answer)

    <span class="hljs-variable language_">this</span>.<span class="hljs-property">template</span> = template
  }

  <span class="hljs-title function_">getAnswer</span>(<span class="hljs-params"></span>) {
    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">template</span>.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&#x27;{{ANSWER}}&#x27;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">answer</span>)
  }
}

<span class="hljs-keyword">const</span> theQuestion = <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatedAnswerQuestion</span>(<span class="hljs-number">300</span>, <span class="hljs-string">&#x27;The answer is {{ANSWER}}&#x27;</span>)
theQuestion.<span class="hljs-title function_">getAnswer</span>()
<span class="hljs-comment">// --&gt; &quot;The answer is 300&quot;</span>
</code></pre>
<p>Because my child <code>TemplatedAnswerQuestion</code> needs to store more internal data (the <code>template</code> property when it gets created), it needs its own <code>constructor</code> method to store it somewhere when we make one of these.</p>
<p>But in a child’s <code>constructor()</code>, you must call the special <code>super()</code> function, which then <em>creates the new (parent) object first</em>. Once that happens, you can access <code>this</code> (the new object) in the child’s constructor, and it’ll have all the properties and methods of the parent class.</p>
<p>So if you need to store additional properties on <code>this</code> or do more custom setup, you’d do that in the <code>constructor()</code>, after calling <code>super()</code>.</p>
<p>If you’re <em>not</em> doing any of that, you don’t need to define the child’s <code>constructor()</code> method, and you also don’t need to worry about <code>super()</code> at all.</p>
<p>Why do you have to call <code>super()</code> manually? If you want to do something like logging or futzing with the arguments or what-have-you before the parent object gets created, you can do that:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">TemplatedAnswerQuestion</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">UltimateQuestion</span> {
  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">answer, template</span>) {
    <span class="hljs-comment">// stuff like logging before super() is fine</span>
    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;creating a TemplatedAnswerQuestion with arguments&#x27;</span>, { answer, template })

    <span class="hljs-comment">// you must call super() before accessing &quot;this&quot; here</span>
    <span class="hljs-variable language_">super</span>(answer)

    <span class="hljs-comment">// now you can access &quot;this&quot;</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">template</span> = template
  }
}
</code></pre>
<p>So you have <em>some</em> control over when <code>super()</code> gets called, but you must do it at some point <em>and</em> you must do it before using <code>this</code> in the child’s <code>constructor()</code>. It’s the law! Just kidding but you will get a runtime error if you don’t.</p>
<h3 id="parent-classes-might-defer-to-their-children"><a href="https://www.leereamsnyder.com/#parent-classes-might-defer-to-their-children" class="header-anchor"><span>Parent classes might defer to their children</span></a></h3><p>One last thing before we actually talk about web components, I promise.</p>
<p>Up to this point we’ve had a class (<code>UltimateQuestion</code>) and extended it to adjust or overwrite some parts of the resulting object. But the <code>UltimateQuestion</code> was fine on its own, honestly. The extensions were just for funsies.</p>
<p>What if we designed a class with the expectation that it <em>will</em> be extended?</p>
<p>Like (and OK yes I know this is super contrived) our parent class sets up a listener so that whenever you click on the document, we’ll do… something…</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">QuestionDocumentClicker</span> {
  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">answer</span>) {
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">answer</span> = answer

    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function">() =&gt;</span> {
      <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">documentClickedCallback</span>) {
        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">documentClickedCallback</span>()
      }
    })
  }
}
</code></pre>
<p>But look, we didn’t actually define that <code>documentClickedCallback()</code> method that gets called when you click.</p>
<p>What we’re doing here is <em>not</em> defining that method in the parent, and assuming that any child classes that are <code>extend</code>ing this class will define it for us. That way, the parent doesn’t particularly have to care about what happens; that’s a concern for the child class. The parent just stores the <code>answer</code> and sets up the event handler.</p>
<p>A child class then might look like this, where all it has to do is provide the “missing” <code>documentClickedCallback()</code> method:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyClicker</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">QuestionDocumentClicker</span> {
  <span class="hljs-title function_">documentClickedCallback</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`My super special answer is <span class="hljs-subst">${<span class="hljs-variable language_">this</span>.answer}</span>`</span>)
  }
}

<span class="hljs-keyword">const</span> myClicker = <span class="hljs-keyword">new</span> <span class="hljs-title class_">MyClicker</span>(<span class="hljs-number">42</span>)

<span class="hljs-comment">// (click the document)</span>
<span class="hljs-comment">// --&gt; [logs] &quot;My super special answer is 42&quot;</span>
</code></pre>
<p>If you’re wondering, “Huh? Why are we using ‘callback’ in the name for the method?” you don’t have to! That’s just a sorta-conventional way of describing a function that will get called at some future time, typically in response to an event like a click or a request completing or a timer finishing up.</p>
<p>We’ll see methods like this&#8202;—&#8202;where it’s on the child class to define what happens when certain events happen&#8202;—&#8202;in action with web components.</p>
<p>Phew! That’s a whirlwind tour of objects, constructors, <code>this</code>, <code>class</code>, and extending classes.</p>
<p>(I am papering over <em>a lot</em>, like how <a href="https://www.freecodecamp.org/news/prototypes-and-inheritance-in-javascript/">objects in JavaScript use “prototype” inheritance</a> so this is really all a facade to make it <em>look</em> like other “class”-based languages but, god, don’t go looking into that too deeply.)</p>
<h2 id="the-htmlelement-class"><a href="https://www.leereamsnyder.com/#the-htmlelement-class" class="header-anchor"><span>The HTMLElement class</span></a></h2><p>OK that went longer than I thought, so let’s tie all this back to web components.</p>
<p>When you’re defining a custom element’s class, you do so (typically!) by creating a new <code>class</code> that extends the <code>HTMLElement</code> class, which is the common-denominator shared class for all elements in <span class="sc">HTML</span>. Like here’s Robin’s example:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">ThanksGivingButton</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">HTMLElement</span> {
  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">super</span>()
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_shadowRoot</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">attachShadow</span>({ <span class="hljs-attr">mode</span>: <span class="hljs-string">&#x27;open&#x27;</span> })
    <span class="hljs-comment">// some other things use this._shadowRoot…</span>
  }
}
</code></pre>
<p>So, put another way given what we now understand about classes, we’re defining the setup code to make a new thing (<code>ThanksGivingButton</code>), and it is building on top of <code>HTMLElement</code>.</p>
<p>Now in that snippet above, Robin is using a <code>constructor()</code> for this new child thing.</p>
<p>Finally, <em>finally</em> I’m circling back to his initial point of confusion, but the first point is that for web components…</p>
<h3 id="probably-dont-use-a-constructor-on-custom-elements"><a href="https://www.leereamsnyder.com/#probably-dont-use-a-constructor-on-custom-elements" class="header-anchor"><span>(Probably) Don’t use a constructor on custom elements</span></a></h3><p>Like, you can, but you don’t have to, probably.</p>
<p>You probably want to do stuff when the element is fully “in” the page anyway&#8202;—&#8202;that’s when you can look for children of your custom element or replace the innards with templates <span class="sc">AKA</span> 99% of what you’d do in a web component. You should do that work in the <code>connectedCallback()</code> method.</p>
<p>In the same manner as our extremely contrived example <code>QuestionDocumentClicker</code> above, the <code>HTMLElement</code> parent class knows to call a child class’s <code>connectedCallback</code> method when the custom elements lands on the document.</p>
<p>A common misconception I see&#8202;—&#8202;and it appears that this might be where Robin is coming from&#8202;—&#8202;is that you can <em>only</em> access <code>this</code> in a constructor function, but as I’ve shown in my whirlwind tour of objects and constructors above, that’s not true at all: <strong>Any method on an object (or class) can access <code>this</code></strong>!</p>
<p>Accordingly, when the <code>connectedCallback</code> method runs, you have access to <code>this</code>, and in that context <code>this</code> is the now-extended <code>HTMLElement</code> element that is currently on the page.</p>
<p>Because we’re extending the <code>HTMLElement</code> class, <code>this</code> has all the bits and bobs you find on other elements: you can set <code>this.innerHTML</code>, you can look for descendent elements with <code>this.querySelector()</code>, set up a shadow <span class="sc">DOM</span> with <code>this.addShadow()</code>, add an event listener with <code>this.addEventListener()</code>, and so forth.</p>
<p>Anyway, for Robin’s case, all his logic that’s in the constructor can (and probably should, in my opinion) move to the <code>connectedCallback</code> method:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">ThanksGivingButton</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">HTMLElement</span> {
  <span class="hljs-title function_">connectedCallback</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_shadowRoot</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">attachShadow</span>({ <span class="hljs-attr">mode</span>: <span class="hljs-string">&#x27;open&#x27;</span> })
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_shadowRoot</span>.<span class="hljs-title function_">appendChild</span>(template.<span class="hljs-property">content</span>.<span class="hljs-title function_">cloneNode</span>(<span class="hljs-literal">true</span>))
  }
}
</code></pre>
<p>No more constructor, no more <code>super()</code>. And you can use <code>this</code> in there just fine.</p>
<p>Avoiding <code>constructor()</code> in web components comes right <a href="https://html.spec.whatwg.org/multipage/custom-elements.html#custom-element-conformance">from the spec</a>, <span class="sc">BTW</span>:</p>
<blockquote>
<p>In general, work should be deferred to connectedCallback as much as possible&#8202;—&#8202;especially work involving fetching resources or rendering.</p>
</blockquote>
<p>Now you might be wondering, “Hang on, why <em>isn’t</em> the <code>constructor()</code> the thing that gets run when inserting the element? Why is there <em>also</em> this <code>connectedCallback</code>?”</p>
<p>Good question! Typically we think about these things as custom <span class="sc">HTML</span> elements that you author in markup like…</p>
<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">thanksgiving-button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">thanksgiving-button</span>&gt;</span>
</code></pre>
<p>The real magic with these web component <code>class</code>es is that the browser is doing so much stuff for you. After you’ve registered a custom element, when the browser sees that markup in the page, it’ll effectively run that custom element’s <code>constructor()</code> function, then also immediately call <code>connectedCallback()</code> <em>on your behalf</em>.</p>
<p>So in general, you’re not writing scripts that makes these things like <code>new ThanksGivingButton()</code>; you just write the setup code and then use <span class="sc">HTML</span> markup to place them wherever you want in the page.</p>
<p>But, if you wanted to, you <em>can</em> create new elements in JavaScript manually, and insert them into the page <em>later, if ever</em>, which separates the initialization (<code>constructor</code> time) from the mounting (<code>connectedCallback</code> time):</p>
<pre><code class="language-js"><span class="hljs-keyword">const</span> myThanksgivingButton = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ThanksGivingButton</span>()
<span class="hljs-comment">// ^ constructor() fires</span>

<span class="hljs-comment">// do some stuff, wait a bit, whatever</span>

<span class="hljs-comment">// insert that element into the body</span>
<span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(myThanksgivingButton)
<span class="hljs-comment">// ^ connectedCallback() fires</span>
</code></pre>
<p>So that’s why <code>connectedCallback()</code> is its own thing, and it’s also arguably <em>the most important thing</em>: probably most of what you want to do with a web component should happen there.</p>
<p><strong>Update</strong>: For some more nuance on <code>connectedCallback</code>, see <a href="https://www.leereamsnyder.com/select-allosaurus-web-component">this follow-on article where I build a functional web component</a> and <a href="https://www.leereamsnyder.com/select-allosaurus-web-component#mounting-problems">hit some issues with it</a>.</p>
<h3 id="probably-you-dont-need-to-store-a-separate-reference-to-the-shadowroot"><a href="https://www.leereamsnyder.com/#probably-you-dont-need-to-store-a-separate-reference-to-the-shadowroot" class="header-anchor"><span>(Probably) You don’t need to store a separate reference to the shadowRoot</span></a></h3><p>Another thing Robin does (I’ve seen this in many other examples) is store a reference to the custom element’s shadowRoot on <code>this</code>, like <code>this._shadowRoot</code>:</p>
<p>Here’s just the stuff I moved out of his constructor and into connectedCallback again:</p>
<pre><code class="language-js"><span class="hljs-title function_">connectedCallback</span>(<span class="hljs-params"></span>) {
  <span class="hljs-variable language_">this</span>.<span class="hljs-property">_shadowRoot</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">attachShadow</span>({ <span class="hljs-attr">mode</span>: <span class="hljs-string">&#x27;open&#x27;</span> })
  <span class="hljs-variable language_">this</span>.<span class="hljs-property">_shadowRoot</span>.<span class="hljs-title function_">appendChild</span>(template.<span class="hljs-property">content</span>.<span class="hljs-title function_">cloneNode</span>(<span class="hljs-literal">true</span>))
}
</code></pre>
<p>So, you don’t really need to store your own reference to the element’s shadowRoot.</p>
<p>Calling <code>this.attachShadow()</code> will automatically stick a property <code>shadowRoot</code> on <code>this</code> for you like ✨magic✨&#8202;—&#8202;but you know now that it’s not really magic because object methods can fiddle with <code>this</code>&#8202;—&#8202;so we can simplify things:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">ThanksGivingButton</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">HTMLElement</span> {
  <span class="hljs-title function_">connectedCallback</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">attachShadow</span>({ <span class="hljs-attr">mode</span>: <span class="hljs-string">&#x27;open&#x27;</span> })
    <span class="hljs-comment">// now you have this.shadowRoot automatically.</span>
    <span class="hljs-comment">// you don&#x27;t need to store it again as this._shadowRoot</span>

    <span class="hljs-comment">// go ahead and interact with this.shadowRoot now</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">shadowRoot</span>.<span class="hljs-title function_">appendChild</span>(template.<span class="hljs-property">content</span>.<span class="hljs-title function_">cloneNode</span>(<span class="hljs-literal">true</span>))
  }
}
</code></pre>
<p>If you define other standard callback methods or custom methods, they’ll also have access to <code>this.shadowRoot</code>, assuming they’re getting called after <code>this.attachShadow({ mode: 'open' })</code> happens.</p>
<p>Actually, attaching a shadowRoot <em>very</em> early is one of the rare good reasons to use a <code>constructor()</code> for web components, because that will happen before anything else. Again, the spec calls this out!</p>
<p>In practice, you probably don’t need to worry about this, but if you wanted to be extra safe and separate out that step, that’d look like:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">ThanksGivingButton</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">HTMLElement</span> {
  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">super</span>()
    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">attachShadow</span>({ <span class="hljs-attr">mode</span>: <span class="hljs-string">&#x27;open&#x27;</span> })
  }

  <span class="hljs-comment">// you probably don&#x27;t want use your template until the element is fully &quot;in&quot; the document</span>
  <span class="hljs-comment">// so that’s broken out into the connectedCallback() method</span>
  <span class="hljs-title function_">connectedCallback</span>(<span class="hljs-params"></span>) {
    <span class="hljs-comment">// the constructor called this.attachShadow()</span>
    <span class="hljs-comment">// so this.shadowRoot has been set up and you can just access it directly</span>
    <span class="hljs-comment">// storing and accessing this._shadowRoot is not necessary</span>
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">shadowRoot</span>.<span class="hljs-title function_">appendChild</span>(template.<span class="hljs-property">content</span>.<span class="hljs-title function_">cloneNode</span>(<span class="hljs-literal">true</span>))
  }
}
</code></pre>
<p>Alright, so, more than 3,000 words later that’s the speedrun of extending classes to make custom elements by way of explaining how objects work (kinda sorta) 😅.</p>
<p>If you want to know more, <a href="https://www.dannymoerkerke.com/blog/web-components-will-replace-your-frontend-framework/">this 2019 article about the web component <abbr>API</abbr> by Danny Moerkerke</a> does a great job taking it from here (<a href="https://mastodon.social/@asuh/111449167142931167">tip o’ the cap to @asuh@mastodon.social</a> for sharing this with me).</p>
<p>Let’s look at something else from Robin’s post.</p>
<h2 id="why-host"><a href="https://www.leereamsnyder.com/#why-host" class="header-anchor"><span>Why “:host”?</span></a></h2><p>A bit later Robin starts exploring encapsulated elements and styles with the Shadow <span class="sc">DOM</span>. Using Shadow <span class="sc">DOM</span> is a <em>whole other thing</em> with web components, but the idea is the innards of your component (elements and styles) can be isolated from the surrounding document. Like if your component has styles for a button that’s in its Shadow <span class="sc">DOM</span>, those <code>button</code> styles <em>only</em> apply to buttons within your web component and won’t affect other buttons on the page.</p>
<p>So Robin was fussing with that, and he tried sticking a <code>&lt;style&gt;</code> tag into the template like so:</p>
<pre><code class="language-js">template.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">`
  &lt;style&gt;thanksgiving-button button { background: red; }&lt;/style&gt;
  &lt;button&gt;Happy Thanksgiving!&lt;/button&gt;
`</span>
</code></pre>
<p>But that doesn’t work! As he says:</p>
<blockquote>
<p>We can’t select <code>thanksgiving-button</code> like this and instead we have to use a strange CSS selector called <code>:host</code></p>
</blockquote>
<p>Here’s his working code after that adjustment:</p>
<pre><code class="language-js">template.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">`
  &lt;style&gt;:host button { background: red; }&lt;/style&gt;
  &lt;button&gt;Happy Thanksgiving!&lt;/button&gt;
`</span>
</code></pre>
<p>What’s the deal with <code>:host</code>? Why can’t you refer to the element by its selector, <code>thanksgiving-button</code>, like you would a <code>div</code> or a <code>p</code>?</p>
<p>Well, the answer becomes clearer when you <code>define</code> the custom element:</p>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">ThanksGivingButton</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">HTMLElement</span> {
  <span class="hljs-comment">// etc</span>
}

<span class="hljs-comment">//                       ⬇️ this is the tag name</span>
customElements.<span class="hljs-title function_">define</span>(<span class="hljs-string">&#x27;thanksgiving-button&#x27;</span>, <span class="hljs-title class_">ThanksGivingButton</span>)
<span class="hljs-comment">//                                             ⬆️ this is the class to use</span>
</code></pre>
<p>That <code>customElements.define</code> method is what lets you finally write these doohickeys as <abbr>HTML</abbr> like <code>&lt;thanksgiving-button&gt;&lt;/thanksgiving-button&gt;</code>.</p>
<p>The first string argument is what defines that new tag name you’ll use. But that tag name could be anything (as long as it has a hyphen&#8202;—&#8202;that’s a hard requirement of the spec)!</p>
<p>When you’re playing around with these or using them just for yourself, you usually just have a specific element name in mind, but for libraries or sharing it’s typical to let folks use whatever name they want. Maybe they just don’t like your choice, or maybe they already have a <code>&lt;thanksgiving-button&gt;</code> in their codebase and need to use some other name to try out this one (you can’t have two custom elements with the same name).</p>
<p>So! Because you can’t truly know what tag name your custom element will have, that’s what the <code>:host</code> selector in Shadow’d <span class="sc">CSS</span> is for. It’s a special selector that says, &quot;whatever the heck my tag name ends up being, target that&quot;.</p>
<p>So Robin has to do <code>:host { /* styles for the outer element */}</code> to style the wrapper, whether it’s <code>thanksgiving-button</code> or <code>turkey-day-button</code> or whatever.</p>
<h2 id="can-you-do-encapsulated-styles-without-shadow-dom"><a href="https://www.leereamsnyder.com/#can-you-do-encapsulated-styles-without-shadow-dom" class="header-anchor"><span>Can you do encapsulated styles without Shadow DOM?</span></a></h2><p>I’m not going to get into all the ins and outs of the Shadow <span class="sc">DOM</span> and style encapsulation, but here Robin is expressing a <em>very</em> real frustration:</p>
<blockquote>
<p>I do want to write my web component like this…</p>
<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">thanksgiving-button</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>Happy Thanksgiving<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">thanksgiving-button</span>&gt;</span>
</code></pre>
<p>…and yet have all those styles isolated in some way. I don’t want button styles leaking in, nor do I want button styles inside leaking out. If I could simply encapsulate styles here then I would barely ever need the complexity of all this template stuff and writing HTML with JS and Shadow DOM which feels sickly to me anywho and overly complex.</p>
</blockquote>
<p>I’ve already rambled enough about the script side of things to talk about web component styling today, but here’s some of the things smart people have written about this:</p>
<ul>
<li>Nolan Lawson has a good post about some <a href="https://nolanlawson.com/2021/01/03/options-for-styling-web-components/">common ways to encapsulate styles and allow people to override your choices</a>.</li>
<li><a href="https://lamplightdev.com/blog/2019/03/26/why-is-my-web-component-inheriting-styles/">This post on lamplightdev lays out what styles</a> your component <em>will</em> inherit, even when you’re using a Shadow <span class="sc">DOM</span> (this stuff is <span class="sc">CRAZY MAKING</span>!)</li>
<li>Zach Leatherman has <a href="https://www.zachleat.com/web/styling-web-components/">a great rundown of ways to try to encapsulate styles</a> in web components. He calls out the new <abbr>CSS</abbr> <code>@scope</code> rule as a possibility for the future, but it’s brand-new now.</li>
<li><a href="https://developer.chrome.com/articles/at-scope/">Here’s more on <code>@scope</code></a>.</li>
</ul>
<p>Probably the “cleanest” method available now is defining components with Zach Leatherman’s <a href="https://www.11ty.dev/docs/languages/webc/"><code>Webc</code></a> language and it’ll spit out mostly-encapsulated styles for you without using a Shadow <span class="sc">DOM</span>. Looks promising! But that’ll introduce a build step and additional tooling.</p>
<p>I was dinking around with some of this on my own and came up with this godawful hack that:</p>
<ol>
<li>defines styles in a string of CSS, using <code>:host</code></li>
<li>looks up the tag name at runtime (that’s the <code>this.localName</code> property)</li>
<li>Inserts a stylesheet into the document, replacing <code>:host</code> with the now-known tag name so the selectors work:</li>
</ol>
<pre><code class="language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">ThanksgivingButton</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">HTMLElement</span> {
  <span class="hljs-comment">// oh god I didn&#x27;t even get into static class properties…</span>
  <span class="hljs-keyword">static</span> stylesDefined = <span class="hljs-literal">false</span>

  <span class="hljs-title function_">connectedCallback</span>(<span class="hljs-params"></span>) {
    <span class="hljs-keyword">if</span> (<span class="hljs-title class_">ThanksgivingButton</span>.<span class="hljs-property">stylesDefined</span>) {
      <span class="hljs-comment">// bail. we already have the styles</span>
      <span class="hljs-keyword">return</span>
    }

    <span class="hljs-keyword">const</span> styles = <span class="hljs-string">`
      :host { display: block; }
      :host {
        padding: 30px;
        background: orange;
      }
      :host button {
        /* reset all inherited styling */
        all: unset;
        color: red;
    }
    `</span>

    <span class="hljs-comment">// replace all the instances of :host with the runtime tagname eg &quot;thanksgiving-button&quot;</span>
    <span class="hljs-keyword">const</span> myStyles = styles.<span class="hljs-title function_">replaceAll</span>(<span class="hljs-string">&#x27;:host&#x27;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">localName</span>)

    <span class="hljs-comment">// insert that stylesheet into the document</span>
    <span class="hljs-keyword">const</span> styleEl = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;style&#x27;</span>)
    styleEl.<span class="hljs-property">innerHTML</span> = myStyles
    <span class="hljs-variable language_">document</span>.<span class="hljs-property">head</span>.<span class="hljs-title function_">appendChild</span>(styleEl)

    <span class="hljs-comment">// make sure we don&#x27;t insert the styles again</span>
    <span class="hljs-title class_">ThanksgivingButton</span>.<span class="hljs-property">stylesDefined</span> = <span class="hljs-literal">true</span>
  }
}

customElements.<span class="hljs-title function_">define</span>(<span class="hljs-string">&#x27;thanksgiving-button&#x27;</span>, <span class="hljs-title class_">ThanksgivingButton</span>)
</code></pre>
<p>That gives you some rudimentary style encapsulation without the shadow <span class="sc">DOM</span> and we’re not introducing any libraries. There’s probably something deeply wrong with this. Like WebC does something similar for styles, but it generates a unique <span class="sc">CSS</span> class on the fly, which is better. Don’t do this.</p>
<p>That said, <a href="https://codepen.io/leereamsnyder/pen/dyazeer">here’s a real rudimentary CodePen of that in action</a>.</p>
<p>Anyway, it’s fun to see people experimenting with these more. I’m happy to pile on!</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[See You On The Flip Side]]></title>
            <link>https://www.leereamsnyder.com/off-he-goes</link>
            <guid>https://www.leereamsnyder.com/off-he-goes</guid>
            <pubDate>Sun, 29 Oct 2023 16:00:00 GMT</pubDate>
            <description><![CDATA[On being already gone]]></description>
            <content:encoded><![CDATA[<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/heroes/off-he-goes-smoky-mountains.jpeg" loading="lazy" width="2975" height="1983" alt="" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/heroes/off-he-goes-smoky-mountains.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/heroes/off-he-goes-smoky-mountains.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/heroes/off-he-goes-smoky-mountains.jpeg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/heroes/off-he-goes-smoky-mountains.jpeg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/heroes/off-he-goes-smoky-mountains.jpeg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/heroes/off-he-goes-smoky-mountains.jpeg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/heroes/off-he-goes-smoky-mountains.jpeg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/heroes/off-he-goes-smoky-mountains.jpeg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/heroes/off-he-goes-smoky-mountains.jpeg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/heroes/off-he-goes-smoky-mountains.jpeg 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/heroes/off-he-goes-smoky-mountains.jpeg 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/heroes/off-he-goes-smoky-mountains.jpeg 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/heroes/off-he-goes-smoky-mountains.jpeg 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2975/q/60/images/heroes/off-he-goes-smoky-mountains.jpeg 2975w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>Picture it: Columbus, Ohio. The year two thousand. August.</p>
<p>I am, at this point in my life, obsessed with Pearl Jam, and I have just watched Pearl Jam bring down the 20,000-seat Polaris Amphitheater for over two hours.</p>
<p>As we’re packing up to leave, I overhear two dudes in front of me discussing what they’ve just seen. “I <em>guess</em> it was a good show,” one says.</p>
<p>“Yeah, if you liked <em>No Code</em>!” says the other, referring to Pearl Jam’s relatively unloved fourth studio album that featured prominently on the set list.</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/off-he-goes-r-u-being-sarcastic.gif" loading="lazy" width="480" height="360" alt="Screen capture from The Simpsons with two concert attendees. The first asks “Are you being sarcastic, dude?” and the other replies “I don’t even know anymore.”" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/off-he-goes-r-u-being-sarcastic.gif 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/off-he-goes-r-u-being-sarcastic.gif 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/480/q/60/images/blog/off-he-goes-r-u-being-sarcastic.gif 480w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>Obligatory <em>Simpsons</em> .gif aside, I actually would have said the same thing. But, like, sincerely.</p>
<p>I fucking love <em>No Code</em>. It has “Off He Goes.”</p>
<p><lite-youtube videoid="2uX60Tie088">
  <a href="https://youtube.com/watch?v=2uX60Tie088" class="lty-playbtn" title="Play video">
    <span class="a11y">Play video</span>
  </a>
</lite-youtube></p>
<hr>
<p>If you fired up that video, saw it was six minutes long, and thought, “six minutes for one song! I could listen to 82 Ramones songs in that time! Or watch at least nine seasons of a well-regarded BBC comedy series!” I feel you, but also I promise those six minutes fly by.</p>
<p>Either way, here’s the lyrics:</p>
<blockquote>
<p>Know a man<br>
His face seems pulled and tense<br>
Like he’s riding on a motorbike in the strongest winds<br>
So I approach with tact<br>
Suggest that he should relax<br>
But he’s always moving much too fast<br>
Said he’ll see me on the flip side<br>
Of this trip he’s taken for a ride</p>
<p>He’s been takin’ too much on<br>
Off he goes<br>
With his perfectly unkept clothes<br>
There he goes</p>
<p>He’s yet to come back<br>
But I’ve seen his picture<br>
Doesn’t look the same up on the rack<br>
We go way back<br>
I wonder bout his insides<br>
It’s like his thoughts are too big for his size</p>
<p>He’s been taken…where? I don’t know<br>
Off he goes<br>
With his perfectly unkept hope<br>
There he goes</p>
<p>And now I rub my eyes for he has returned<br>
Seems my preconceptions are what should have been burned<br>
For he still smiles and he’s still strong<br>
Nothing’s changed, but the surrounding bullshit that has grown<br>
And now he’s home and we’re laughing<br>
Like we always did<br>
My same old same old friend</p>
<p>Until a quarter-to-ten<br>
I saw the strain creep in<br>
He seems distracted and I know just what is gonna happen next</p>
<p>Before his first step<br>
He is off again</p>
</blockquote>
<hr>
<p>I have three siblings; two brothers, one sister.</p>
<p>We are all by nature a little competitive, and we all funnel that into a shared pastime&#8202;—&#8202;nay, passion&#8202;—&#8202;of ceaselessly, loudly speculating about which of us is the “favorite” child, always over the protestations of our mother who loves us all equally <em>she claims</em>. (She has been outvoted on this.)</p>
<p>I’m the oldest, the first-born, the O.G., the one with this neat-o website with my name on it, so all the others think the favorite is me.</p>
<p>Meanwhile, I figure that I can’t possibly be <span class="lining-figures">#1</span>. Unlike my brothers and sister, I haven’t given my parents any grandchildren, a state of affairs that knocks me down to at best third-favori&#8202;—&#8202;no.</p>
<p>No, no, no that can’t possibly be right.</p>
<p>Second-favorite.</p>
<hr>
<p>Pearl Jam fandom is uniquely rewarding: it feels like the band is on your side. After all, this is the band that <a href="https://www.independent.co.uk/arts-entertainment/music/features/pearl-jam-ticketmaster-1995-boycott-booking-fees-gigs-ticket-prices-a8989516.html">tried and sadly failed to break Ticketmaster in the ’90s</a>, sacrificing untold millions in revenue and nearly tanking their career to keep concert tickets cheap.</p>
<p>This is also the band that started to put out high-quality ✨official✨ recordings of every concert performance so attendees could buy a memento and obsessives didn’t have to gamble on underground bootlegs.</p>
<p>Indeed, if I want to revisit that August 2000 show in Columbus, I can fish out my own copy of <a href="https://en.wikipedia.org/wiki/8/21/00_%E2%80%93_Columbus,_Ohio">the concert recording</a>, or, wildly, pull it up on Spotify, along with any of the other hundreds of concert recordings the band pressed.</p>
<p>Their spirit has an echo these days in Taylor Swift, who also has <a href="https://en.wikipedia.org/wiki/Taylor_Swift%E2%80%93Ticketmaster_controversy">a bone to pick with Ticketmaster</a> and&#8202;—&#8202;I say this with kindness, I swear&#8202;—&#8202;an army of obsessive fans.</p>
<p>Her recent ✨official✨ concert movie could be seen uncharitably as a cash-grab on top of what is already <a href="https://time.com/6307420/taylor-swift-eras-tour-money-economy/">an outlandishly lucrative</a> tour, but I see it as a gift to her fans&#8202;—&#8202;the fans who couldn’t get a ticket or the fans who couldn’t afford a ticket or the fans who can’t get enough or the fans who just want to see Taylor perform in close-up on a huge theater screen instead of on the other side of an arena.</p>
<p>Good on her.</p>
<hr>
<p>One way Pearl Jam fandom is <em>not</em> rewarding (and another way Pearl Jam and Taylor Swift echo) is if you need your band to explain the precise meaning of its songs.</p>
<p>(Although, sure, we all know who <a href="https://www.youtube.com/watch?v=32M2jmNjIGM">“Dear John”</a> is <a href="https://letmegooglethat.com/?q=john+mayer">about</a>.)</p>
<p>That said, “Off He Goes” is straightforward. There’s no songwriting tricks like <a href="https://songexploder.net/semisonic">it’s-actually-about-impending-fatherhood</a> subtext or <a href="https://www.youtube.com/watch?v=naoknj1ebqI">it’s-about-drugs-<span class="sc">OR-IS-IT</span></a> mystery. We are not approaching the <a href="https://www.mcsweeneys.net/articles/so-youve-decided-to-start-listening-to-radiohead-in-your-mid-thirties">“true Radiohead experience” of “80 percent confusion, 20 percent feigned understanding”</a> here. It’s possibly the least cryptic song Pearl Jam has ever written.</p>
<p>You’ve got two dudes. Friends. They’re unnamed, so I’ll call them The One Who Stays, and The One Who Goes. Each acts accordingly.</p>
<p>Well, that’s about it, really.</p>
<p>However, the best stories&#8202;—&#8202;even when they’re simple&#8202;—&#8202;are open to interpretation. A quick reading of <a href="https://community.pearljam.com/discussion/27729/off-he-goes-meaning">one forum discussion about the song’s meaning</a> has folks that hear it as being about:</p>
<ul>
<li>The One Who Goes is Eddie Vedder’s shitty friend</li>
<li>The One Who Goes suffers from drug addiction</li>
<li>The One Who Goes is only on an acid trip</li>
<li>The One Who Goes is Neil Young, someone heard once [citation needed]</li>
<li>The One Who Stays is Pearl Jam’s at-the-time drummer Jack Irons who was unhappy while touring but then he left the band so… he’s The One Who Goes now?</li>
<li>The One Who Stays <em>and</em> The One Who Goes are simultaneously both Eddie Vedder as he looks at a picture of himself on a magazine cover and doesn’t recognize the man, who is him but also not.</li>
</ul>
<p>Bit of foreshadowing: that last one&#8202;—&#8202;which is bonkers but also I love it&#8202;—&#8202;is not right; however, it is also not entirely wrong.</p>
<hr>
<p>While I know that it’s incredibly reductive to split the world into just two kinds of people, if I had to sort myself I would self-identify as The One Who Stays.</p>
<p>I’m getting <a href="https://annehelen.substack.com/p/how-millennials-grew-up-and-got-old">a little older</a>, man! I still enjoy traveling, but I don’t find myself dreaming about it all the time. I’m writing this on my new deck. I admire the pre-Gandalf-showing-up Hobbits who just want to smoke a pipe, speculate on their neighbors’ activities, and appreciate potatoes. I enjoy hearing what kinds of birds are in my backyard today. I <a href="https://www.leereamsnyder.com/growing-up">drive a Volvo</a>, although I’m thinking about getting, well, another Volvo but possibly&#8202;—&#8202;hold me back&#8202;—&#8202;a hybrid? I listen to a lot of Tom Petty.</p>
<p>My wish list is kitchen towels.</p>
<p>I am <a href="https://www.gq.com/story/in-praise-of-being-washed">thoroughly washed</a>, and pretty OK with it.</p>
<p>Because of this self-identification and also because the narrator in “Off He Goes” is The One Who Stays, I have always heard the song as centered about their experience, their sadness, their inability to understand The One Who Goes.</p>
<p>My story of the song that has crystallized over the last 25-odd years is The One Who Stays is a child and The One Who Goes is an often-absent father, a take I found utterly compelling and impossibly sad and one that I’m sure I’ll unpack at length in therapy someday.</p>
<hr>
<p>None of this is to say that I can’t admire The One Who Goes.</p>
<p>A few years back, I was in Chicago for a wedding. Before the wedding, we met up with a friend to do a tour at a brewery.</p>
<p>Most of the other people in our tour happened to be a group of die-hard Pearl Jam fans who followed the band around the country. Pearl Jam was in Chicago, so these folks were too. And everywhere the band went, this group did volunteer work or fundraisers for local charities.</p>
<p>In my exceedingly brief time with them, those disciples who have found another rewarding layer in their fandom, who bounce around the country doing good, all of Them Who Go, seemed to me like possibly the happiest people on this here planet Earth.</p>
<hr>
<p>We actually don’t have to speculate about what “Off He Goes” is about.</p>
<p>I was listening to it for the zillionth time lately and internet rabbit-holed to <a href="http://www.fivehorizons.com/archive/articles/spin801.shtml">an interview in <em>Spin</em> magazine from 2001</a> where Eddie Vedder said this:</p>
<blockquote>
<p>The song “Off He Goes” is really about me being a shit friend. I’ll show up and everything’s great and then all of the sudden I’m outta there…</p>
</blockquote>
<p>Ah, so <em>he</em> (Eddie Vedder the person) is The One Who Goes! But because he (Eddie Vedder the lead singer of Pearl Jam) is the narrator, he’s <em>also</em> The One Who Stays&#8202;—&#8202;singing about himself, giving voice to those he feels he has wronged.</p>
<p>Empathy, man. Hell of a drug.</p>
<p>Learning this cracked my own hardened perspective a bit.</p>
<p>Then, I felt entirely unmoored&#8202;—&#8202;weightless, drifting, powerless&#8202;—&#8202;as a wave of understanding hit me and a rip current of sadness pulled me away.</p>
<p>See, I’m just coming back from a whistle-stop tour visiting our families. A few days over one weekend with my wife’s in D.C., a few days the next weekend with mine in Ohio.</p>
<p>I mentioned above that amongst us four siblings, I doubt I’m the favorite.</p>
<p>The lack of grandchildren is one factor, but another mark against me is that I’m <strong>the only one that left my hometown</strong>. My siblings still live mere minutes from my parents.</p>
<p>When I see my family, I show up and everything’s great then all of the sudden I’m outta there… I’m off again.</p>
<p>Here in lovely North Carolina, I see myself as The One Who Stays.</p>
<p>But to my family, who I see ever briefly, with an entire mountain range between us, <em>I’m</em> The One Who Goes.</p>
<p>…</p>
<p>Ah.</p>
<hr>
<p>Ok, <em>fine</em>.</p>
<p>Maybe&#8202;—&#8202;<em>maybe!</em>&#8202;—&#8202;third favorite.</p>
<p>That’s as low as I’m going!</p>
<hr>
<p>The reason I was listening to “Off He Goes” recently in the first place was <a href="https://kottke.org/15/04/the-glass-is-already-broken">Jason Kottke shared an excerpt</a> from the book <em>Thoughts Without a Thinker: Psychotherapy from a Buddhist Perspective</em> by Mark Epstein:</p>
<blockquote>
<p>“You see this goblet?” asks Achaan Chaa, the Thai meditation master. “For me this glass is already broken. I enjoy it; I drink out of it. It holds my water admirably, sometimes even reflecting the sun in beautiful patterns. If I should tap it, it has a lovely ring to it. But when I put this glass on the shelf and the wind knocks it over or my elbow brushes it off the table and it falls to the ground and shatters, I say, ‘Of course.’ When I understand that the glass is already broken, every moment with it is precious.”</p>
</blockquote>
<p>Because my brain is broken in this particular way where I’m always thinking about either quality potatoes, kitchen towels, or Pearl Jam songs, I immediately started thinking about the dudes in “Off He Goes” from another angle.</p>
<p>I’ve always heard a sad song, but The One Who Stays never says he’s unhappy with his relationship with The One Who Goes. Absolutely there’s an undercurrent of melancholy, but their reunions are joyous.</p>
<blockquote>
<p>And now he’s home and we’re laughing<br>
Like we always did<br>
My same old same old friend</p>
</blockquote>
<p>Perhaps The One Who Stays, even if they don’t entirely understand, accepts the nature of The One Who Goes.</p>
<p>Perhaps they see that, just like the glass that is already broken, The One Who Goes is already gone. So every moment with them is precious.</p>
<p>Perhaps, knowing this, they enjoy their time together all the more.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Enshrinkening my article URLs]]></title>
            <link>https://www.leereamsnyder.com/maybe-cool-urls-do-change</link>
            <guid>https://www.leereamsnyder.com/maybe-cool-urls-do-change</guid>
            <pubDate>Tue, 17 Oct 2023 16:00:00 GMT</pubDate>
            <description><![CDATA[You know like the opposite of embiggen]]></description>
            <content:encoded><![CDATA[<p>Quick and hopefully pain-free programming note for any regular readers: I’ve changed the <abbr>URL</abbr>s for all of my articles.</p>
<p>If you use <a href="https://www.leereamsnyder.com/rss.xml">my <abbr>RSS</abbr> feed</a>, you might have some duplicate entries clogging up your reader. Sorry ’bout that. Should be a one-time thing.</p>
<p>Following <a href="https://mattgemmell.scot/permalinks/">a bit of advice from Matt Gemmell</a>, my <del>blog posts</del> articles no longer have <code>/blog</code> in the <abbr>URL</abbr>.</p>
<p>For example, the <a href="https://www.leereamsnyder.com/take-the-dang-picture">last thing I posted</a> was at <code>/blog/take-the-dang-picture</code>; now it’s <code>/take-the-dang-picture</code>. That just <em>feels</em> more like my definitive take.</p>
<p>Similarly, there’s no longer a <code>/blog</code> landing page; it’s <a href="https://www.leereamsnyder.com/writing"><code>/writing</code></a> now. Maybe back in <a href="https://www.leereamsnyder.com/archives/2012">2012</a> when I was sharing little things sometimes five times a day(!) I think I would call what I was doing “blogging,” but these days that doesn’t seem quite right. I added <a href="https://www.leereamsnyder.com/simply-the-best">a separate page that collects all my favorite articles</a> I’ve posted over the years, and that drove home for me that what I mostly do here (when I’m not <del>stalling</del> redesigning) is <em>write</em>; the reverse chronological feed feels less critical to that experience.</p>
<p>Not there’s anything wrong with blogs or blogging! They’re great! If you have one, awesome! (Post more, maybe!)</p>
<p>In theory, <a href="https://www.w3.org/Provider/Style/URI">cool <abbr>URL</abbr>s don’t change</a>, but <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/301">301 redirects</a> exist for a reason. Hopefully now my article <abbr>URL</abbr>s are now [pushes glasses up nose] all the cooler.</p>
<p>I did a bunch of testing around this, but I am an imperfect human and the automated tools I’m using are surely also imperfect. If you see something that looks broken, maybe <a href="https://www.leereamsnyder.com/contact">let me know?</a> Thanks!</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Take the damn picture]]></title>
            <link>https://www.leereamsnyder.com/take-the-dang-picture</link>
            <guid>https://www.leereamsnyder.com/take-the-dang-picture</guid>
            <pubDate>Thu, 05 Oct 2023 16:00:00 GMT</pubDate>
            <description><![CDATA[You won’t regret it]]></description>
            <content:encoded><![CDATA[<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/heroes/take-the-dang-picture.jpeg" loading="lazy" width="2032" height="1354" alt="" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/heroes/take-the-dang-picture.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/heroes/take-the-dang-picture.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/heroes/take-the-dang-picture.jpeg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/heroes/take-the-dang-picture.jpeg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/heroes/take-the-dang-picture.jpeg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/heroes/take-the-dang-picture.jpeg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/heroes/take-the-dang-picture.jpeg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/heroes/take-the-dang-picture.jpeg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/heroes/take-the-dang-picture.jpeg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2032/q/60/images/heroes/take-the-dang-picture.jpeg 2032w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>Early on when I got into photography, I read a piece of advice for when you travel: <em>Take a picture of the plaque</em>.</p>
<p>Everywhere you go, there’s probably some sort of plaque. Or a sign with the name. Take a picture of it!</p>
<p>You might not remember exactly where you were when you took a picture; however, if you have a picture of the plaque nearby in your library, you don’t have to.</p>
<p>It’s good advice. I think I saw it in one of Scott Kelby’s books? Maybe I should have taken a picture of the book…</p>
<p>Anyway, wherever I saw it, allow me to now offer a variation of that advice:</p>
<p><em>Take the picture.</em></p>
<p>Any picture!</p>
<p>You have a world-class camera on your phone. It’s on you at all times. Storage is cheap. You have no excuse.</p>
<p>Just do it. You won’t regret it.</p>
<p>This paid off last month when I traveled to Scotland with my parents.</p>
<p>As we were touring the castle in Edinburgh, I was reminiscing a bit. I had been here 20 years earlier, almost to the day. I met up with a buddy in London, then we took the train to Edinburgh. Once there, we stayed in a hostel in Old Town, real close to the castle.</p>
<p>But <em>which</em> hostel? I couldn’t remember off-hand. I emailed my buddy to see if he could recall; he couldn’t either. Because this was a pre-GMail-lets-you-save-every-email-forever time, any reservation emails or correspondence about where to meet up were long lost.</p>
<p>But, aha! I remembered that probably just before getting on the plane I had the foresight to pop into a Best Buy and buy <a href="https://www.dpreview.com/articles/8355271943/kodakdx6340">a dinky 3 megapixel Kodak digicam</a> so I could take some pictures on Baby’s First Trip Out Of The Country.</p>
<p>Also, past Lee&#8202;—&#8202;<a href="https://www.leereamsnyder.com/pocket-watch-person">not a bonehead for once</a>&#8202;—&#8202;had at some point in the intervening 20 years dumped the pictures from that memory card into his Photos library.</p>
<p>So I swiped up. And up. And up. And up some more.</p>
<p>Then, good gravy, there it is:</p>
<video class="lazy" width="320" height="240" muted loop playsinline controls preload="none">
  <source src="https://i.imgur.com/8MWotLm.mp4" type="video/mp4" />
<p>Your browser does not support the video tag or something has gone wrong with loading the video. <a href="https://imgur.com/a/lABswYO">Try it on Imgur</a></p>
</video>
<p>And it’s <em>a <a href="https://www.urbandictionary.com/define.php?term=Potato%20Camera">potato</a> video?!</em> Ha! I didn’t even remember that cameras of that vintage could even do that.</p>
<p>The date in the file’s metadata wasn’t right. It said this was recorded in January 2003, not September, probably because I hadn’t figured out how to set the date on my potato. But I’m finding as I get a little older that I’m lucky if my own memory even gets the year right, so, fine, close enough.</p>
<p>Confirmed: it was <a href="https://www.castlerockedinburgh.com">Castle Rock Hostel</a>, right by the castle. Neat!</p>
<p>I wouldn’t know that for sure unless I took the picture. Or video, whatever. You get it.</p>
<p>Be like me! <strong>Take. The. Picture.</strong></p>
<p>Let me drive this home with one more example:</p>
<figure>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/figures/take-the-picture-toyota-backseat.jpeg" loading="lazy" width="2775" height="2775" alt="A completely uninteresting back seat of a 2003 Toyota Corolla" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/figures/take-the-picture-toyota-backseat.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/figures/take-the-picture-toyota-backseat.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/figures/take-the-picture-toyota-backseat.jpeg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/figures/take-the-picture-toyota-backseat.jpeg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/figures/take-the-picture-toyota-backseat.jpeg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/figures/take-the-picture-toyota-backseat.jpeg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/figures/take-the-picture-toyota-backseat.jpeg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/figures/take-the-picture-toyota-backseat.jpeg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/figures/take-the-picture-toyota-backseat.jpeg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/figures/take-the-picture-toyota-backseat.jpeg 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/figures/take-the-picture-toyota-backseat.jpeg 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/figures/take-the-picture-toyota-backseat.jpeg 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/figures/take-the-picture-toyota-backseat.jpeg 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2775/q/60/images/figures/take-the-picture-toyota-backseat.jpeg 2775w" sizes="(max-width: 80em) 97vw, (max-width: 99.9em) 62vw, 55vw"></p>
<figcaption>Look at this fucking ART here</figcaption>
</figure>
<p>What you’re looking at is the back seat of a 2003 Toyota Corolla. This is, however, not from twenty years ago. It’s my wife’s current car. I took it this evening.</p>
<p>I am <em>exceedingly</em> proud of this unassuming picture.</p>
<p>The missing context here is what this back seat looked like a few hours earlier.</p>
<p>See, this afternoon I took our dog to the vet for a checkup. In his advancing years, he has become extremely not fond of car rides. He gets anxious and whiny and restless and no one has a good time.</p>
<p>On this particular car ride, he freaked out so much about being in the car that he took a big ol’ panic poo.</p>
<p>Then he freaked out about <em>that</em> and started bouncing all around the cabin, smearing said poo everywhere.</p>
<p><em>Everywhere</em>.</p>
<p>This was an unprecedented <a href="https://www.weather.gov/oun/efscale"><span class="lining-figures">EF5</span></a> Turd Tornado.</p>
<p>(A Category Five Turdicane?)</p>
<p>Right now you <a href="https://www.youtube.com/watch?v=Rj0Tj8dnrYw">might be thinking</a>, ”An <span class="lining-figures">EF5</span> Turdnado! At this time of year, at this time of day, in this part of the country, localized entirely within your Corolla!?”</p>
<p>Yes!</p>
<p>“May I see it?”</p>
<p>… No.</p>
<p>I really wish you could.</p>
<p>What I failed to do here is take a picture. In my defense, I was dealing with some shit, <span class="sc">literally</span>.</p>
<p>I didn’t take the picture of the <em>before</em>, so there’s nothing remarkable about the <em>after</em>.</p>
<p>And, trust me: it’s remarkable. After three bottles of carpet cleaner, two rolls of paper towels, and three hours of spraying and scrubbing and dabbing later, the back seat looks like that picture above: unremarkable.</p>
<p>So: also <em>don’t</em> be like me! <strong>Take. The. Picture.</strong></p>
<p>In closing, here’s a picture of a me drinking scotch on top of <a href="https://en.wikipedia.org/wiki/Arthur%27s_Seat">Arthur’s Seat</a> twenty years ago.</p>
<figure>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/figures/take-the-picture-king-arthurs-seat.jpeg" loading="lazy" width="2032" height="1354" alt="Me in profile, drinking a tiny bottle of scotch on the top of King Arthur’s seat. In the background, Edinburgh" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/figures/take-the-picture-king-arthurs-seat.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/figures/take-the-picture-king-arthurs-seat.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/figures/take-the-picture-king-arthurs-seat.jpeg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/figures/take-the-picture-king-arthurs-seat.jpeg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/figures/take-the-picture-king-arthurs-seat.jpeg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/figures/take-the-picture-king-arthurs-seat.jpeg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/figures/take-the-picture-king-arthurs-seat.jpeg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/figures/take-the-picture-king-arthurs-seat.jpeg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/figures/take-the-picture-king-arthurs-seat.jpeg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2032/q/60/images/figures/take-the-picture-king-arthurs-seat.jpeg 2032w" sizes="(max-width: 80em) 97vw, (max-width: 99.9em) 62vw, 55vw"></p>
<figcaption>Look at this fucking child here</figcaption>
</figure>
<p>I was there! I can prove it! I can also prove that I had hair once! And I think this was my profile pic on dating sites for a while? Ah, youth.</p>
<p>Anyway, last time: <em>Take the picture!</em></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Convenient COVID taco nachos]]></title>
            <link>https://www.leereamsnyder.com/convenient-taco-nachos</link>
            <guid>https://www.leereamsnyder.com/convenient-taco-nachos</guid>
            <pubDate>Fri, 29 Sep 2023 16:00:00 GMT</pubDate>
            <description><![CDATA[I do not care that these do not actually look appealing]]></description>
            <content:encoded><![CDATA[<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/heroes/covid-taco-nachos.jpeg" loading="lazy" width="3024" height="3024" alt="" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/heroes/covid-taco-nachos.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/heroes/covid-taco-nachos.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/heroes/covid-taco-nachos.jpeg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/heroes/covid-taco-nachos.jpeg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/heroes/covid-taco-nachos.jpeg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/heroes/covid-taco-nachos.jpeg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/heroes/covid-taco-nachos.jpeg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/heroes/covid-taco-nachos.jpeg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/heroes/covid-taco-nachos.jpeg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/heroes/covid-taco-nachos.jpeg 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/heroes/covid-taco-nachos.jpeg 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/heroes/covid-taco-nachos.jpeg 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/heroes/covid-taco-nachos.jpeg 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2880/q/60/images/heroes/covid-taco-nachos.jpeg 2880w, https://www.leereamsnyder.com/resized-n-optimized-image/w/3024/q/60/images/heroes/covid-taco-nachos.jpeg 3024w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>The other week I was traveling through Heathrow Airport for a connecting flight.</p>
<p>While I was on one of the escalators between terminals, I heard a loud buzzing. Then the escalator abruptly stopped moving, leaving me right in the middle of the track.</p>
<p>I looked over at my wife, we both shrugged, then we just walked down the now-immobile escalator.</p>
<p>This had never happened to me before, but I immediately thought of the late, great comedian Mitch Hedberg.</p>
<p><lite-youtube videoid="tqOkWWV6a_U">
  <a href="https://youtube.com/watch?v=tqOkWWV6a_U" class="lty-playbtn" title="Play video">
    <span class="a11y">Play video: Mitch Hedberg’s joke about escalators</span>
  </a>
</lite-youtube></p>
<blockquote>
<p>An escalator can never break. It can only become stairs.</p>
<p>There would never be an “Escalator Temporarily Out Of Order&quot; sign. Only an “Escalator Temporarily Stairs.”</p>
<p>“Sorry For The Convenience.”</p>
</blockquote>
<p>I also thought of this after we got back from our travels and were immediately knocked out of commission with <span class="sc">COVID</span>.</p>
<p>After a week and a half of travel, I was desperate for a home-cooked meal, but also I couldn’t escape the brain fog. So I made one of our weeknight staples: lentil tacos.</p>
<p>It’s sorta healthy, very easy, and I’ve made this so many times that I could do it without thinking, which is perfect because I was basically unable to think.</p>
<p>I got some tortilla chips to serve on the side, but when it came time to serve all of our large plates were dirty because everything is terrible.</p>
<p>So I piled the chips into some larger pasta bowls and threw the tacos on top.</p>
<figure>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/figures/covid-taco-nachos.jpeg" loading="lazy" width="3024" height="3024" alt="Haphazard tacos on a pile of tortilla chips in a bowl" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/figures/covid-taco-nachos.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/figures/covid-taco-nachos.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/figures/covid-taco-nachos.jpeg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/figures/covid-taco-nachos.jpeg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/figures/covid-taco-nachos.jpeg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/figures/covid-taco-nachos.jpeg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/figures/covid-taco-nachos.jpeg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/figures/covid-taco-nachos.jpeg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/figures/covid-taco-nachos.jpeg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/figures/covid-taco-nachos.jpeg 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/figures/covid-taco-nachos.jpeg 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/figures/covid-taco-nachos.jpeg 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/figures/covid-taco-nachos.jpeg 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2880/q/60/images/figures/covid-taco-nachos.jpeg 2880w, https://www.leereamsnyder.com/resized-n-optimized-image/w/3024/q/60/images/figures/covid-taco-nachos.jpeg 3024w" sizes="(max-width: 80em) 97vw, (max-width: 99.9em) 62vw, 55vw"></p>
<figcaption>Who among us hasn't forgotten to put salsa on a taco that you are presenting to the world?</figcaption>
</figure>
<p>This turned out to be a genius move!</p>
<p>You see, when the tacos fell apart, which they always do because everything falls apart and we are all just hanging on by a thread here, the taco fillings <em>fell onto the chips</em>.</p>
<p>Now your tacos are temporarily nachos.</p>
<p>Sorry for the convenience!</p>
<h2 id="the-recipe-deaths-door-lentil-taco-nachos"><a href="https://www.leereamsnyder.com/#the-recipe-deaths-door-lentil-taco-nachos" class="header-anchor"><span>The recipe: Death’s Door Lentil Taco Nachos</span></a></h2><p>Adapted from <a href="https://www.self.com/recipe/spiced-lentil-tacos">“Spiced Lentil Tacos” in <em>Self</em> magazine</a>.</p>
<p>Serves 4.</p>
<ul>
<li>Couple of glugs of olive oil</li>
<li>1 onion</li>
<li>1 clove garlic, or more to taste and/or if you can barely taste anything</li>
<li>Salt, to taste, assuming you <em>can</em> taste</li>
<li>1 cup dried lentils</li>
<li>1 package taco seasoning mix</li>
<li>4 cups vegetable, chicken, or beef broth</li>
<li>Taco shells</li>
<li>Taco fixings of choice (sour cream, salsa, shredded cheese, avocado, gummy worms, whatever you can taste and/or sparks joy)</li>
<li>Tortilla chips, for serving</li>
</ul>
<p>Now, to make it:</p>
<ol>
<li>Just forget all this and order some takeout soup. No shame.</li>
<li>Failing that, you’re on your own in a cold, uncaring world. Set a large skillet or pot over medium heat and pour in a tablespoon or so of oil.</li>
<li>While that’s heating up, finely chop the onion. If you start to cry, it might be the onion or it might be the pain, generally.</li>
<li>Cook the onion with a pinch of salt, stirring occasionally, until translucent and softening, like your memories of ever feeling well. Maybe 7 minutes or so?</li>
<li>Meanwhile, mince however much garlic makes you feel something, rinse the lentils if you can bring yourself to care, and open the taco seasoning. Why can’t I just tear this thing open? Where are the goddamn scissors? <em>Why is everything so hard?</em></li>
<li>Add the garlic and cook until fragrant, maybe 30&#8202;–&#8202;60 seconds. Unless you can’t smell, in which case I guess just try not to burn it but I guess it doesn’t matter because nothing matters.</li>
<li>Add the taco seasoning and cook, stirring occasionally, for a minute more. Take smug satisfaction that you are <a href="https://www.bonappetit.com/story/bloom-your-spices">blooming your spices</a> even though they are coming from a packet and are probably 92% sawdust. We take satisfaction wherever we can these days.</li>
<li>Add the lentils and stir around until they’re all coated, then add the broth.</li>
<li>Increase the heat, bring it to a boil; cover with the lid slightly ajar, reduce heat to low.</li>
<li>Simmer for 30&#8202;–&#8202;40 minutes, uncovering about halfway through, until the lentils are tender and the mixture has thickened, like your ability to think clearly. In the meantime sit down, take a break, attempt to grow accustomed to the feeling of the icy hand of Death on your throat.</li>
<li>Put some tortilla chips in 4 large bowls. Place 2 or 3 taco shells on top, then fill each with several spoonfuls of the lentil mixture and whatever toppings you want. No need to be tidy; you’re just getting a jump on the nachos.</li>
</ol>
<p>I recommend watching these while wrapped up in several blankets on the couch, watching <em>Celebrity Jeopardy!</em> because the questions are easier so you might feel ever so slightly less hapless and miserable.</p>
<p>Oh, I know this one! What are…</p>
<p>… oh, you know, the things! The lots of things!</p>
<p>In the sky! The lots of things! You know! With the light!</p>
<p>…</p>
<p>…</p>
<p>stars. They’re called stars.</p>
<p>I’m going to bed now.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Be careful with text-wrap: balance and overflow-wrap: break-word in Chrome on macOS]]></title>
            <link>https://www.leereamsnyder.com/text-wrap-balance-and-overflow-wrap-in-chrome-mac</link>
            <guid>https://www.leereamsnyder.com/text-wrap-balance-and-overflow-wrap-in-chrome-mac</guid>
            <pubDate>Thu, 28 Sep 2023 16:00:00 GMT</pubDate>
            <description><![CDATA[This is what I get for using experimental CSS]]></description>
            <content:encoded><![CDATA[<style>
  figure img { border: 5px solid var(--color-accent); }
</style>
<p>I’ve been fussing with the layout of my website instead of, ya know, writing, and I noticed a <em>weird</em> text rendering bug in some versions of Chrome on macOS.</p>
<p>Just to set the stage, <code>text-wrap: balance</code> is still technically experimental and this bug&#8202;—&#8202;assuming it is a bug&#8202;—&#8202;requires a very particular combination of styles.</p>
<p>First, my <abbr>CSS</abbr> applies <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-wrap"><code>overflow-wrap</code></a> to all elements:</p>
<pre><code class="language-css">* {
  <span class="hljs-attribute">overflow-wrap</span>: break-word;
}
</code></pre>
<p>Applying this to everything is <em>probably</em> overkill, but I do this as hopefully-last-gasp “please just break the word instead of overflowing” instruction to the browser.</p>
<p>You can’t know with absolute certainty that you’re <em>never</em> going to have some long-ass text that’s too big for its container and won’t word-break cleanly. Big honkin’ <span class="sc">URL</span>s are a common culprit. If I were to drop a long one in a paragraph like say this <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_text/Wrapping_breaking_text">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_text/Wrapping_breaking_text</a> it might overflow out of its container, leading to a broken-looking page.</p>
<p>(The above <em>shouldn’t</em> break the layout on my site, because of either <code>overflow-wrap: break-word</code> or <code>hyphens: auto</code>. It might break real weird, though!)</p>
<p><a href="https://css-tricks.com/css-is-awesome/">CSS Is Awesome</a> and all that.</p>
<p>The other (newer) bit of styling I’ve started using is the experimental <code>text-wrap: balance</code> property for headings. I got this idea from <a href="https://andy-bell.co.uk/a-more-modern-css-reset/">Andy Bell’s recent <abbr>CSS</abbr> reset.</a></p>
<pre><code class="language-css"><span class="hljs-selector-tag">h1</span>,
<span class="hljs-selector-tag">h2</span>,
<span class="hljs-selector-tag">h3</span>,
<span class="hljs-selector-tag">h4</span> {
  <span class="hljs-selector-tag">text</span>-wrap: balance;
}
</code></pre>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/text-wrap">Text-wrap control</a> is currently only supported in Chrome, but it distributes words over multiple lines in a more, well, balanced way. So, instead of text broken into two lines that’s all:</p>
<pre><code><span class="hljs-attribute">The importance of being
earnest</span>
</code></pre>
<p>It’ll distribute those words so that a roughly equal number of characters are on each line, more like</p>
<pre><code><span class="hljs-attribute">The importance
of being earnest</span>
</code></pre>
<p>which looks nicer. It’s also easier than <a href="https://workingconcept.com/blog/preventing-widows-responsive-layouts">fussing around manually with non-breaking spaces</a>.</p>
<p>Alright, stage set.</p>
<p>The layout adjustment I’m making is for wider screens: I want to pull my section headings into the available left-hand margin.</p>
<p>So instead of the headers looking like this in line with the text…</p>
<figure>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/figures/chrome-text-wrap-inline-headers.png" loading="lazy" width="2160" height="800" alt="a screen capture from my site of some text with a heading. The heading is aligned with the text" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/figures/chrome-text-wrap-inline-headers.png 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/figures/chrome-text-wrap-inline-headers.png 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/figures/chrome-text-wrap-inline-headers.png 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/figures/chrome-text-wrap-inline-headers.png 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/figures/chrome-text-wrap-inline-headers.png 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/figures/chrome-text-wrap-inline-headers.png 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/figures/chrome-text-wrap-inline-headers.png 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/figures/chrome-text-wrap-inline-headers.png 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/figures/chrome-text-wrap-inline-headers.png 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/figures/chrome-text-wrap-inline-headers.png 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2160/q/60/images/figures/chrome-text-wrap-inline-headers.png 2160w" sizes="(max-width: 80em) 97vw, (max-width: 99.9em) 62vw, 55vw"></p>
<figcaption>Normal flow headers</figcaption>
</figure>
<p>… I want them to look like this:</p>
<figure>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/figures/chrome-text-wrap-outdented-headers.png" loading="lazy" width="2164" height="714" alt="a screen capture from my site of some text with a heading. The heading is pulled out of the usual block flow and appears in the sidebar." srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/figures/chrome-text-wrap-outdented-headers.png 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/figures/chrome-text-wrap-outdented-headers.png 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/figures/chrome-text-wrap-outdented-headers.png 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/figures/chrome-text-wrap-outdented-headers.png 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/figures/chrome-text-wrap-outdented-headers.png 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/figures/chrome-text-wrap-outdented-headers.png 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/figures/chrome-text-wrap-outdented-headers.png 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/figures/chrome-text-wrap-outdented-headers.png 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/figures/chrome-text-wrap-outdented-headers.png 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/figures/chrome-text-wrap-outdented-headers.png 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2164/q/60/images/figures/chrome-text-wrap-outdented-headers.png 2164w" sizes="(max-width: 80em) 97vw, (max-width: 99.9em) 62vw, 55vw"></p>
<figcaption>In-the-margin floated headers</figcaption>
</figure>
<p>(I’ve put some big borders around the images so they hopefully aren’t confusing!)</p>
<p>The way I lay out of my content with simple margins, the <abbr>CSS</abbr> for this is actually trivial:</p>
<figure>
<pre><code class="language-css"><span class="hljs-comment">/* when the screen is wide enough */</span>
<span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> <span class="hljs-attribute">min-width</span>(<span class="hljs-number">60em</span>) {
  <span class="hljs-selector-tag">h2</span> {
    <span class="hljs-attribute">float</span>: left;
    <span class="hljs-attribute">inline-size</span>: <span class="hljs-number">13.5em</span>; <span class="hljs-comment">/* the sidebar width, minus a little */</span>
    <span class="hljs-attribute">margin-inline-start</span>: <span class="hljs-number">0</span>;
  }

  <span class="hljs-comment">/* put the same top margin on both the heading and its next sibling */</span>
  <span class="hljs-selector-tag">h2</span>,
  <span class="hljs-selector-tag">h2</span> + * {
    <span class="hljs-attribute">margin-block-start</span>: <span class="hljs-number">3em</span>;
  }
}
</code></pre>
</figure>
<p>I love it when things are easy!</p>
<p>However, when I looked at it in Chrome on macOS, I saw this:</p>
<figure>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/figures/chrome-text-wrap-totally-borked-break.png" loading="lazy" width="2164" height="696" alt="a screen capture from my site of some text with a heading. The heading “Controlling your build” has split into two lines at the ”n”, leaving “g your build” on the second line" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/figures/chrome-text-wrap-totally-borked-break.png 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/figures/chrome-text-wrap-totally-borked-break.png 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/figures/chrome-text-wrap-totally-borked-break.png 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/figures/chrome-text-wrap-totally-borked-break.png 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/figures/chrome-text-wrap-totally-borked-break.png 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/figures/chrome-text-wrap-totally-borked-break.png 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/figures/chrome-text-wrap-totally-borked-break.png 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/figures/chrome-text-wrap-totally-borked-break.png 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/figures/chrome-text-wrap-totally-borked-break.png 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/figures/chrome-text-wrap-totally-borked-break.png 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2164/q/60/images/figures/chrome-text-wrap-totally-borked-break.png 2164w" sizes="(max-width: 80em) 97vw, (max-width: 99.9em) 62vw, 55vw"></p>
<figcaption>Nothin’ but a “g” thing</figcaption>
</figure>
<p><em>Wha?</em> In case that’s hard to see, the heading is 2 lines, but instead of</p>
<pre><code><span class="hljs-attribute">CONTROLLING
YOUR BUILD</span>
</code></pre>
<p>It has split the word <span class="sc">controlling</span> nonsensically like</p>
<pre><code>CONTROLLIN
<span class="hljs-selector-tag">G</span> YOUR BUILD
</code></pre>
<p>If “Controlling” was so long that it was threatening to overflow the allotted space, I could see <code>overflow-wrap: break-word</code> here saving the day and splitting the word wherever. That’s what it’s for! I asked for that!</p>
<p>So, how ’bout we stick an <code>outline</code> on the header, and see if we’re about to run out of room?</p>
<figure>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/figures/chrome-text-wrap-borked-outlined.png" loading="lazy" width="2164" height="696" alt="a screen capture from my site of some text with a heading. The heading is aligned with the text" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/figures/chrome-text-wrap-borked-outlined.png 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/figures/chrome-text-wrap-borked-outlined.png 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/figures/chrome-text-wrap-borked-outlined.png 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/figures/chrome-text-wrap-borked-outlined.png 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/figures/chrome-text-wrap-borked-outlined.png 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/figures/chrome-text-wrap-borked-outlined.png 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/figures/chrome-text-wrap-borked-outlined.png 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/figures/chrome-text-wrap-borked-outlined.png 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/figures/chrome-text-wrap-borked-outlined.png 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/figures/chrome-text-wrap-borked-outlined.png 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2164/q/60/images/figures/chrome-text-wrap-borked-outlined.png 2164w" sizes="(max-width: 80em) 97vw, (max-width: 99.9em) 62vw, 55vw"></p>
<figcaption>Nope, plenty of room</figcaption>
</figure>
<p>Ah, well.</p>
<p>What I’m <em>guessing</em> is going on is the combination of <code>overflow-wrap: break-word</code> (ie &quot;it’s ok to break words wherever if you must”) and <code>text-wrap: balance</code> (ie “make the lines look balanced”) is scrambling Chrome’s brain a bit here.</p>
<p>If I remove either of those properties, this goes away.</p>
<p>I also noticed that <a href="https://www.amitmerchant.com/text-wrap-pretty-in-css/">the hot-off-the-presses in Chrome v117 <code>text-wrap: pretty</code></a> doesn’t exhibit this behavior. So for the moment I’m fixing this with:</p>
<pre><code class="language-css"><span class="hljs-selector-tag">h2</span> {
  <span class="hljs-comment">/* other stuff */</span>

  <span class="hljs-selector-tag">text</span>-wrap: unset;
  <span class="hljs-selector-tag">text</span>-wrap: pretty;
}
</code></pre>
<p>Browsers that do <code>text-wrap: pretty</code> (Chrome v117+ for now) will use that, and earlier versions of Chrome that don’t know what that is will ignore that line and use the preceding one with <code>unset</code>.</p>
<p>This is pretty hard to recreate as it takes a just-so combination of fonts, width, words, letters, and so on, but I was able to do so <a href="https://codepen.io/leereamsnyder/pen/XWoYMGZ">in a Codepen here</a>.</p>
<p>I don’t have every version of Chromium handy and life is short, but in my testing I saw this with:</p>
<ul>
<li>macOS Chrome v117</li>
<li>macOS Chromium v116</li>
<li>macOS Chromium v119</li>
</ul>
<p>I could <em>not</em> recreate it with Chromium v111, so it seems possible this got introduced after that.</p>
<p>I’ve reported this with Chrome’s built-in issue reporter. If I hear anything or I see this change, I’ll update this article.</p>
<p><strong>Update 2023 October 19</strong>: I <a href="https://bugs.chromium.org/p/chromium/issues/detail?id=1488018">filed a bug against Chromium</a> and some testers verified it, so I’m not losing my mind. Sounds like it also happens in Ubuntu, and started somewhere in v114.</p>
<p><strong>Update 2024 March 11</strong>: According to <a href="https://social.lol/@evelynhathaway@hachyderm.io">Evelyn Hathaway on Mastodon</a>, this was <a href="https://hachyderm.io/@evelynhathaway/111694324546559324">also a problem in Firefox v121</a> after they started supporting <code>balance</code>. Judging by the linked bugs, it should be fixed now. It also appears to be fixed in Chrome v122.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Lazy-loading videos with Svelte actions]]></title>
            <link>https://www.leereamsnyder.com/lazy-loading-videos-svelte-action</link>
            <guid>https://www.leereamsnyder.com/lazy-loading-videos-svelte-action</guid>
            <pubDate>Mon, 28 Aug 2023 16:00:00 GMT</pubDate>
            <description><![CDATA[Or: fun with Intersection and Mutation Observers]]></description>
            <content:encoded><![CDATA[<p>Some of my articles, in particular lengthy video game guides like <a href="https://www.leereamsnyder.com/i-whupped-hades-ass">my <em>Hades</em> 32-heat guide</a> or <a href="https://www.leereamsnyder.com/tears-of-the-kingdom-tips">my big collection of <em>Zelda: Tears of the Kingdom</em> tips</a>&#8202;—&#8202;use the <code>&lt;video /&gt;</code> tag to show inline snippets of gameplay.</p>
<p>It’s nice to break up big chunks of text or demonstrate the finer points with a video. But because videos can be bandwidth hogs, I’ve used a couple of different patterns over the years to respect my visitor’s data usage.</p>
<p>Here’s where I’ve landed today.</p>
<h2 id="the-video-markup"><a href="https://www.leereamsnyder.com/#the-video-markup" class="header-anchor"><span>The video markup</span></a></h2><p>Here’s the full markup pattern I use for videos:</p>
<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;lazy&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;1280&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;720&quot;</span> <span class="hljs-attr">muted</span> <span class="hljs-attr">loop</span> <span class="hljs-attr">playsinline</span> <span class="hljs-attr">controls</span> <span class="hljs-attr">preload</span>=<span class="hljs-string">&quot;none&quot;</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/path/to/video.mp4&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;video/mp4&quot;</span> /&gt;</span>

  Your browser does not support the video tag or something has gone wrong with loading the video.
<span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span>
</code></pre>
<p>Bunch of things to call out here:</p>
<ul>
<li>I <em>don’t</em> use the <code>autoplay</code> attribute. I could add it to make the video something closer to an animated <abbr>GIF</abbr>, but I’d rather give my visitor control over starting playback. Oh, also, <code>autoplay</code> trumps any <code>preload</code> setting and forces the browser to load the video.</li>
<li><code>controls</code> makes sure you <em>can</em> control playback.</li>
<li><code>playsinline</code> will play the video in place in the page instead of the default behavior (in mobile browsers) of taking over the full screen during playback.</li>
<li><code>muted</code> will initially mute the video’s audio track. Nobody wants videos to start playing and blasting full-volume sound at you except for users of Instagram, according to Instagram, apparently.</li>
<li><code>loop</code> will replay the video automatically, like an animated <abbr>GIF</abbr>.</li>
<li>The <code>height</code> and <code>width</code> attributes make sure the video has the correct aspect ratio, so it won’t change size and shift the page around when data actually does load in.</li>
<li>The <code>class=&quot;lazy&quot;</code> gives me a hook to target videos with my scripts.</li>
</ul>
<p>The <a href="https://web.dev/video-and-source-tags/#preload"><code>preload</code> attribute set to <code>&quot;none&quot;</code></a> is the most important bit. Without it, or even with <a href="https://johnkavanagh.co.uk/writing/html-video-and-the-preload-attribute/">the Goldilocks-sounding <code>&quot;metadata&quot;</code> value</a>, I found that Firefox and Safari often loaded short videos <em>in full</em> in advance, even if the video was waaaay down the page and you might not ever see it.</p>
<p>You can solve this problem <a href="https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading#images_and_iframes">with images with <code>loading=&quot;lazy&quot;</code></a>, but videos don’t have anything like that.</p>
<p>The <a href="https://web.dev/lazy-loading-video/#video-gif-replacement">top Google result on lazy-loading videos from web.dev</a> suggests sending incomplete video markup (you use something non-functional like <code>data-src</code> instead of <code>src</code> for the video urls) to prevent anything preloading, then fixing the markup with JavaScript.</p>
<p>I used this pattern for a while. And it works great! Unless, like I do, you push that incomplete markup into something like <a href="https://www.leereamsnyder.com/rss.xml">an <abbr>RSS</abbr> feed</a> or <a href="https://buttondown.email/leereamsnyder">an email newsletter</a> where I won’t have access to JavaScript to fix things. Or if you want the videos to still sorta work if my scripts fail for whatever reason.</p>
<p>With functional <abbr>HTML</abbr>, using <code>preload=&quot;none&quot;</code> was the only reliable way to to make sure all browsers load nothing. The drawback is nothing <em>really</em> means nothing: the video tag is an empty box with a play icon, no preview image, no playback details like the duration. You have to start playback to initiate loading.</p>
<p>We’ll improve this situation with scripts.</p>
<h2 id="the-javascript-as-a-svelte-action"><a href="https://www.leereamsnyder.com/#the-javascript-as-a-svelte-action" class="header-anchor"><span>The JavaScript (as a Svelte action)</span></a></h2><p>Because I build my site with Svelte, my current implementation <a href="https://svelte.dev/docs/element-directives#use-action">uses a Svelte action</a>, a function that runs when an element is mounted and receives that element as an argument.</p>
<p>You can use actions to tweak the behavior of existing elements; the <a href="https://learn.svelte.dev/tutorial/actions">official Svelte tutorial on actions</a> calls out lazy-loading as a possible use case.</p>
<p>Here’s the action code that’s in use on my site today:</p>
<pre><code class="language-js"><span class="hljs-comment">// actions/lazyLoadVideos.js</span>

<span class="hljs-comment">/** <span class="hljs-doctag">@type</span> {<span class="hljs-type">import(&#x27;svelte/action&#x27;).Action</span>}  */</span>
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">lazyLoadVideos</span>(<span class="hljs-params">node</span>) {
  <span class="hljs-keyword">const</span> supported = <span class="hljs-string">&#x27;IntersectionObserver&#x27;</span> <span class="hljs-keyword">in</span> <span class="hljs-variable language_">window</span> &amp;&amp; <span class="hljs-string">&#x27;MutationObserver&#x27;</span> <span class="hljs-keyword">in</span> <span class="hljs-variable language_">window</span>
  <span class="hljs-keyword">if</span> (!supported) <span class="hljs-keyword">return</span>

  <span class="hljs-keyword">const</span> io = <span class="hljs-keyword">new</span> <span class="hljs-title class_">IntersectionObserver</span>(<span class="hljs-function">(<span class="hljs-params">entries, observer</span>) =&gt;</span> {
    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> { isIntersecting, <span class="hljs-attr">target</span>: video } <span class="hljs-keyword">of</span> entries) {
      <span class="hljs-keyword">if</span> (isIntersecting &amp;&amp; video <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">HTMLVideoElement</span>) {
        video.<span class="hljs-title function_">load</span>()
        video.<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&#x27;lazy&#x27;</span>)
        observer.<span class="hljs-title function_">unobserve</span>(video)
      }
    }
  })

  <span class="hljs-keyword">const</span> mo = <span class="hljs-keyword">new</span> <span class="hljs-title class_">MutationObserver</span>(<span class="hljs-function">(<span class="hljs-params">mutations</span>) =&gt;</span> {
    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> mutation <span class="hljs-keyword">of</span> mutations) {
      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> removedNode <span class="hljs-keyword">of</span> <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(mutation.<span class="hljs-property">removedNodes</span>)) {
        <span class="hljs-keyword">if</span> (removedNode <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">HTMLVideoElement</span> &amp;&amp; removedNode.<span class="hljs-property">classList</span>.<span class="hljs-title function_">contains</span>(<span class="hljs-string">&#x27;lazy&#x27;</span>)) {
          io.<span class="hljs-title function_">unobserve</span>(removedNode)
        }
      }
      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> addedNode <span class="hljs-keyword">of</span> <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(mutation.<span class="hljs-property">addedNodes</span>)) {
        <span class="hljs-keyword">if</span> (addedNode <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">HTMLVideoElement</span> &amp;&amp; addedNode.<span class="hljs-property">classList</span>.<span class="hljs-title function_">contains</span>(<span class="hljs-string">&#x27;lazy&#x27;</span>)) {
          io.<span class="hljs-title function_">observe</span>(addedNode)
        }
      }
    }
  })

  <span class="hljs-comment">// initialization for the IntersectionObserver (first load)</span>
  <span class="hljs-keyword">const</span> initialLazyVideos = <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(node.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;video.lazy&#x27;</span>))
  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> lazyVideo <span class="hljs-keyword">of</span> initialLazyVideos) {
    io.<span class="hljs-title function_">observe</span>(lazyVideo)
  }

  mo.<span class="hljs-title function_">observe</span>(node, {
    <span class="hljs-attr">childList</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">subtree</span>: <span class="hljs-literal">false</span>,
  })

  <span class="hljs-keyword">return</span> {
    <span class="hljs-title function_">destroy</span>(<span class="hljs-params"></span>) {
      io.<span class="hljs-title function_">disconnect</span>()
      mo.<span class="hljs-title function_">disconnect</span>()
    },
  }
}
</code></pre>
<p>The core idea&#8202;—&#8202;using an <a href="https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API"><code>IntersectionObserver</code></a> to detect when a video enters the screen&#8202;—&#8202;comes straight from <a href="https://web.dev/lazy-loading-video/#video-gif-replacement">the web.dev article</a>.</p>
<p>But because I already have functional markup, my callback for that <code>IntersectionObserver</code>&#8202;—&#8202;what runs when videos that you <code>.observe()</code> enter or leave the screen&#8202;—&#8202;is simpler:</p>
<pre><code class="language-js"><span class="hljs-keyword">const</span> io = <span class="hljs-keyword">new</span> <span class="hljs-title class_">IntersectionObserver</span>(<span class="hljs-function">(<span class="hljs-params">entries, observer</span>) =&gt;</span> {
  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> { isIntersecting, <span class="hljs-attr">target</span>: video } <span class="hljs-keyword">of</span> entries) {
    <span class="hljs-keyword">if</span> (isIntersecting &amp;&amp; video <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">HTMLVideoElement</span>) {
      video.<span class="hljs-title function_">load</span>()
      video.<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&#x27;lazy&#x27;</span>)
      observer.<span class="hljs-title function_">unobserve</span>(video)
    }
  }
})
</code></pre>
<p>We only call the video’s <code>load()</code> method to override the <code>preload=&quot;none&quot;</code> and start loading the video. Depending on your needs, you could do other things: perhaps set <code>video.autoplay = true</code> to <abbr>GIF</abbr>-ify the video.</p>
<p>You don’t strictly need the <code>instanceof HTMLVideoElements</code> checks, but if you’re using TypeScript, it’ll appease the compiler that the video element will have a <code>load</code> method.</p>
<p>When the action fires up, we check for any existing videos on the page and have the <code>IntersectionObserver</code> start, uh, observing them:</p>
<pre><code class="language-js"><span class="hljs-keyword">const</span> initialLazyVideos = <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(node.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;video.lazy&#x27;</span>))
<span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> lazyVideo <span class="hljs-keyword">of</span> initialLazyVideos) {
  io.<span class="hljs-title function_">observe</span>(lazyVideo)
}
</code></pre>
<p>If your content on the page will never change, you’re done.</p>
<p>However, in my case, the element in question stays mounted if you navigate between different articles. So we need to detect if videos have been added or removed after we set everything up.</p>
<p>The solution I landed on is a <code>MutationObserver</code>, a <a href="https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver">standard JavaScript API</a> that tells you when the <abbr>DOM</abbr> for an element has changed:</p>
<pre><code class="language-js"><span class="hljs-keyword">const</span> mo = <span class="hljs-keyword">new</span> <span class="hljs-title class_">MutationObserver</span>(<span class="hljs-function">(<span class="hljs-params">mutations</span>) =&gt;</span> {
  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> mutation <span class="hljs-keyword">of</span> mutations) {
    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> removedNode <span class="hljs-keyword">of</span> <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(mutation.<span class="hljs-property">removedNodes</span>)) {
      <span class="hljs-keyword">if</span> (removedNode <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">HTMLVideoElement</span> &amp;&amp; removedNode.<span class="hljs-property">classList</span>.<span class="hljs-title function_">contains</span>(<span class="hljs-string">&#x27;lazy&#x27;</span>)) {
        io.<span class="hljs-title function_">unobserve</span>(removedNode)
      }
    }
    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> addedNode <span class="hljs-keyword">of</span> <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(mutation.<span class="hljs-property">addedNodes</span>)) {
      <span class="hljs-keyword">if</span> (addedNode <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">HTMLVideoElement</span> &amp;&amp; addedNode.<span class="hljs-property">classList</span>.<span class="hljs-title function_">contains</span>(<span class="hljs-string">&#x27;lazy&#x27;</span>)) {
        io.<span class="hljs-title function_">observe</span>(addedNode)
      }
    }
  }
})

mo.<span class="hljs-title function_">observe</span>(node, {
  <span class="hljs-attr">childList</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">subtree</span>: <span class="hljs-literal">false</span>,
})
</code></pre>
<p>Our mutation callback runs when elements are added or removed from the parent element <code>node</code>. If it’s a lazy <code>video</code>, we add or remove it from the <code>IntersectionObserver</code>’s list of observed elements. So when the page’s content changes we’ll handle any new videos.</p>
<p>On my site, videos are direct children of the parent element, but if they are deeper in the tree you can have the <code>MutationObserver</code> track that with the <code>subtree: true</code> option.</p>
<p>Add this action to an existing <abbr>DOM</abbr> element in Svelte like so:</p>
<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">
  <span class="hljs-keyword">import</span> lazyLoadVideos <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./actions/lazyLoadVideos.js&#x27;</span>
</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:lazyLoadVideos</span>&gt;</span>
  <span class="hljs-comment">&lt;!-- your content with videos --&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
</code></pre>
<p>Assuming I got this right and it all works, here, give it a shot:</p>
<video class="lazy" width="328" height="480" muted loop playsinline controls preload="none">
  <source src="https://media.giphy.com/media/cKP1HFgDuimKV2WUSn/giphy.mp4" type="video/mp4" />
<p>Your browser does not support the video tag or something has gone wrong with loading the video. <a href="https://giphy.com/gifs/farmersinsurance-pointing-the-more-you-know-ok-cool-cKP1HFgDuimKV2WUSn">Try it on Imgur</a></p>
</video>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How I handle emails from job recruiters]]></title>
            <link>https://www.leereamsnyder.com/recruiter-auto-response</link>
            <guid>https://www.leereamsnyder.com/recruiter-auto-response</guid>
            <pubDate>Thu, 17 Aug 2023 16:00:00 GMT</pubDate>
            <description><![CDATA[Some advice and a script you can steal]]></description>
            <content:encoded><![CDATA[<p>Because I’m a software developer, I get a lot of solicitations from recruiters through LinkedIn. Like, <em>a lot</em>.</p>
<p>Although my inbox was been relatively quiet in the first half of this year, at the peak of the market I was getting a dozen per day.</p>
<p>Most of them, however, are worse than useless. They’ll be all…</p>
<blockquote>
<p>Hey Lee! I noticed your peachy-keen profile on LinkedIn and think you’d be a swell match for a role at a company! Wanna hop on a call for 15 minutes and talk about it?</p>
</blockquote>
<p><img src="https://media.giphy.com/media/TiUYdWptTqn8yOk1Dp/giphy.gif" alt="Spider-man holding up placards that say “no”"></p>
<p><strong>No one ever wants to hop on a call</strong>! Jesus.</p>
<p>I wish I was joking about the lack of information. I literally got three from the same guy that said:</p>
<blockquote>
<p>We help businesses across North Carolina with hiring talented Other.</p>
</blockquote>
<p>I <em>am</em> a talented “Other,” thank you for noticing! I feel seen.</p>
<p>As a professional courtesy I nudged the guy to maybe check how his mail merge was working out for him. Then he sent another three emails with the exact same text.</p>
<p>Or how about this one I got yesterday:</p>
<blockquote>
<p>Hey, I have an immediate need for a ${my current role}. This company has offices in ${the city in which I currently work}, ${the city where someone I am chatting with right now works}, ${the city where I am <em>also</em> hiring people}, or ${the city where my current employer is headquartered}. If you’re interested, please send me your resume!</p>
</blockquote>
<p>So, am I interested in working for what is clearly the company that I currently work at? I suppose, existentially, that’s a fun question.</p>
<p>Here’s another fun question: did you know LinkedIn charges like three bucks for every one of these emails that go out? 🤯</p>
<p>So, sure, it’s easy and satisfying to smash that delete button. I wouldn’t blame anyone for doing that.</p>
<p>However, last year I read <a href="https://index.medium.com/career-advice-nobody-gave-me-never-ignore-a-recruiter-4474eac9556">an article on Medium called “Career Advice Nobody Gave Me: Never Ignore a Recruiter”</a> by <a href="https://alexchesser.medium.com/">Alex Chesser</a> that changed my view on this a bit.</p>
<p>Alex argues that recruiters can be a source of valuable information, and it isn’t hard to get it.</p>
<p>The trick is to respond to every recruiting email that comes in, but do so with a form letter of your own.</p>
<p><img src="https://media.giphy.com/media/fQorEj8vN8eqkNcy6T/giphy-downsized-large.gif" alt="Scene from “The Office” where Michael Scott says, “well well well, how the turntables…”"></p>
<p>In his article, Alex shared <a href="https://github.com/AlexChesser/recruiter-autoresponse/">his full template</a>, broke down his reasoning for everything in it, and invited readers to use and remix it for themselves.</p>
<p>It’s pretty good! But it isn’t, well, <em>me</em>&#8202;—&#8202;it had <em>zero</em> semicolons <abbr>omg</abbr>&#8202;—&#8202;so I took Alex’s handsome block of marble and chopped it down to my liking. Here’s where I landed:</p>
<blockquote>
<p>Thanks for reaching out! I love learning about new and exciting opportunities.</p>
<p>As a talented software engineer with in-demand skills, I receive lots of messages from recruiters on LinkedIn.</p>
<p>This is an incredible privilege; I’m thankful for it.</p>
<p>However, it does mean that I don’t have the time to hop on a call with everyone who sends a message, particularly when many opportunities would not, in the end, be a great fit.</p>
<p>I would love to continue the conversation, but first I need more details around the level of seniority that you’re looking for.</p>
<p>Can you send the company name, a detailed job description, and total compensation details for this role?</p>
<p>(If your message included some of those details, sorry! This is an automated response. With the number of messages I receive, sorting high quality opportunities from spam would be a full time job without it.)</p>
<p>Without detailed information about this opportunity, I will be unavailable for further discussion.</p>
<p>Again, thanks for reaching out! I look forward to hearing from you.</p>
<p>Cheers,
Lee</p>
</blockquote>
<p>That’s it! It’s been serving me well for almost 18 months now. Let’s break that all down.</p>
<blockquote>
<p>Thanks for reaching out! I love learning about new and exciting opportunities.</p>
</blockquote>
<p>Not only is “new and exciting opportunities” vague enough to apply to anything, but also it implies that I have certain standards.</p>
<blockquote>
<p>As a talented software engineer with in-demand skills, I receive lots of messages from recruiters on LinkedIn.</p>
</blockquote>
<p>Toot your own horn! They don’t know <a href="https://web.archive.org/web/20230605112156/https://the-toast.net/2014/01/28/everyone-imposter-syndrome-except/">you’re a fraud</a> yet!</p>
<blockquote>
<p>This is an incredible privilege; I’m thankful for it.</p>
</blockquote>
<p>Even frauds should stay humble.</p>
<blockquote>
<p>However, it does mean that I don’t have the time to hop on a call with everyone who sends a message, particularly when many opportunities would not, in the end, be a great fit.</p>
</blockquote>
<p>Here we start setting boundaries for this relationship and point out that <strong>no one wants to hop on a call</strong>. Jesus.</p>
<p>I am also revealing my love language: I think the greatest act of service I can provide or gift I can give is not wasting each other’s time.</p>
<blockquote>
<p>I would love to continue the conversation, but first I need more details around the level of seniority that you’re looking for.</p>
<p>Can you send the company name, a detailed job description, and total compensation details for this role?</p>
</blockquote>
<p>Here’s the quid pro quo&#8202;—&#8202;also a critical reading assessment. I’m willing to talk, but before that happens I need to know who’s hiring, what I’ll be doing, and for how much.</p>
<p>It is astonishing to me that emails from recruiters typically include none of this. I mean, that’s the <em>bare minimum</em>, right? I’m not going to engage if there’s a huge pay cut. Or if there’s a mismatch between what I do and what they want me to do. (Pro-tip to any recruiters who happen to be reading this: Java and JavaScript are very different programming languages!)</p>
<p>Even if the money and role fit, I’d still want to know who I’d be working for. Like, you couldn’t pay me enough to work at Facebook.</p>
<blockquote>
<p>(If your message included some of those details, sorry! This is an automated response. With the number of messages I receive, sorting high quality opportunities from spam would be a full time job without it.)</p>
</blockquote>
<p>This does a couple of things. First, I’m covering my own ass if they already told me some of my three required bits. I can’t be bothered to edit this.</p>
<p>Second, I’m admitting that I just copy-pasted this. Doesn’t hurt to be honest.</p>
<p>Third, I’m reminding them that I’m awesome and in-demand and well worth their time.</p>
<blockquote>
<p>Without detailed information about this opportunity, I will be unavailable for further discussion.</p>
</blockquote>
<p>This is the most professional way I can think of to say, “fuck around and find out.”</p>
<blockquote>
<p>Again, thanks for reaching out! I look forward to hearing from you.</p>
<p>Cheers,
Lee</p>
</blockquote>
<p>Call to action, adios.</p>
<p>Although looking at it now, I might drop the sign-off. &quot;Cheers&quot;? What the hell? Yeah, it’s gone.</p>
<p>So that’s it. Copy-paste that, send, and move on with your day.</p>
<p>What happens next will be one of four things:</p>
<ol>
<li><strong>No response</strong>: Either they can’t be bothered or they’re somehow offended at having received a form letter, which, ironic. Fine!</li>
<li><strong>They respond but do not provide my required details</strong>: They have failed my critical reading test. Trash.</li>
<li><strong>They do not answer me my riddles three but claim they can’t tell you some of it, like they’re not allowed to reveal who’s hiring and c’mon let’s get on a 15-minute call</strong>: This really happens sometimes and is utter insanity to me. This is work, not Fight Club. Trash.</li>
<li><strong>They brought the goods</strong>: Huzzah!</li>
</ol>
<p>Critically, if they <em>do</em> respond with everything you asked for, you should, no, <em>must</em> respond back!</p>
<p>They’ve given you useful information&#8202;—&#8202;who’s hiring these days? what gaps do they have? what tech are they using? how are their salaries compared to what you’re making now?—so the least you can do is be straight with them.</p>
<p>Even if it’s a poor fit! Maybe you won’t look for anything that’s less than 1.5x your current salary (no need to reveal your actual current salary), maybe you hate Facebook, maybe this role is definitely sounding junior-level even though they claim you need 17 years of experience, maybe you need to patiently explain that you’ve never written a line of Java in your life and yes, sure, I do know Java<em>Script</em> but they’re not the same hahahahahahahaaaaaaa what a world!</p>
<p>Tell them these things! They told <em>you</em> some things; it’s only fair.</p>
<p>Maybe this role won’t work out, but they happen to also be recruiting for something that would be a better fit? Or now that they have a better sense of your skills, they might keep you in mind for something else down the road. Who knows? Either way, now we’re having a real discussion.</p>
<p>Or, best case scenario, you might suddenly learn about something cool&#8202;—&#8202;lots more money, prestigious company (ie not owned by Elon Musk), interesting tech stack, beguiling problem space, whatever.</p>
<p>Either way, you’ve learned something useful and all it took was 20 seconds to copy-paste an email.</p>
<p>Maybe less, if you set up a <a href="https://support.apple.com/guide/mac-help/replace-text-punctuation-documents-mac-mh35735/mac">text replacement shortcut</a> to spit out your form letter. A handy trick is to start your shortcuts with <code>zz</code> because no real word starts with <code>zz</code>. My personal shortcut for this letter is <code>zzfuckoff</code>. I accept that this is against the spirit of this article but we are all walking contradictions.</p>
<p>Anyway, your mileage may vary but after a few months of this gentle email dancing I had a <em>much</em> clearer picture of the market and where I was positioned within it, knowledge that came in handy when a phone-call-worthy opportunity landed in my inbox.</p>
<p>What you do with this information is up to you. I will suggest you should absolutely avoid any sort of stressful technical interview until you’re sure you’re interested in a position. Also, <a href="https://www.kalzumeus.com/2012/01/23/salary-negotiation/">brush up on pitching yourself and how to handle salary negotiation</a>.</p>
<p>Oh, also, just like Alex offered, <strong>feel free to use and tweak my script for your own purposes</strong>. Enjoy this new potential source of knowledge. As Alex put it in closing his essay:</p>
<blockquote>
<p>The advice is to make sure you stay aware of your true market value over the course of your career. That you remain confident in the options you have available to you and that you don’t stagnate or languish in any given job.</p>
</blockquote>
<p>Put another way:</p>
<p><img src="https://media.giphy.com/media/KpRoZeI2dLhf2/giphy.gif" alt="GI Joe: Knowing is half the battle" title="obvious.gif"></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Zelda: Tears of the Kingdom tips]]></title>
            <link>https://www.leereamsnyder.com/tears-of-the-kingdom-tips</link>
            <guid>https://www.leereamsnyder.com/tears-of-the-kingdom-tips</guid>
            <pubDate>Wed, 09 Aug 2023 16:00:00 GMT</pubDate>
            <description><![CDATA[Or, as Google seems to think I mean, “YORK” or “Total” tips]]></description>
            <content:encoded><![CDATA[<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/heroes/tears-of-the-kingdom.PNG" loading="lazy" width="1920" height="1080" alt="" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/heroes/tears-of-the-kingdom.PNG 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/heroes/tears-of-the-kingdom.PNG 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/heroes/tears-of-the-kingdom.PNG 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/heroes/tears-of-the-kingdom.PNG 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/heroes/tears-of-the-kingdom.PNG 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/heroes/tears-of-the-kingdom.PNG 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/heroes/tears-of-the-kingdom.PNG 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/heroes/tears-of-the-kingdom.PNG 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/heroes/tears-of-the-kingdom.PNG 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/heroes/tears-of-the-kingdom.PNG 1920w" sizes="(max-width: 32em) 96vw, 30em"></p>
<div class="intro">
<p>[Comes up for air] I’ve been playing <em>Zelda: Tears of the Kingdom</em> nonstop for months and it’s a dang delight. Here’s a bunch of tips and advice if you’re about to take the plunge.</p>
</div>
<p>Although I do not spoil any of the story, there are <strong>obviously spoilers ahead around gameplay mechanics</strong>.</p>
<h2 id="more-resources"><a href="https://www.leereamsnyder.com/#more-resources" class="header-anchor"><span>More resources</span></a></h2><p>This is all compiled from assorted guides, Reddit folks, and my own experience playing the heck out of this and <em>Breath of the Wild</em>.</p>
<p>Here’s a bunch of things that helped me out a ton (I was made aware of several of these <a href="https://www.reddit.com/r/tearsofthekingdom/comments/14rt309/comment/jqufz8d/?context=3">from Reddit user CompletelyAwesomeJim</a>):</p>
<ul>
<li><a href="https://www.neoseeker.com/zelda-tears-of-the-kingdom/walkthrough">The <em>Neoseeker</em> guide</a>: Easy to follow and with more personality than a lot of other guides. If you’re stuck on a side quest or a particular shrine, I’d start here.</li>
<li><a href="https://www.polygon.com/zelda-tears-of-the-kingdom-guide/23695569/walkthrough-guides"><em>Polygon</em>’s complete guide</a>: lots of great introductory content, and very good guidance on the major quests and armor sets.</li>
<li><a href="https://mapgenie.io/zelda-tears-of-the-kingdom/maps/hyrule">The MapGenie map</a>: This a bit overwhelming but it’s generally very explicit about how to get to things&#8202;—&#8202;handy when a treasure chest could be underground.</li>
<li><a href="https://objmap-totk.zeldamods.org/#/map/z3,0,0,Surface">Object Map</a>: This can be fussy with the search terms (for example, the weapon statues in the Depths are <code>Npc_MinusFieldGhost_000</code> which sure yes of course), but if you absolutely must find a specific item or creature, this will point you there.</li>
<li><a href="https://zeldamaps.com/?game=TotK">The Zelda Maps map</a>: Many Korok puzzles have “starting points” that are different from the mapped location of the seed, and this one is excellent about marking those points.</li>
<li><a href="https://docs.google.com/spreadsheets/d/18pNtDx3z-8CwGJRmlW574xbQ6VphQOkvpZhClpOEVDA/edit#gid=704906736">Tears of the Kingdom Data Sheet</a>: This is data pulled from the game’s source. There’s a lot of internal code jargon, but if you need to know everything about a mechanic, it’s probably in here.</li>
</ul>
<h2 id="general-tips"><a href="https://www.leereamsnyder.com/#general-tips" class="header-anchor"><span>General tips</span></a></h2><h3 id="explore-liberally"><a href="https://www.leereamsnyder.com/#explore-liberally" class="header-anchor"><span>Explore liberally</span></a></h3><p>If you’re coming from <em>Breath of the Wild</em>, <em>Tears of the Kingdom</em> is friendlier to exploring all corners of the world. Although, sure, there are <a href="https://www.leereamsnyder.com/#lynels">Lynels</a> and <a href="https://www.leereamsnyder.com/#gleeoks">Gleeoks</a> and <a href="https://www.leereamsnyder.com/#gloom-spawn-aka-gloom-hands">Gloom Hands</a> tucked away here and there, <em>TotK</em> has nothing like the terrifying murder robots that blocked off large chunks of the map in <em>BotW</em>. So wander away&#8202;—&#8202;just maybe <a href="https://www.leereamsnyder.com/#stick-to-the-main-quest-early-on">do some main quests first</a>.</p>
<h3 id="just-try-stuff"><a href="https://www.leereamsnyder.com/#just-try-stuff" class="header-anchor"><span>Just try stuff</span></a></h3><p>The greatest trick this game pulls off is if you have a idea, there’s a good chance it’ll work! So try things out; worst case scenario is you lose a few minutes since the last autosave.</p>
<p>Speaking of saving…</p>
<h3 id="save-frequently"><a href="https://www.leereamsnyder.com/#save-frequently" class="header-anchor"><span>Save frequently</span></a></h3><p>The autosave system is pretty generous, but you should still save manually&#8202;—&#8202;especially before entering somewhere scary looking and early on when you’re fragile.</p>
<h3 id="pick-up-everything"><a href="https://www.leereamsnyder.com/#pick-up-everything" class="header-anchor"><span>Pick up everything</span></a></h3><p>Trust me, you’ll eventually need it. If not, you can <a href="https://www.leereamsnyder.com/#sell-your-junk">sell it</a>.</p>
<h3 id="lock-the-minimap-to-north"><a href="https://www.leereamsnyder.com/#lock-the-minimap-to-north" class="header-anchor"><span>Lock the minimap to north</span></a></h3><p>There’s an in-game option to keep the minimap oriented in the same direction. It’s madness to me that this isn’t the default. I found it way easier to keep track of where I was going when the map wasn’t rotating along with the camera.</p>
<h3 id="use-your-scope-while-skydiving"><a href="https://www.leereamsnyder.com/#use-your-scope-while-skydiving" class="header-anchor"><span>Use your scope while skydiving</span></a></h3><p>For whatever reason, pulling out your scope in the air nearly halts your fall; you can look around all you want. So take your time and look for shrines or intriguing landmarks and pin away.</p>
<h2 id="progression"><a href="https://www.leereamsnyder.com/#progression" class="header-anchor"><span>Progression</span></a></h2><h3 id="get-the-archaic-warm-greaves"><a href="https://www.leereamsnyder.com/#get-the-archaic-warm-greaves" class="header-anchor"><span>Get the Archaic Warm Greaves</span></a></h3><p>After you finish the Gutanbac Shrine (the Ascend tutorial) on the Great Sky Island, you’ll likely pass through a huge hollow tree to the north. Sniff around there for a chest with the Archaic Warm Greaves. You can’t upgrade these, but they’re better than nothing and they give you one level of cold protection. These will probably be glued to you for many hours in the early game.</p>
<h3 id="stick-to-the-main-quest-early-on"><a href="https://www.leereamsnyder.com/#stick-to-the-main-quest-early-on" class="header-anchor"><span>Stick to the main quest early on</span></a></h3><p>This pains me to say about an open-world game, but even when you’ve dropped down to Hyrule and can technically go anywhere, follow the main quest line for a good while. Do some easy quests around Lookout Landing and Hyrule Castle to get your Paraglider and learn how the towers work.</p>
<p>From there, do Robbie’s quest&#8202;—&#8202;a brief introduction to the Depths&#8202;—&#8202;to unlock the camera ability. Get in the habit of taking pictures of everything, because later on you can use Sensor+ to find more of anything you’ve snapped a picture of.</p>
<h3 id="do-the-rito-quest-first"><a href="https://www.leereamsnyder.com/#do-the-rito-quest-first" class="header-anchor"><span>Do the Rito quest first</span></a></h3><p>After you have your Paraglider, I’d move towards Rito Village in the northwest and tackle the regional quest there. Stick to the main road out of Lookout Landing; it’s not too dangerous and it’ll lead you right to New Serenne Stable.</p>
<p>Around New Serenne, you can get a horse and kick off a game-long side quest to visit the huge glowing glyphs that you might have spotted from the air. There’s also a tower near the stable, and you’ll find Hestu on the way up so you can start expanding your inventory with <a href="https://www.leereamsnyder.com/#finding-korok-seeds">Korok Seeds</a>.</p>
<p>Explore some caves and try some shrines that you spot on the way, but keep moving towards Rito. Be ready to sell all your junk to afford some of the Snowquill Armor set when you get there. You can get around Rito with one level of cold protection, but you’ll need a second one when you get up in the sky. If you got the Archaic Warm Greaves, you need only the head or chest piece of the Snowquill set (or a whole lot of Spicy Peppers).</p>
<p>I found the whole Rito Village and Wind Temple quest quite fun, and the reward for completing it gives you some much-needed mobility in the air that’ll help you out the rest of the game.</p>
<h3 id="start-the-lucky-glover-gazette-quest-line"><a href="https://www.leereamsnyder.com/#start-the-lucky-glover-gazette-quest-line" class="header-anchor"><span>Start the Lucky Glover Gazette quest line</span></a></h3><p>Just southeast of Rito Village is the Lucky Clover Gazette headquarters, which will kick off a delightful side quest that pushes you to all the other stables. Each one has a convenient shrine nearby, and visiting all the stables will kick off another series of quests that will get you access to the Great Fairies&#8202;—&#8202;they can upgrade your armor. Also, the stables are fairly close to the Skyview Towers, so… well, you can spiral out on your own from here.</p>
<p>Completing all the stable quests will net you the Frog Armor set which lets you climb slippery rocks, a huge advantage in the rain or in damp caves.</p>
<h3 id="keep-checking-in-at-lookout-landing"><a href="https://www.leereamsnyder.com/#keep-checking-in-at-lookout-landing" class="header-anchor"><span>Keep checking in at Lookout Landing</span></a></h3><p>After you finish one of the regional quests, you’ll have new side quests at Lookout Landing:</p>
<ul>
<li>Talk to Josha and go diving into the Depths and unlock a new ability.</li>
<li>After you do Josha’s quest, talk to Robbie who will relocate to Hateno Village and give you <em>even more</em> abilities that will help you out while you’re exploring or hunting for specific items.</li>
<li>Go mining via a hole that opens up in the underground shelter and find some decent early-game armor (the Soldier’s set).</li>
</ul>
<h3 id="start-the-zora-regional-quest"><a href="https://www.leereamsnyder.com/#start-the-zora-regional-quest" class="header-anchor"><span>Start the Zora regional quest</span></a></h3><p>Early on while helping the Zora, you’ll get the Zora Armor. It lets you launch yourself up waterfalls, invaluable for reaching some Sky Islands or navigating caves.</p>
<h2 id="fuse"><a href="https://www.leereamsnyder.com/#fuse" class="header-anchor"><span>Fuse</span></a></h2><p>I go into more detail on Fuse in the sections on <a href="https://www.leereamsnyder.com/#shields">shields</a>, <a href="https://www.leereamsnyder.com/#weapons">weapons</a>, and <a href="https://www.leereamsnyder.com/#fuse-flying-baddies-parts-to-arrows">archery</a>.</p>
<h3 id="you-can-remove-fused-materials-from-weapons-and-shields"><a href="https://www.leereamsnyder.com/#you-can-remove-fused-materials-from-weapons-and-shields" class="header-anchor"><span>You can remove fused materials from weapons and shields</span></a></h3><p>Two ways to go about this.</p>
<p>First, you can select the weapon or shield in the <strong>+</strong> menu, hit <strong>A</strong>, and choose <strong>Remove Fused Material</strong>. Although this destroys the Fused material, now you can Fuse something else to the weapon.</p>
<p>The other option is a Goron named Pelison in Tarrey Town in the Akkala region (the northeast section of the map). He’ll recover Fused materials from weapons and shields for 20 Rupees.</p>
<p>If you’ve got a rare or powerful material attached to a weapon that’s just about to break, you can have Pelison split them, then attach the material to something new.</p>
<p>Or if you’re tight on inventory space while exploring, fuse naked weapons and shields together, then have Pelison split them apart later when you have more room.</p>
<h2 id="ultrahand"><a href="https://www.leereamsnyder.com/#ultrahand" class="header-anchor"><span>Ultrahand</span></a></h2><h3 id="zl-resets-an-items-orientation"><a href="https://www.leereamsnyder.com/#zl-resets-an-items-orientation" class="header-anchor"><span>ZL resets an item’s orientation</span></a></h3><p>If you’re feeling like everything you pick up is always at weird angles, tap <strong>ZL</strong>; it’ll snap the item to a 45° angle, perfect for rotating with <strong>R</strong>.</p>
<h3 id="ultrahand-reveals-what-you-can-interact-with"><a href="https://www.leereamsnyder.com/#ultrahand-reveals-what-you-can-interact-with" class="header-anchor"><span>Ultrahand reveals what you can interact with</span></a></h3><p>If you’re in a room and totally unsure of what you can do, turn on Ultrahand (or Recall) and see what’s glowing. That’ll probably be a big hint for what to do.</p>
<p>It’ll also highlight treasure chests that might be stuck in the ground or underwater.</p>
<h3 id="build-a-big-ass-bridge"><a href="https://www.leereamsnyder.com/#build-a-big-ass-bridge" class="header-anchor"><span>Build a big-ass bridge</span></a></h3><p><a href="https://www.polygon.com/legend-zelda-tears-kingdom/23723279/totk-legend-of-zelda-tears-of-the-kingdom-bridge-totk">You can stick like 20 logs or wooden planks together</a>, and you’d be shocked how many problems you can solve with a big-ass bridge. Span huge gaps, stroll up mountains, or make your own back door into an enemy camp.</p>
<h3 id="throw-a-brightbloom-seed-on-your-creations"><a href="https://www.leereamsnyder.com/#throw-a-brightbloom-seed-on-your-creations" class="header-anchor"><span>Throw a Brightbloom seed on your creations</span></a></h3><p>Ultrahand creations have an annoying habit of despawning if you walk too far away. Throw a Brightbloom seed on there and the distance increases considerably. Even better, use a Giant Brightbloom seed.</p>
<p>This is ideal for <a href="https://www.leereamsnyder.com/#vehicles">vehicles</a>; be ready with Recall, in case it zips off without you!</p>
<h3 id="ultrahand-is-a-poor-mans-light"><a href="https://www.leereamsnyder.com/#ultrahand-is-a-poor-mans-light" class="header-anchor"><span>Ultrahand is a poor-man’s light</span></a></h3><p>If you’re in the Depths or a pitch-black cave, turning on Ultrahand will throw a faint orange glow all around you. It’s not much, but it’s better than nothing.</p>
<h2 id="recall"><a href="https://www.leereamsnyder.com/#recall" class="header-anchor"><span>Recall</span></a></h2><p>If something is moving the wrong way, Recall will fix that for you.</p>
<h3 id="combine-recall--ultrahand"><a href="https://www.leereamsnyder.com/#combine-recall--ultrahand" class="header-anchor"><span>Combine Recall &amp; Ultrahand</span></a></h3><p>You can use Recall on things you’ve moved with Ultrahand, a galaxy brain combo that breaks the game.</p>
<video class="lazy" width="1280" height="720" muted loop playsinline controls preload="none">
  <source src="https://i.imgur.com/nimQXZo.mp4" type="video/mp4" />
<p>Your browser does not support the video tag or something has gone wrong with loading the video. <a href="https://imgur.com/a/tSmwRXP">Try it on Imgur</a></p>
</video>
<p>To wit:</p>
<ul>
<li><a href="https://www.tiktok.com/@maxmagnos/video/7232049102576438555?_r=1&amp;_t=8cGOGESqIEV">Get a Zonai Wing airborne even without fans or rockets</a>. Use Ultrahand to lift the Wing up and out over a ledge, gently put it back down, hop on, then Recall. When the Wing is back up in the air, release it and off you go.</li>
<li>Use Ultrahand to lift something up to a ledge or across a gap, bring it back to you, then climb on and use Recall. This will get you to <em>tons</em> of chests in shrines or let you Ascend into ceilings that are a little too high.</li>
<li>Need to get something like a Korok or a shrine crystal across a short gap? If you can Ultrahand it halfway across, you’re done. Use Ultrahand to push it out as far as you can, hold it there for a bit, then bring it back (or just drop it, if you can see it from either side). Get yourself over to the other side, use Recall on the object, then switch to Ultrahand and snatch it out of the air as it retraces its path.</li>
<li>Thinking in reverse with Recall can trivialize some puzzles. For example, some Backpack Koroks ask you to get them to their friend’s campsite, which happens to be way up a cliff. You could build a flying vehicle or maybe slowly work yourself and the Korok up with Zonai Stakes. Or you can climb up top by yourself, attach a hunk of meat to an arrow, shoot it down at the Backpack Korok, attach the Korok to the meat, then <a href="https://www.reddit.com/r/zelda/comments/145uknc/totk_a_neat_trick_to_help_with_some_Korok_puzzles/">use Recall to zoom the Meat &amp; Korok up to the top of the cliff</a>.</li>
</ul>
<video class="lazy" width="1280" height="720" muted loop playsinline controls preload="none">
  <source src="https://i.imgur.com/P0NRHQA.mp4" type="video/mp4" />
<p>Your browser does not support the video tag or something has gone wrong with loading the video. <a href="https://imgur.com/a/CJNPvdM">Try it on Imgur</a></p>
</video>
<h3 id="recall-has-nearly-infinite-range"><a href="https://www.leereamsnyder.com/#recall-has-nearly-infinite-range" class="header-anchor"><span>Recall has nearly infinite range</span></a></h3><p>This will happen to you at some point: you’ll be flying between some Sky Islands on a Zonai Wing with an important quest item attached. Then you’ll misjudge the landing, come in hot, and your ride will bounce off the island, plummeting to the surface with your precious goodie.</p>
<p>Don’t despair! If you can see even vaguely where it went, you can use Recall and snag it back at virtually any distance. Switch to Ultrahand as it comes back up and grab it when it’s close again.</p>
<h2 id="ascend"><a href="https://www.leereamsnyder.com/#ascend" class="header-anchor"><span>Ascend</span></a></h2><p>I don’t have a lot to say here other than you should always be on the lookout for handy places to Ascend. The range is descent, and it’s way more fun than climbing or, like, walking out of caves.</p>
<p>If you ever feel like you’re trapped in some place, you probably forgot about Ascend.</p>
<h2 id="autobuild"><a href="https://www.leereamsnyder.com/#autobuild" class="header-anchor"><span>Autobuild</span></a></h2><p>Make sure to <a href="https://www.leereamsnyder.com/#keep-checking-in-at-lookout-landing">follow up with Josha at Lookout Landing</a> so you can unlock this ability. I wouldn’t mess around too much with <a href="https://www.leereamsnyder.com/#vehicles">perfecting your own vehicles</a> without it; you can save them as Favorites once you have it just right.</p>
<h3 id="attach-rarer-zonai-bits-to-trash"><a href="https://www.leereamsnyder.com/#attach-rarer-zonai-bits-to-trash" class="header-anchor"><span>Attach rarer Zonai bits to trash</span></a></h3><p>As long as a Zonai device is attached to <em>anything</em>, Autobuild is a way to clone it. So you might attach an apple to a Hover Platform, save that combo as a Favorite, and now you can make all the Hover Platforms you want for three Zonaite each if you already have some apples.</p>
<h3 id="look-at-schematics-for-inspiration"><a href="https://www.leereamsnyder.com/#look-at-schematics-for-inspiration" class="header-anchor"><span>Look at Schematics for inspiration</span></a></h3><p>You’ll find Schematics with pre-designed creations at Yiga outposts and Forge Constructs in <a href="https://www.leereamsnyder.com/#the-depths">the Depths</a>. Although many are silly or of limited use, a few are damn clever. If they’re close enough to something you’d design and use anyway, they don’t take up a precious Favorites slot.</p>
<p>Here’s some of my favorites:</p>
<ul>
<li>A platform with balloons, Flame Emitters, and torches. This is outstanding when you don’t have much battery. When you run out of battery for the Emitters, the torches keep you going up for free.</li>
<li>A fishing boat with a Shock Emitter to kill all nearby fish and a big scoop up front to gather them up.</li>
<li>Mining cannon: two Cannons on a Stake is overkill, but it’s a great way to blast through a ton of rocks.</li>
<li>The &quot;Super spring&quot;: three Springs sends you soaring, and the Stake lets you place it at a jaunty angle.</li>
</ul>
<video class="lazy" width="1280" height="720" muted loop playsinline controls preload="none">
  <source src="https://i.imgur.com/4ysl1gU.mp4" type="video/mp4" />
<p>Your browser does not support the video tag or something has gone wrong with loading the video. <a href="https://imgur.com/a/ZJb7wJ0">Try it on Imgur</a></p>
</video>
<h2 id="weapons"><a href="https://www.leereamsnyder.com/#weapons" class="header-anchor"><span>Weapons</span></a></h2><h3 id="just-use-your-strongest-weapons"><a href="https://www.leereamsnyder.com/#just-use-your-strongest-weapons" class="header-anchor"><span>Just use your strongest weapons</span></a></h3><p>It’s tempting to save your biggest weapons for some huge future fight. In <em>Breath of the Wild</em> I hoarded an Edge of Duality (a high-damage greatsword) that I found early in a shrine. I was forever waiting for a monster worthy enough to use it. A hundred hours later, enemies were dropping even stronger weapons on the regular, and I never used the Edge of Duality. I hung it up in my house as a reminder to use my cool shit.</p>
<p>In <em>Tears of the Kingdom</em>, there are weapons all over the place, and you get <em>tons</em> of monster parts to fuse to them. Just keep fusing your strongest monster parts to weapons, use them to kill more and stronger monsters faster, and I promise it’ll work out.</p>
<p>Also, I think this game is just a lot more <em>fun</em> if you treat weapons as utterly disposable and keep breaking stuff constantly and snatching enemy weapons or assembling new ones on the fly. If you always have a stockpile of incredible weapons, every enemy drop or chest turns into tedious inventory management.</p>
<h3 id="how-weapon-durability-works"><a href="https://www.leereamsnyder.com/#how-weapon-durability-works" class="header-anchor"><span>How weapon durability works</span></a></h3><p><a href="https://www.reddit.com/r/TOTK/comments/13bnlx0/testing_how_durabilty_and_fuse_interact_detailed/">LivelyZebra on Reddit had this figured out early.</a></p>
<p>Weapons have base durability. <a href="https://samurai-gamers.com/zelda-tears-of-the-kingdom/weapon-and-shield-durability-list/">This page lists them all</a>. For example, a tree branch lasts for 4 hits, a decayed Traveler’s Sword lasts 16 hits, and a not-decayed Royal Broadsword lasts 35 hits.</p>
<p>Fusing any material (monster part, ore, rock, whatever) to a weapon not only increases the damage of the weapon, but also gives an additional 25 hits before it breaks.</p>
<p>The exceptions to this are Royal Guard weapons, branches, basic sticks, and “rusty” weapons that only get 10 extra durability; Gerudo weapons only get 5 extra durability; skeleton arms only get 3.</p>
<p>This is a one-time bonus per weapon; you can’t keep attaching new materials and expect the weapon to last forever.</p>
<p>The big takeaway is…</p>
<h3 id="always-fuse-material-to-weapons"><a href="https://www.leereamsnyder.com/#always-fuse-material-to-weapons" class="header-anchor"><span>Always Fuse material to weapons</span></a></h3><p>Even a stick with a mushroom on it (try it!) does more damage and lasts longer than a naked stick.</p>
<p>I see this all the time on Reddit! Someone asks how they can get better at combat because all the weapons are weak and break so fast. Then someone asks, “are you using Fuse to put strong monster parts on all your weapons?” and then the 💡 moment happens.</p>
<h3 id="weapons-to-keep-on-hand"><a href="https://www.leereamsnyder.com/#weapons-to-keep-on-hand" class="header-anchor"><span>Weapons to keep on hand</span></a></h3><p>Although you don’t need all of these all of the time, my inventory typically looked a lot like this:</p>
<ul>
<li><strong>A spear with some trash on it</strong>: Behold, my most-used weapon! Lots of enemies die in one hit, and your inner hoarder will balk at wasting the durability of your big guns on bats or Chuchus or skeletons. So throw a rock or cheap monster part on a stick and use that. Spears are nice here because they have a little more durability (generally) and reach than the equivalent 1H or 2H weapons, but a one-handed weapon here is fine too.</li>
<li><strong>A weak two-handed hammer</strong>: Fuse any hammer-lookin’ thing (a rock or Moblin horn works) to any two-handed weapon like a Traveler’s Claymore. Done. I use this all the time to break ore deposits or crates. The advantage of using a 2h weapon is that ore deposits and crates will break in 1 hit, where spears and 1-handed swords usually take 2 hits.</li>
<li><strong>A strong two-handed hammer</strong>: This is your big baddie killer. It doesn’t <em>have</em> to be a “hammer” type, but those do extra damage to weak spots on Taluses and Froxes, and some enemies (including some terrifying ones in Lowrule) <a href="https://www.leereamsnyder.com/#armored-enemies">have armor</a>, and you want to get that off fast.</li>
<li><strong>Cannon stick</strong>: Many caves and wells have walls of boulders in your way, sometimes up in places where you can’t stand and swing at them. You could burn through a dozen hammers or precious Bomb Flowers to get through them, or you can fuse a Zonai Cannon to a stick, hold <strong>R</strong> (the “Throw” action, non-intuitively), aim, and fire away. You can break through tons of walls with one of these. Also handy in a pinch for crowd control or breaking armor. The destruction-to-durability ratio is excellent here.</li>
<li><strong>A strong Zonai weapon</strong>: Zonai weapons are not metallic, so they’re safe to use in thunderstorms.</li>
<li><strong>A thunder weapon</strong>: <a href="https://www.leereamsnyder.com/#electricity">For trivializing fights in the rain</a>.</li>
<li><strong>A hover platform fused to a stick</strong>: Sometimes you can’t even with Addison’s signs. Throw it, use the Hover Platform to support the sign, then re-fuse the Hover Platform to the stick for the next one. You can also throw it up for a platform to Ascend to.</li>
</ul>
<p>For all your other slots, keep sticking your strongest materials onto whatever looks nice. But if you really want to optimize…</p>
<h3 id="best-overall-weapons"><a href="https://www.leereamsnyder.com/#best-overall-weapons" class="header-anchor"><span>Best overall weapons</span></a></h3><p>(In no particular order.)</p>
<ul>
<li><strong>Zora Weapons</strong>: These are reasonably durable and do double damage (including damage from the Fused material) when Link is wet, so these can be <em>extremely</em> powerful. You’re good to go in the rain or wetlands or damp caves. Once you’ve completed the Water Temple you can soak Link on demand. Or throw down a Splash Fruit or Fuse a Hydrant to a shield.</li>
<li><strong>Ice weapons</strong>: If a baddie can be frozen, you shouldn’t lose a one-on-one fight if you have an ice weapon. Frozen baddies take triple damage on the next hit, so ice weapons are twice as strong as their reported damage number on average. Or, if you don’t mind incessant weapon swapping, an ice weapon makes your biggest guns three times more deadly.</li>
<li><strong>Scimitar of the Seven</strong>: This doubles the attack power of any attachment without the water gimmick of Zora weapons. And unlike lesser Gerudo weapons, it’s very durable. Worth the diamonds and worth the hassle of <a href="https://www.leereamsnyder.com/#how-to-repair-weapons-with-rock-octoroks">repairing with Rock Octoroks</a>. As good as it gets. (So, of course, <a href="https://www.leereamsnyder.com/#just-use-your-strongest-weapons">I never use it</a>!)</li>
<li><strong>Royal Weapons</strong>: Double damage during a Flurry Rush kicks ass if you’re decent at dodging. These are also among the most durable weapons you can find.</li>
<li><strong>40-damage 1-handed axe</strong>: The ultimate tool when you’re too lazy to switch weapons. This will break ores <em>and</em> crates in one swing&#8202;—&#8202;way faster than a 2-handed weapon&#8202;—&#8202;and it’s decent enough for combat. This is where my Black or Silver Boss Bokoblin Horns go.</li>
<li><strong>Eightfold Blade</strong>: When you pull of a Sneakstrike with one of these it does double the usual Sneakstrike damage, which results in an <em>outlandish</em> 16x multiplier. If you’ve got the Shiekah armor, stealth food, or especially <a href="https://www.leereamsnyder.com/#pick-up-all-the-plants">Puffshrooms</a>, you’re an unstoppable murder machine. Attach a high level monster part and get to max Attack Up from food or armor and you will one-shot any regular baddie.</li>
<li><strong>Biggoron’s Sword</strong>: This is both extremely durable and has high base damage. You can <a href="https://gamerant.com/zelda-tears-of-the-kingdom-biggorons-sword-location-skull-lake-stalnox-amiibo-totk/">find this in a chest in the Depths</a>, and once it breaks you can buy them from the Bargainer Statues for 150 Poes, a bargain.</li>
</ul>
<h3 id="how-to-repair-weapons-with-rock-octoroks"><a href="https://www.leereamsnyder.com/#how-to-repair-weapons-with-rock-octoroks" class="header-anchor"><span>How to repair weapons with Rock Octoroks</span></a></h3><p>I didn’t do this until the very late game when I had a <a href="https://www.leereamsnyder.com/#pristine-weapons-are-in-the-depths">bunch of nice Pristine weapons</a>, but it’s possible to use Rock Octoroks to repair weapons.</p>
<p>(I first saw <a href="https://www.polygon.com/zelda-tears-of-the-kingdom-guide/23713029/best-weapons">this described in <em>Polygon</em>’s guide</a>.)</p>
<ol>
<li>Find a Rock Octorok. They’re all over Eldin. Once you find one, take a picture and you can use Sensor+ to track down more later.</li>
<li>Dismiss any sages, especially the Wind Sage, so they don’t accidentally kill the Octorok.</li>
<li>If you want to save scum for the weapon’s modifier, save now.</li>
<li>Run up next to the Octorok and it’ll burrow to hide.</li>
<li>Jump into the menu and drop any regular weapon, bow, or shield right by the burrowed Octorok. It doesn’t have to be naked; you can still have something fused to it.</li>
<li>Run away until the Octorok pops back up and attacks. It’ll hoover up the weapon you dropped, then spit it out at you. The weapon will be restored with full durability and a new random modifier.</li>
<li>If you got a modifier you don’t like&#8202;—&#8202;all my homies hate Long Throw&#8202;—&#8202;reload your save and try again.</li>
<li>Kill the Octorok. Any single Octorok can only repair 1 thing per Blood Moon cycle, so you might as well.</li>
</ol>
<p>For the unique weapons you get from quests (like the Scimitar of the Seven) or chests in the Depths (like Biggoron’s Sword), it’s more convoluted:</p>
<ol>
<li>Remove any Fused material from the weapon.</li>
<li>Drop the unique weapon, equip any regular weapon (any stick will do), and Fuse the unique weapon onto it.</li>
<li>Feed this combo to a Rock Octorok per above. When it’s done, both halves of the combo will be repaired.</li>
<li>Visit Pelison in Tarrey Town and separate the combo. Then you can Fuse something else onto your repaired item.</li>
</ol>
<h2 id="archery"><a href="https://www.leereamsnyder.com/#archery" class="header-anchor"><span>Archery</span></a></h2><h3 id="where-to-get-arrows"><a href="https://www.leereamsnyder.com/#where-to-get-arrows" class="header-anchor"><span>Where to get arrows</span></a></h3><p><em>BotW</em> was pretty stingy with arrows; however, in <em>TotK</em> they’re everywhere if you know where to look.</p>
<p><strong>Where to look is in crates</strong>. Destroy every one you come across. You can use weapons&#8202;—&#8202;2H weapons will break them in one hit&#8202;—&#8202;or use Ultrahand to lift them up as high as you can, then drop it. There’s almost always a few single arrows, sometimes bundles of 5 or 10.</p>
<p>Also kill and loot <a href="https://www.leereamsnyder.com/#shoot-the-scouts">scouts at monster camps</a>. They always drop arrows, and sometimes have elemental goodies for fusing too.</p>
<p>Between crates &amp; scouts, I had hundreds of arrows not long after leaving the Great Sky Island.</p>
<p>Whatever you do, don’t buy arrows from Beedle at the stables; the sneaky crook charges extra for those.</p>
<h3 id="bullet-time-is-your-friend"><a href="https://www.leereamsnyder.com/#bullet-time-is-your-friend" class="header-anchor"><span>Bullet Time is your friend</span></a></h3><p>If you have enough air to pull out your paraglider, you can pull out your bow to slow time to a crawl while you aim&#8202;—&#8202;at the cost of draining a chunk of your stamina when you shoot an arrow.</p>
<p>If you can get some air and descend into a camp, with enough stamina you can wipe out all the archers, headshot the biggest baddie, and launch a bomb arrow at some explosive barrels to sew more disarray before the fight’s even really started.</p>
<p>Always be thinking about <a href="https://www.leereamsnyder.com/#consider-going-high">how to get airborne</a> so you can abuse Bullet Time.</p>
<p>Bullet Time also makes it way easier to…</p>
<h3 id="shoot-the-glowing-thing-or-the-head"><a href="https://www.leereamsnyder.com/#shoot-the-glowing-thing-or-the-head" class="header-anchor"><span>Shoot the glowing thing (or the head)</span></a></h3><p>Video Game Logic 101 applies here: if a baddie has a bright glowing spot, it’s the weak spot and you should shoot it. In the absence of that, shoot 'em in the face.</p>
<video class="lazy" width="1280" height="720" muted loop playsinline controls preload="none">
  <source src="https://i.imgur.com/cJXN85t.mp4" type="video/mp4" />
<p>Your browser does not support the video tag or something has gone wrong with loading the video. <a href="https://imgur.com/a/8Zj8NOQ">Try it on Imgur</a></p>
</video>
<p>Hitting the weak spot will not only do double damage, but also knock down or stun the baddie so you can get some easy hits.</p>
<h3 id="shoot-the-scouts"><a href="https://www.leereamsnyder.com/#shoot-the-scouts" class="header-anchor"><span>Shoot the scouts</span></a></h3><p>Baddies on perches with bows are a special “scout” types, and they take extra damage if you land a headshot. Basically any mid-level bow will kill 'em in one hit.</p>
<h3 id="fuse-flying-baddies-parts-to-arrows"><a href="https://www.leereamsnyder.com/#fuse-flying-baddies-parts-to-arrows" class="header-anchor"><span>Fuse flying baddies parts to arrows</span></a></h3><p>Eyeballs from flying baddies (Keese, Aerocudas) turn your arrows into homing missiles: they zip right towards weak spots and go farther to boot. They’re awesome. If you have imperfect aim, these can be a godsend against tougher baddies.</p>
<p>If all you need is extra distance, wings make arrows fly <em>much</em> farther (and faster!) in a nearly straight line.</p>
<p>In <em>BotW</em>, Keese were mild annoyances; now, <a href="https://www.leereamsnyder.com/#nuke-the-keese-swarms">I <em>want</em> to run into them</a>.</p>
<h3 id="abuse-the-elements"><a href="https://www.leereamsnyder.com/#abuse-the-elements" class="header-anchor"><span>Abuse the elements</span></a></h3><p>If you’re not a wiz at combat, <a href="https://www.leereamsnyder.com/#elements">spamming elemental attacks</a> can win you a lot of fights; arrows are the best way to get any element instantly on demand with Fuse.</p>
<p>Fruits give you small elemental bursts, Chuchu jellies are bigger, other elemental monster parts are bigger still, and “at least try it once” things like gems or dragon parts will affect gigantic areas.</p>
<video class="lazy" width="1280" height="720" muted loop playsinline controls preload="none">
  <source src="https://i.imgur.com/KevWVum.mp4" type="video/mp4" />
<p>Your browser does not support the video tag or something has gone wrong with loading the video. <a href="https://imgur.com/a/JRmkqpQ">Try it on Imgur</a></p>
</video>
<h2 id="shields"><a href="https://www.leereamsnyder.com/#shields" class="header-anchor"><span>Shields</span></a></h2><p>Shields are <em>way</em> more fun in <em>TotK</em>; you can Fuse all kinds of nonsense to them.</p>
<h3 id="keep-a-few-rocket-shields-handy"><a href="https://www.leereamsnyder.com/#keep-a-few-rocket-shields-handy" class="header-anchor"><span>Keep a few Rocket Shields handy</span></a></h3><p>A Zonai Rocket fused to a shield is one of the game’s great lifehacks. Hold <strong>ZL</strong> and up you go! Great for getting some quick air so you can rain death from above in a fight, or skipping shrine puzzles.</p>
<h3 id="a-mirror-shield-makes-daylight-fights-trivial"><a href="https://www.leereamsnyder.com/#a-mirror-shield-makes-daylight-fights-trivial" class="header-anchor"><span>A Mirror shield makes daylight fights trivial</span></a></h3><p>Pull out your shield and blind everyone you’re facing. They’ll drop their weapons and stop attacking for a moment. It doesn’t even use any durability!</p>
<h3 id="use-fire-or-ice-goodies-on-a-shield"><a href="https://www.leereamsnyder.com/#use-fire-or-ice-goodies-on-a-shield" class="header-anchor"><span>Use fire or ice goodies on a shield</span></a></h3><p>A Sapphire or Ruby or really any ice or fire item on a shield will provide 1 level of hot weather or cold weather resistance, so you can use whatever other armor or food in the cold (or heat). It’ll also badly punish anything that hits it. I’ve had a Ruby on the same shield for over 50 hours now. I love you, Ruby Shield.</p>
<h3 id="fused-materials-affect-shield-surfing"><a href="https://www.leereamsnyder.com/#fused-materials-affect-shield-surfing" class="header-anchor"><span>Fused materials affect shield surfing</span></a></h3><p>Most things on a shield will either slow you down or outright prevent you from surfing. However, a couple of things&#8202;—&#8202;notably a frozen piece of meat&#8202;—&#8202;reduce friction and let you surf farther and faster. You can also Fuse a mining cart or sled to make a skateboard.</p>
<h2 id="shrines"><a href="https://www.leereamsnyder.com/#shrines" class="header-anchor"><span>Shrines</span></a></h2><h3 id="watch-the-names"><a href="https://www.leereamsnyder.com/#watch-the-names" class="header-anchor"><span>Watch the names</span></a></h3><p>Although shrines often have many potential solutions, the name of the shrine’s challenge is often a big hint. Like “A Flying Device” means you probably need to build just that, or “Water Power” means you’ll likely be doing <em>something</em> with a turbine.</p>
<h3 id="you-can-leave"><a href="https://www.leereamsnyder.com/#you-can-leave" class="header-anchor"><span>You can leave</span></a></h3><p>Not feeling it? Need to stock up on <a href="https://www.leereamsnyder.com/#keep-a-few-rocket-shields-handy">Rocket Shields</a> and come back? You can use Quick Travel or just walk back out of the entrance.</p>
<h3 id="a-few-shrines-are-terrific-farming-locations"><a href="https://www.leereamsnyder.com/#a-few-shrines-are-terrific-farming-locations" class="header-anchor"><span>A few shrines are terrific farming locations</span></a></h3><p>A lot of these are Proving Grounds shrines. After you beat them, you can come back and go through them with all your gear, which should make them trivial.</p>
<ul>
<li><strong>Oromuwak Shrine</strong>: This is the one all about Zonai Rockets, near the Lucky Glover Gazette and Rito Village. The Rockets respawn immediately in here, so you can fuse as many as you want to your shields.</li>
<li><strong>Sifumim Shrine</strong>: This is the Proving Ground one overlooking Lurelin Village. There’s a half dozen Constructs on boats that all drop Ice or Shock Fruits and a bunch of arrows, and the Captain Construct II in the middle is a rare enemy. With <a href="https://www.leereamsnyder.com/#lots-of-baddies-cant-swim">a little ingenuity</a> you can murder everything in here without firing a shot or swinging a weapon, too.</li>
<li><strong>Simosiwak Shrine</strong>: This is on Bravery Island, in the sky above the Lost Woods. Every Blood Moon 3 Rubies will be just sitting on the ground(!!), and the Captain Construct I by them will be holding a Ruby Sword that you can <a href="https://www.leereamsnyder.com/#you-can-remove-fused-materials-from-weapons-and-shields">bring to Pelison</a> for another one. <a href="https://www.leereamsnyder.com/#sell-some-gems-and-luminous-stones">Easy Rupees</a>.</li>
<li><strong>In-isa Shrine</strong>: This is the Fuse tutorial one on the Great Sky Island. You can pick up almost 20 Fire Fruit and a bunch of arrows. The Captain Construct I that guards the exit is a fairly rare baddie too.</li>
</ul>
<h3 id="how-to-cheese-some-shrine-puzzles"><a href="https://www.leereamsnyder.com/#how-to-cheese-some-shrine-puzzles" class="header-anchor"><span>How to cheese some shrine puzzles</span></a></h3><p>I mean sometimes you can’t even.</p>
<ul>
<li>Got a physics puzzle with a big target you need to hit with a ball? Bomb Arrows or fusing the ball to a spear and throwing it will activate the target.</li>
<li><a href="https://www.leereamsnyder.com/#keep-a-few-rocket-shields-handy">Rocket Shields</a> or a Hover Platform fused to a weapon can skip you through an awful lot of puzzles.</li>
<li><a href="https://www.leereamsnyder.com/#combine-recall--ultrahand">Try combining Ultrahand &amp; Recall</a>.</li>
<li>Is there enough stuff lying about to <a href="https://www.leereamsnyder.com/#build-a-big-ass-bridge">build a big-ass bridge</a>? Try building a big-ass bridge! You can attach things like balls or some chests to bridges if you have to relocate them.</li>
</ul>
<h2 id="elements"><a href="https://www.leereamsnyder.com/#elements" class="header-anchor"><span>Elements</span></a></h2><p>I am required to mention that you can turn any Chuchu jelly into a different elemental Chuchu jelly by killing the Chuchu or striking the jelly with that element.</p>
<h3 id="fire"><a href="https://www.leereamsnyder.com/#fire" class="header-anchor"><span>Fire</span></a></h3><ul>
<li>Enemies on fire will take continuous damage and stop what they’re doing for a few seconds. Baiting enemies through burning grass or leaves underfoot can really sap some health&#8202;—&#8202;including yours if you aren’t careful.</li>
<li>Regular arrows won’t ignite explosive barrels, but fire arrows will.</li>
<li>Fire attacks will instantly kill Ice Breath Lizalfos and Ice Wizzrobes.</li>
<li>Non-elemental Like-Likes are weak against fire; one hit and they’ll expose their weak spot.</li>
<li>A wooden weapon that’s on fire is a poor-man’s fire-element weapon. Just be sure to put it away before it burns up.</li>
<li>A big enough fire (or throwing something oily on existing one) will make strong updrafts that you can ride into the air.</li>
<li>Look out for leaf piles, thorns, and vines that you can burn. They’re usually blocking passages in caves or hiding Koroks.</li>
<li>If there’s already a fire or lit torch about, you can pull out your bow, then walk near the fire to light the arrow’s tip. Free fire arrow!</li>
<li>The game makes a big deal about using wood, flint, and a metallic weapon to start a campfire, a thing I did exactly once. A Fire Fruit or swinging a fire-element weapon over the wood or pot is way less fussy.</li>
<li>Equipping a fire weapon or shield will provide one level of protection from the cold. It’ll also melt frozen things nearby.</li>
<li>Fire is worthless in the rain. A Hover Platform or building a structure with a roof can let you start a fire in a storm.</li>
</ul>
<h3 id="ice"><a href="https://www.leereamsnyder.com/#ice" class="header-anchor"><span>Ice</span></a></h3><p>Ice is easily my most-used element in combat. It’s great for crowd control and a little less likely to hurt you like fire and electricity can.</p>
<ul>
<li>Frozen enemies take triple damage and get knocked down on the next hit.</li>
<li>You can shove around frozen baddies just by walking into them. Try <a href="https://www.leereamsnyder.com/#lots-of-baddies-cant-swim">pushing some into deep water</a>.</li>
<li>Ice attacks will instantly kill Fire Breath Lizalfos and Fire Wizzrobes.</li>
<li>There’s no instant kill for Lightning Breath Lizalfos or Thunder Wizzrobes, but they can still be frozen.</li>
<li>Equipping an ice weapon or shield will provide one level of protection from the heat around Gerudo.</li>
<li>Ice stuff can make platforms in water, great for crossing super-chilled water or getting closer to an underwater chest so you can pluck it out with Ultrahand. You can even <a href="https://www.polygon.com/legend-zelda-tears-kingdom/23729958/totk-zelda-tears-of-the-kingdom-ice-bridge-platform-how-to-cross-water-rivers">Fuse the ice platform to a weapon to make even more ice platforms</a>&#8202;—&#8202;it doesn’t even use any durability!</li>
</ul>
<h3 id="electricity"><a href="https://www.leereamsnyder.com/#electricity" class="header-anchor"><span>Electricity</span></a></h3><p>Other than the the occasional puzzle, electricity is mostly useful in combat.</p>
<figure>
<video class="lazy" width="1280" height="720" muted loop playsinline controls preload="none">
  <source src="https://i.imgur.com/FqYNlpc.mp4" type="video/mp4" />
<p>Your browser does not support the video tag or something has gone wrong with loading the video. <a href="https://imgur.com/a/Ug6STiT">Try it on Imgur</a></p>
</video>
</figure>
<ul>
<li>In dry conditions, zapped baddies will drop their weapons and be stunned for a moment.</li>
<li>In wet conditions (rain, around puddles, in damp caves or even if you chucked a Splash Fruit at something), electricity will cause a huge electrical explosion all around, damaging everything nearby. If you do this with arrows or throwing Shock Fruit, the blast can hurt you, but if you do it with a weapon it won’t. While the damage falls off against the toughest baddies, you have no excuse for losing a fight in the rain with an electric weapon.</li>
<li>Hitting a metal box with electricity will also create an electrical explosion.</li>
<li>A Zonai Shock Emitter on the underside of a boat makes for easy fishing. Or throw a Shock Fruit into the water, but do so at a respectful distance.</li>
<li>In thunderstorms, it’d be a really mean thing if you were to throw your metal weapons at baddies. I mean, they might pick them up, then get struck by lightning and instantly die! You wouldn’t do such a thing, would you? No. Not you. No way.</li>
</ul>
<h3 id="water"><a href="https://www.leereamsnyder.com/#water" class="header-anchor"><span>Water</span></a></h3><ul>
<li>Pouring water or chucking a Splash Fruit in lava will make rock platforms that you can ride or Ultrahand together to make bridges.</li>
<li>Zora weapons do double damage when Link is wet.</li>
<li>Like ice, water will put out fires.</li>
<li>Dousing yourself in water provides temporary relief from the heat in the Gerudo area.</li>
<li>While in the protective water bubble from the sage of the Water Temple, you can shoot Bomb Flower arrows around lava.</li>
</ul>
<h3 id="light"><a href="https://www.leereamsnyder.com/#light" class="header-anchor"><span>Light</span></a></h3><ul>
<li>Dazzlefruits are borderline overpowered. A thrown or shot Dazzlefruit will stun nearly everything and make them drop their weapons in all conditions, day or night. It’ll also expose Gibdo zombies to damage.</li>
<li>Dazzlefruits will insta-kill all Stal (skeleton) baddies, except for a Stalnox.</li>
<li>Try <a href="https://www.leereamsnyder.com/#a-mirror-shield-makes-daylight-fights-trivial">attaching a Mirror on a shield</a>.</li>
</ul>
<h2 id="vehicles"><a href="https://www.leereamsnyder.com/#vehicles" class="header-anchor"><span>Vehicles</span></a></h2><h3 id="hold-out-for-steering-sticks"><a href="https://www.leereamsnyder.com/#hold-out-for-steering-sticks" class="header-anchor"><span>Hold out for Steering Sticks</span></a></h3><p>With the exception of Wings, which you can <em>kinda</em> control by walking around on top, you’re going to have a real bad time with vehicles that you assemble unless it has a Steering Stick. Sticks give you a more elegant way to turn devices on and let you go in reverse with wheeled devices.</p>
<h3 id="my-most-used-contraptions"><a href="https://www.leereamsnyder.com/#my-most-used-contraptions" class="header-anchor"><span>My most-used contraptions</span></a></h3><ul>
<li><strong>Fan Wings and Fan Platforms</strong>: Many of the Sky Islands shove a combination of Fans, Wings, Platforms, Rockets, and Batteries at you so you can hop from one island to the next. Who are you to turn them down? If you don’t see an obvious way to get a Wing off the ground, <a href="https://www.leereamsnyder.com/#combine-recall--ultrahand">use Ultrahand &amp; Recall together</a>.</li>
<li><strong>Hover Bike</strong>: The darling of the internet is really that good. Two fans and a stick is cheap to build, cheap to fly, lasts forever, and is quite nimble. The only hard part is taking the trial-and-error time to align everything so it doesn’t lean too much in any one direction. <a href="https://www.reddit.com/r/tearsofthekingdom/comments/13rmil6/balanced_hoverbike_text_tutorial/">I liked this text-based guide for building one</a>, and there are tons of YouTube tutorials out there. The only negative I can say about it is that it’s <em>so good</em> that it breaks the game a bit. Eventually, I tried to limit myself to only use one in the Depths, where you’re just going point-to-point anyway.</li>
<li><strong>Bigger Hover Bike</strong>: The Hover Bike is good, but sometimes you need a little more oomph for hauling shrine crystals or Koroks. Also, it’s very prone to tip over on hilly terrain. Two or three fans in the back fixes those problems. I used this more often when I had a bigger battery.</li>
<li><strong>Sand Sled</strong>: Couldn’t be simpler: a sled, a stick, and a fan for propulsion. Great for zipping around the sand or snow around Gerudo, Tabantha, and Hebra.</li>
<li><strong>Monocycle</strong>: This was just fun for me. One small wheel, a stick, a stabilizer, and a wagon wheel. The wagon wheel is the secret sauce; it allows the main wheel to pivot (so you can go up and down hills) but still allows the stabilizer to keep everything upright. Wheeeeee!</li>
</ul>
<h3 id="rockets-dont-stack"><a href="https://www.leereamsnyder.com/#rockets-dont-stack" class="header-anchor"><span>Rockets don’t stack</span></a></h3><p>Unfortunately, you can’t attach 20 rockets to a platform and go to space today. You get just as much “oomph” in any one direction from one Rocket as you do from ten. Only attach multiple rockets to something if you need to balance out the thrust so your contraption doesn’t tip over or spiral out of control.</p>
<p>Or just put the rocket dead center; it’ll still work.</p>
<h2 id="caves"><a href="https://www.leereamsnyder.com/#caves" class="header-anchor"><span>Caves</span></a></h2><h3 id="how-to-find-caves"><a href="https://www.leereamsnyder.com/#how-to-find-caves" class="header-anchor"><span>How to find caves</span></a></h3><ol>
<li>Talk to every NPC you see; several of them are treasure hunters who will point you in the direction of a cave. Or they’re disguised Yiga goons and you can nab their Eightfold Blades. Win win.</li>
<li>Look for Blupees&#8202;—&#8202;the little blue glowing rabbit thingies. If you spot one and approach, it’ll run towards a cave entrance.</li>
<li>Look for Keese swarms. They spawn out of caves, and as morning approaches they’ll return to it.</li>
<li>Head to the Cherry Trees. Drop any fruit at the altar and you’ll get a huge glowing marker at every cave entrance in the greater region. The Outskirts Stable has a map of their locations on the wall.</li>
</ol>
<h3 id="dont-leave-without-finding-the-bubbulfrog"><a href="https://www.leereamsnyder.com/#dont-leave-without-finding-the-bubbulfrog" class="header-anchor"><span>Don’t leave without finding the Bubbulfrog</span></a></h3><p>Every cave on the surface has a Bubbulfrog tucked away <em>somewhere</em>. Shoot it down and get that gem. The map will have a checkmark next to the cave entrance if you’ve found it.</p>
<h3 id="nuke-the-keese-swarms"><a href="https://www.leereamsnyder.com/#nuke-the-keese-swarms" class="header-anchor"><span>Nuke the Keese swarms</span></a></h3><p>When you approach some cave entrances, a pack of Keese will zip out at you. It’s nice spooky ambience, but also if you can tag them with a Bomb Arrow, you can score a quick dozen or so <a href="https://www.leereamsnyder.com/#fuse-flying-baddies-parts-to-arrows">Keese Eyes and Keese Wings</a>.</p>
<video class="lazy" width="1280" height="720" muted loop playsinline controls preload="none">
  <source src="https://i.imgur.com/lQhB1Mz.mp4" type="video/mp4" />
<p>Your browser does not support the video tag or something has gone wrong with loading the video. <a href="https://imgur.com/a/D4xlXko">Try it on Imgur</a></p>
</video>
<h3 id="look-for-dripping-water"><a href="https://www.leereamsnyder.com/#look-for-dripping-water" class="header-anchor"><span>Look for dripping water</span></a></h3><p>Caves with water dripping from the ceiling are great for <a href="https://www.leereamsnyder.com/#electricity">abusing electricity</a> or Zora weapons, but if you need to do any climbing be ready with some Slip resistance elixirs or <a href="https://www.leereamsnyder.com/#start-the-lucky-glover-gazette-quest-line">the Froggy armor</a>.</p>
<p>Speaking of climbing, you can use Ultrahand to yoink mushrooms or Bomb Flowers off of wet cave walls.</p>
<h3 id="look-for-decorative-banners"><a href="https://www.leereamsnyder.com/#look-for-decorative-banners" class="header-anchor"><span>Look for decorative banners</span></a></h3><p>If you’re seeing colorful flags or banners hanging around, that means you’re in a cave where the legendary bandit Misko hid some armor. It’ll be in a chest somewhere, probably in a tent.</p>
<h3 id="pick-up-all-those-brightbloom-seeds"><a href="https://www.leereamsnyder.com/#pick-up-all-those-brightbloom-seeds" class="header-anchor"><span>Pick up all those Brightbloom Seeds</span></a></h3><p>You’ll be glad you had some when you enter…</p>
<h2 id="the-depths"><a href="https://www.leereamsnyder.com/#the-depths" class="header-anchor"><span>The Depths</span></a></h2><p>At first, The Depths (aka Lowrule) are terrifying. It’s pitch black, large chunks of the ground are toxic, and you get locked out of hearts temporarily between Lightroots. But the Depths have many treasures, and eventually you’ll have a lot of tools that make it easier to navigate.</p>
<h3 id="how-to-get-a-bigger-battery"><a href="https://www.leereamsnyder.com/#how-to-get-a-bigger-battery" class="header-anchor"><span>How to get a bigger battery</span></a></h3><p>When I first learned about Zonaite and Crystallized Charges and Energy Cells on the Great Sky Island, it sounded like a bunch a gobbledygook and I didn’t really understand it. Let’s break it down.</p>
<p>What this system works towards is <strong>getting you a bigger battery (more energy cells) for powering Zonai devices</strong>, which you’ll need if you want to pilot <a href="https://www.leereamsnyder.com/#vehicles">vehicles</a> for a decent chunk of time.</p>
<p>First up, <strong>Zonaite</strong>. You find this primarily in the Depths. Every monster you kill underground drops it, or crack open ore deposits for lots of it.</p>
<p>There’s also <strong>Large Zonaite</strong>. Ore deposits in the Depths will drop this somewhat frequently; I usually get 1&#8202;–&#8202;3 from the deposits around an enemy camp.</p>
<p>And then there’s <strong>Crystallized Charges</strong>. Buy these at Forge Constructs (there’s one on the Great Sky Island, and several in the Depths) with Zonaite and Large Zonaite.</p>
<p>You can also do other stuff in the Depths for more Crystallized Charges:</p>
<ul>
<li>Find and kill minibosses. Each one will drop 20.</li>
<li>Raid Yiga Clan outposts. Each one has a chest with 20.</li>
<li>Look for mines, which sometimes have a chest with 20. (Sensor+ tracking chests is great for this.)</li>
<li>Kill a certain returning boss from <em>BotW</em> that you’ll encounter a few times during a major quest. He’ll often cough up 100.</li>
<li>After you clear the Regional Phenomena, you can re-fight the temple bosses a few times in the Depths. They’ll be guarding a chest that will give you 100 Crystallized Charges.</li>
</ul>
<p>Hunting down minibosses and chests for Crystallized Charges is more <em>efficient</em> than selling Zonaite, but you’ll also find <em>lots</em> of Zonaite. So if you’re feeling flush, go ahead and swap some&#8202;—&#8202;particularly Large Zonaite&#8202;—&#8202;for Charges.</p>
<p>Once you have 100+ Crystalized Charges, go to a <strong>Crystal Refinery</strong>. There’s exactly two: one just outside the Nachoyah Shrine on the Great Sky Island, and another just northeast of Lookout Landing&#8202;—&#8202;like literally across the moat on a fallen Sky Island chunk. The Steward Constructs there will turn 100 charges into an additional battery segment.</p>
<p>It takes 4500 Charges to max out your battery. It sounds like a ton&#8202;—&#8202;and it is!—but don’t stress about it. As you explore more of the Depths, you’ll just keep finding more and more.</p>
<h3 id="bring-sundelion-food"><a href="https://www.leereamsnyder.com/#bring-sundelion-food" class="header-anchor"><span>Bring Sundelion food</span></a></h3><p>If you get hit or stand too long on Gloom, it’ll reduce your max health. Food with cooked Sundelions clears that up when you can’t get to a Lightroot or leave the Depths. A Zonai Cooking Pot is handy if you forgot.</p>
<h3 id="you-can-briefly-touch-gloom"><a href="https://www.leereamsnyder.com/#you-can-briefly-touch-gloom" class="header-anchor"><span>You can briefly touch Gloom</span></a></h3><p>Standing on a Gloom patch doesn’t <em>immediately</em> sap your health. In a pinch, you can sprint across a small area with no consequences.</p>
<h3 id="you-can-touch-gloom-covered-baddies"><a href="https://www.leereamsnyder.com/#you-can-touch-gloom-covered-baddies" class="header-anchor"><span>You can touch Gloom-covered baddies</span></a></h3><p>They don’t sap your hearts just by contact. Inconsistent! But go ahead and climb onto that Gloom-y <a href="https://www.leereamsnyder.com/#taluses">Talus</a> you found.</p>
<h3 id="just-throw-brightbloom-seeds"><a href="https://www.leereamsnyder.com/#just-throw-brightbloom-seeds" class="header-anchor"><span>Just throw Brightbloom seeds</span></a></h3><p>Between Lightroots, Brightbloom seeds are <em>by far</em> the best way to light the way. However, don’t stick 'em on arrows; you can usually throw them plenty far. There’s a shrine that teaches you the “throw” mechanic, but if you haven’t seen it: Hold <strong>R</strong> (like you’re throwing your weapon), then tap 🔼 (same as when you’re fusing things to arrows) and you’ll get a menu of things to throw.</p>
<p>I usually chuck a seed in the direction I’m going, explore to the edge of its light, then chuck another.</p>
<p>The one exception I usually make is if I spot a big baddie or a camp, I’ll shoot a Giant Brightbloom seed around it just so I don’t have to worry about light during combat.</p>
<h3 id="dont-bother-with-the-glow-status"><a href="https://www.leereamsnyder.com/#dont-bother-with-the-glow-status" class="header-anchor"><span>Don’t bother with the “Glow” status</span></a></h3><p>Even at full strength, I don’t think it’s too useful. Just use Brightbloom seeds liberally. They last an eternity and you’ll have a zillion of them if you spend any time exploring caves.</p>
<h3 id="pick-up-all-the-plants"><a href="https://www.leereamsnyder.com/#pick-up-all-the-plants" class="header-anchor"><span>Pick up all the plants</span></a></h3><p>Only three plants grow in the Depths, but all of them are incredibly useful:</p>
<ul>
<li><strong>Bomb Flowers</strong>: They are much more abundant in the Depths than in caves, and they have so many uses: extra damage, crowd control, breaking armor, blowing baddies off cliffs or into water, general chaos, or mining.</li>
<li><strong>Muddle Buds</strong>: Hit a baddie with one of these and they’ll start attacking their buddies for a while. Great for Boss Bokoblins, Moblins, or the meanest silver baddie in the group.</li>
<li><strong>Puffshrooms</strong>: These smoke bombs trivialize standard encounters. Any baddie in their radius will stop attacking you and just stand around, and you can freely run behind them and Sneakstrike them for huge damage. I had to stop using these sometimes because they make fights too easy. They even make Lynels just stand around!</li>
</ul>
<video class="lazy" width="1280" height="720" muted loop playsinline controls preload="none">
  <source src="https://i.imgur.com/FHqFdPm.mp4" type="video/mp4" />
<p>Your browser does not support the video tag or something has gone wrong with loading the video. <a href="https://imgur.com/a/1MEx3cM">Try it on Imgur</a></p>
</video>
<h3 id="the-depths-are-a-mirror-image-of-hyrule"><a href="https://www.leereamsnyder.com/#the-depths-are-a-mirror-image-of-hyrule" class="header-anchor"><span>The Depths are a mirror image of Hyrule</span></a></h3><p>Once you figure that out, your knowledge of the surface can help you find things in the Depths (and vice-versa!).</p>
<ul>
<li>Lightroots in the Depths correspond with Shrines on the surface.</li>
<li>Impassible walls in the Depths correspond with deep water on the surface.</li>
<li>The terrain is inverted: mountains on the surface are canyons in the depths, and vice-versa.</li>
<li>Where there are cities on the surface, you’ll find mines in the Depths.</li>
<li>Where there are stables on the surface, you’ll find… we’ll, you’ll see.</li>
</ul>
<h3 id="pristine-weapons-are-in-the-depths"><a href="https://www.leereamsnyder.com/#pristine-weapons-are-in-the-depths" class="header-anchor"><span>Pristine weapons are in the Depths</span></a></h3><p>The ghost statues on little pillars all over the Depths hold weapons that haven’t decayed; they hit harder and last longer.</p>
<p>Still Fuse something to these; just like their decayed counterparts, they get more damage and durability from a Fused material.</p>
<p><a href="https://www.reddit.com/r/tearsofthekingdom/comments/13uqo9h/everything_you_need_to_know_about_nondecayed/">This Reddit post about pristine weapons by Echo_BotW</a> spells out all the details and has some rough maps if you’re looking for a specific weapon.</p>
<p>Once you have the camera, take pictures of every Pristine weapon! You can use Sensor+ to track down more of your favorites later.</p>
<h3 id="dont-explore-the-depths-while-you-have-lots-of-bonus-yellow-hearts"><a href="https://www.leereamsnyder.com/#dont-explore-the-depths-while-you-have-lots-of-bonus-yellow-hearts" class="header-anchor"><span>Don’t explore the Depths while you have lots of bonus yellow hearts</span></a></h3><p>One gloom hit will erase them all and make you sad.</p>
<h3 id="vehicles-are-ideal"><a href="https://www.leereamsnyder.com/#vehicles-are-ideal" class="header-anchor"><span>Vehicles are ideal</span></a></h3><p>The Depths are huge, you’re mostly going to be moving from landmark to landmark, and the ground is often toxic. Once you have a little extra battery, you’ll be a lot happier moving about with Zonai vehicles.</p>
<p>Throw a Giant Brightbloom seed on your ride! It’ll prevent it from despawning and light the way as you go.</p>
<h2 id="making-rupees"><a href="https://www.leereamsnyder.com/#making-rupees" class="header-anchor"><span>Making rupees</span></a></h2><h3 id="sell-some-gems-and-luminous-stones"><a href="https://www.leereamsnyder.com/#sell-some-gems-and-luminous-stones" class="header-anchor"><span>Sell some gems and Luminous Stones</span></a></h3><p>You don’t <em>really</em> need gems for armor upgrades until the very late game or for the fan-service armors, so go ahead and sell some. (Probably not Diamonds&#8202;—&#8202;they’re too rare.)</p>
<p>If you find a Talus, especially a “Rare” one, it’s worth marking the location on the map. They drop tons of gems when you kill them. Every Blood Moon, make some big hammers and go on a Talus murder tour. Conveniently, the hearts they drop are excellent Fuse-able materials for killing the next one. You can make a few thousand rupees in a few minutes each Blood Moon.</p>
<h3 id="buy-armor-from-bargainer-statues"><a href="https://www.leereamsnyder.com/#buy-armor-from-bargainer-statues" class="header-anchor"><span>Buy armor from Bargainer Statues</span></a></h3><p>You can swap Poes for extra armor pieces, and they sell for like 600 Rupees each.</p>
<h3 id="sell-your-junk"><a href="https://www.leereamsnyder.com/#sell-your-junk" class="header-anchor"><span>Sell your junk</span></a></h3><p>If you want to be extra-safe, you can scan <a href="https://www.reddit.com/r/zelda/comments/13xrn9x/totk_total_armor_upgrade_item_list_tears_of_the/">a list of items required for armor upgrades</a>. But in general, other than your favorite arrow fusions and cooking supplies, if you have more than 30-odd of something, you can probably sell the rest.</p>
<p>Here’s some good candidates:</p>
<ul>
<li><strong>Abundant monster parts</strong>: Do you really need 200 Lizalfos Talons or 100 Boss Bokoblin Fangs on hand? Sell 'em. Believe me, you’ll get more.</li>
<li><strong>Brightbloom seeds</strong>: They’re not worth much, but you’ll pick up many hundreds of these in caves. Keep a few dozen on hand for your next Depths dive, but sell the rest.</li>
<li><strong>Splash fruit</strong>: This is the least useful elemental fruit. Especially after you’ve cleared the Zora regional quest, you don’t need a hundred of these on hand.</li>
<li><strong>Shards of Dragon Spikes</strong>: If you can reach a flying dragon, there are usually a dozen or so of these around the spikes on its back. They’re handy to fuse to weapons, but they also sell for 30 Rupees each. You can spare some.</li>
<li><strong>Brightcaps and Glow Fish</strong>: They’re abundant in caves, you don’t need many for armor upgrades, and the “Glow” effect is kinda trash. Easy money. Especially if you…</li>
</ul>
<h3 id="cook-stuff-before-selling-it"><a href="https://www.leereamsnyder.com/#cook-stuff-before-selling-it" class="header-anchor"><span>Cook stuff before selling it</span></a></h3><p>If you make food or an elixir with five ingredients, you get 2.8x the Rupees compared to selling the parts individually. If you’ve got time, cook up stuff in bulk before you sell it.</p>
<p>Meat, in particular, is a great early-game moneymaker: kill all the wildlife you see, cook up the bits in bulk, and sell the skewers. The big moose and wolves running around the Hebra region (around Rito and the Snowfield Stable) are great for this.</p>
<p>Later, elixirs with lots of monster guts are where it’s at. One random critter and 4 miniboss monster guts can net you many hundreds of Rupees.</p>
<h2 id="cooking-meals--elixirs"><a href="https://www.leereamsnyder.com/#cooking-meals--elixirs" class="header-anchor"><span>Cooking meals &amp; elixirs</span></a></h2><p>If you have a problem in <em>TotK</em>, there’s a good chance food or elixirs can solve it.</p>
<p>The definitive cooking guide for <em>TotK</em> is actually <a href="https://gamefaqs.gamespot.com/switch/189707-the-legend-of-zelda-breath-of-the-wild/faqs/74776">this brilliant cooking guide for <em>BotW</em> by Explopyro</a>. Most of the ingredient calculations and recipes still stand. <a href="https://www.reddit.com/r/tearsofthekingdom/comments/144ss8t/cooking_cheat_sheet_version_03_with_ingredient/">Reddit user HylianExplorer posted about <em>TotK</em>'s newer statuses and ingredients here</a>. A lot of what follows is condensed from those guides.</p>
<h3 id="cook-for-either-health-recovery-or-buffs"><a href="https://www.leereamsnyder.com/#cook-for-either-health-recovery-or-buffs" class="header-anchor"><span>Cook for either health recovery or buffs</span></a></h3><p>It isn’t easy to make food that gives both a strong status effect <em>and</em> recovers a lot of hearts. It’s better to focus on one or the other when cooking.</p>
<h3 id="always-be-buffing"><a href="https://www.leereamsnyder.com/#always-be-buffing" class="header-anchor"><span>Always be buffing</span></a></h3><p>You can only have one status buff from food active at a time, but that can supplement whatever armor you’re wearing. So if you’re not using <em>some</em> kind of food, you’re missing out.</p>
<p>Once I have appropriate armors, I use those for environmental protection over food just so you don’t have to watch the clock while stomping around, but I keep 1 or 2 food items around for emergencies.</p>
<p>When exploring, I like to have both Speed Up (from elixirs) and Stealth (from armor) unless I need elemental protection or I’ve gotten myself into a fight.</p>
<p>For fights, Attack Up is always useful to kill things faster and get more juice out of all your weapons; Defense Up and Speed Up are both handy as well.</p>
<h3 id="simple-recipes-are-fine"><a href="https://www.leereamsnyder.com/#simple-recipes-are-fine" class="header-anchor"><span>Simple recipes are fine</span></a></h3><p>The game kinda nudges you towards making elaborate cakes and curries or rice balls or whatever. But for health recovery, simple meat skewers do best. For long-lasting buffs you’re better off cooking a simple skewer with five of the appropriate mushrooms. It’s not pretty, but it works.</p>
<h3 id="cook-during-the-blood-moon"><a href="https://www.leereamsnyder.com/#cook-during-the-blood-moon" class="header-anchor"><span>Cook during the Blood Moon</span></a></h3><p>If you spot the Blood Moon rising, get to a Cooking Pot. Every recipe made between 11:30pm and 12:15am (just before and after the Blood Moon resets everything) is guaranteed to be a &quot;critical success&quot;. When that happens, it’ll improve a random aspect of the dish&#8202;—&#8202;either a stronger effect, more time, or more hearts recovered. This is a great time to cook up your Attack and Speed food, because another five minutes on those is amazing.</p>
<h3 id="my-go-to-recipes"><a href="https://www.leereamsnyder.com/#my-go-to-recipes" class="header-anchor"><span>My go-to recipes</span></a></h3><p><strong>Health recovery</strong></p>
<p>Very early on, just cook as many apples or mushrooms as you have hearts and use those as needed.</p>
<p>As you start getting more hearts, throw in meats to recover more hearts in a single meal. Or just down some of your hundreds of raw apples to top off. Or…</p>
<p><strong>Bonus hearts</strong></p>
<p>Any “hearty” food gives you bonus hearts <em>and</em> totally restores your health, thoroughly dunking on regular food for health recovery.</p>
<p><em>TotK</em> is stingier with the Hearty ingredients than <em>BotW</em> was, but you’ll still find plenty in caves and on the Sky Islands.</p>
<p>Sometimes it’s fun to cook up a pile of Hearty stuff and march up to a miniboss with a dozen bonus hearts, but I typically just cook a single one for full recovery.</p>
<p><strong>Stamina recovery</strong></p>
<p>Early on, cook whatever Stambulbs or Stamella Shrooms you have on hand. It’ll come in handy whenever you need just a wee bit more air time or climbing, or they might literally save your life if you’re about to drown.</p>
<p>When you have Staminoka Bass, cook 1 Staminoka Bass per stamina wheel that you have. Each cooked one recovers a full wheel, so you never need more than 3 in a meal.</p>
<p>Or…</p>
<p><strong>Bonus stamina</strong></p>
<p>Like with bonus hearts, food that grants bonus stamina also fully recovers your stamina.</p>
<p>5 Endura Carrots will get you 2 full bonus wheels. However, <em>TotK</em> is stingier with the Endura ingredients than <em>BotW</em> was, so I usually just cook a single Endura Carrot or Endura Shroom and used that for full stamina recovery when I needed it.</p>
<p><strong>Attack up</strong></p>
<p>It’s hard to get a strong effect for a long time here.</p>
<p>I usually do 4 Mighty Bananas (this gets you to the max effect) because they’re abundant. Mighty Bananas are all over the place in Faron, and the assorted Yiga goons drop them too. For the fifth ingredient, a Bird Egg or Rock Salt will give some extra time, or a Golden Apple will guarantee a critical cook, which might give you 5 more minutes. Either way, 4 minutes or so should get you through a fight.</p>
<p>An elixir with 2 Mighty Porgies, 1 Bladed Rhino Beetle, and 2 monster guts (Bokoblin is fine) is almost 9m, 14m with a critical time bonus.</p>
<p>For long-running rampages, 4 Mighty Bananas and any Dragon Horn is 30 minutes.</p>
<p><strong>Defense up</strong></p>
<p>Like with Attack Up, this is hard to get a strong effect for a long time.</p>
<p>For cheap, 4 Ironshrooms and a Bird Egg gets you about 5 minutes of the strongest effect.</p>
<p>An elixir with 2 Armored Porgies, 1 Rugged Rhino Beetle, and 2 monster guts goes almost 9 minutes. Want to make a Proving Ground shrine trivial? Chug one of those before entering.</p>
<p><strong>Heat/Cold/Shock Resistance</strong></p>
<p>Early on the most important resistance is low-level cold. Five Spicy Peppers gets you 12:30 of that.</p>
<p>Once you have them, cook 5 of the appropriate elemental mushrooms (Sunshrooms, Chillshrooms, or Zapshrooms). They’re the most abundant ingredients of their type, and 5 will net you 12:30 of full-strength resistance. You can make elixirs that last longer, but 5 shrooms is easy.</p>
<p><strong>Hot/Cold/Stormy Weather Attack Up</strong></p>
<p>These aren’t worth cooking for. Food can only give a single level (out of three) unless you get lucky with a critical effect.</p>
<p><strong>Flame Guard</strong></p>
<p>This not the same as Heat Resistance (for the Gerudo Desert); it’s only for hanging around lava or Dinraal.</p>
<p>You can only do elixirs here. For max resistance, 3 Smotherwing Butterflies, a Fireproof Lizard (or 4th butterfly), and 1 monster guts gets you about 13 minutes.</p>
<p>If you only need one level of Flame Guard, a single critter and 4 guts is about 15 minutes of protection.</p>
<p><strong>Stealth</strong></p>
<p>Five Silent Shrooms is an easy 10 minutes at max strength.</p>
<p>You can do a little longer with an elixir with a Sunset Firefly, 3 Silent Princesses, and monster guts.</p>
<p><strong>Speed up</strong></p>
<p>This one’s addicting.</p>
<p>A Hightail Lizard or Hot-Footed Frog, 3 Fleet-Lotus Seeds, and 1 monster guts gives you max speed for about 7 minutes, or 12 with a critical time bonus.</p>
<p>The only way to do better is splurging with Dragon Horns. A horn and 4 Fleet-Lotus Seeds gives you 30 minutes of zoomin’.</p>
<p><strong>Slip Resistance</strong></p>
<p>Like Flame Guard, this can only be an elixir.</p>
<p>Monster guts, 3 Sticky Frogs, and 1 Sticky Lizard (or 4th frog) gets you about 13 minutes at max strength.</p>
<h3 id="some-useful-locations-for-cooking-supplies"><a href="https://www.leereamsnyder.com/#some-useful-locations-for-cooking-supplies" class="header-anchor"><span>Some useful locations for cooking supplies</span></a></h3><ul>
<li><strong>Satori Mountain</strong>: This is northwest of the Outskirts Stable and is well worth your time. There’s a grove on the northeast slope just outside the Sonapan Shrine with dozens of apples. Just south of that down the mountain a bit there’s a plateau with assorted Thistles and Safflinas that you’ll need for early armor upgrades. On the southwest side, just northwest of Usazum Shrine, there’s a small grove with a few of almost every mushroom in the game. And around the west side there’s Rutile Lake that has many plants and critters all around; one tree near the water there is covered with a dozen beetles at night.</li>
<li><strong>West Hebra Sky Archipelago</strong>: You can work your way here from the Rospro Pass Skyview Tower just north of Rito Village. After you’ve cleared the Wind Temple, the sky island with Ijo-o Shrine has two pools. There are fairies around the pools, and each pool has two Hearty Bass. Check back every few hours and you’ll never be wanting for health.</li>
<li><strong>Lakeside Stable</strong>: This is the stable in Faron along the path to Lurelin Village. Climb up any of the cliffs and you’ll find small trees with bunches of Mighty Bananas all over the place. And just north of the stable across the lake is the Dondon ranch, which is one of the few places you can find beetles on the trees.</li>
<li><strong>Lurelin Village</strong>: There’s <a href="https://www.leereamsnyder.com/#porgies">Porgies</a> in them thar waters.</li>
</ul>
<h2 id="general-combat"><a href="https://www.leereamsnyder.com/#general-combat" class="header-anchor"><span>General combat</span></a></h2><h3 id="scope-out-camps-before-engaging"><a href="https://www.leereamsnyder.com/#scope-out-camps-before-engaging" class="header-anchor"><span>Scope out camps before engaging</span></a></h3><p>Never approach an enemy camp without knowing what’s in there. You’re in for a rough time if you didn’t see that Black Moblin around the corner and you only have some Tree Branches on hand. Use cover to get closer, approach from above, or crouch in tall grass.</p>
<p>Use your scope at a distance to see what’s there, how many of them are there, and are any of them close to explosives.</p>
<h3 id="take-out-the-scouts-first"><a href="https://www.leereamsnyder.com/#take-out-the-scouts-first" class="header-anchor"><span>Take out the scouts first</span></a></h3><p>As you approach a camp, see if you can <a href="https://www.leereamsnyder.com/#shoot-the-scouts">take out the ranged ones up high with some headshots</a>. If they see you, they’ll alert their friends, and you don’t need to be getting peppered with more arrows during a fight. If you can’t take them out, put something between you and them while you deal with the others. The scouts typically won’t move.</p>
<h3 id="go-for-the-explosives"><a href="https://www.leereamsnyder.com/#go-for-the-explosives" class="header-anchor"><span>Go for the explosives</span></a></h3><p>There are few better ways to kick off a fight than with violent explosions. It’ll scatter the baddies, light some of their weapons on fire, or outright kill a bunch of them.</p>
<p>Best to not leave explosives lying around; everyone has a plan for a fight until a Moblin starts chucking bombs.</p>
<p>Speaking of baddies throwing things…</p>
<h3 id="dont-forget-about-recall"><a href="https://www.leereamsnyder.com/#dont-forget-about-recall" class="header-anchor"><span>Don’t forget about Recall</span></a></h3><p>A good number of baddies will throw things at you or try to smush you with boulders or spiked balls; make them regret that decision with Recall.</p>
<h3 id="lots-of-baddies-cant-swim"><a href="https://www.leereamsnyder.com/#lots-of-baddies-cant-swim" class="header-anchor"><span>Lots of baddies can’t swim</span></a></h3><p>Bokoblins, Moblins, Horriblins, and Zonai Constructs can’t swim. If you’re near water that’s deep enough, explosions or wind or some knockback from a headshot or heavy weapon can knock baddies into the drink, where they’ll die immediately. Heck, try freezing 'em and just push 'em in.</p>
<h3 id="you-can-enter-menus-whenever"><a href="https://www.leereamsnyder.com/#you-can-enter-menus-whenever" class="header-anchor"><span>You can enter menus whenever</span></a></h3><p>It doesn’t make any logical sense, but mid-combat you can change armor, consume food, swap weapons, or even Fast Travel outta there at any point. So micromanage to your heart’s content!</p>
<h3 id="sneakstrikes-are-amazing"><a href="https://www.leereamsnyder.com/#sneakstrikes-are-amazing" class="header-anchor"><span>Sneakstrikes are amazing</span></a></h3><p>If you can sneak up behind a baddie or catch them while asleep (Bokoblins and Moblins will snooze at night), a Sneakstrike does eight times the normal damage. This is why I invested in the Stealth Armor from Kakariko Village as soon as I could get it. With maxed Stealth, as long as you stay out of direct line of sight you kinda have to <em>try</em> to alert baddies.</p>
<h3 id="consider-going-high"><a href="https://www.leereamsnyder.com/#consider-going-high" class="header-anchor"><span>Consider going high</span></a></h3><p>You have every advantage while in the air. Lots of baddies can’t even reach you, you can move in three dimensions, and bullet time is overpowered.</p>
<figure>
<video class="lazy" width="1280" height="720" muted loop playsinline controls preload="none">
  <source src="https://i.imgur.com/wnYe52A.mp4" type="video/mp4" />
<p>Your browser does not support the video tag or something has gone wrong with loading the video. <a href="https://imgur.com/a/pwmcAWl">Try it on Imgur</a></p>
</video>
</figure>
<p>If you want to go up in a big dang hurry:</p>
<ul>
<li>Fuse a <a href="https://www.leereamsnyder.com/#keep-a-few-rocket-shields-handy">rocket to a shield</a>.</li>
<li>Light a big patch of grass on fire, then ride the updraft.</li>
<li>Are you fighting in a baddie fort? There’s probably something you can Ascend through.</li>
<li>Fuse a Zonai Spring to a shield, then shield surf to bounce up into the air. Sadly, this uses up the Spring. Try this with an explosive for more fun/chaos.</li>
<li>Attach a Zonai Wing to a shield, then start to shield surf. It gives you juuuust enough extra height on the jump that you can trigger bullet time in midair. (Do make sure you practice before you try this against Lynels.)</li>
<li>Are you in any of the “low gravity” areas? Just jump! It’s enough height for Bullet Time, at least.</li>
</ul>
<p>Or with a bit of advance planning:</p>
<ul>
<li>Throw a Hylian Pine Cone on a fire for a brief but very powerful gust of wind.</li>
<li>Throw down a Spicy Pepper (you’ll eventually have tons), then light it on fire.</li>
<li>Throw down five pieces of wood in a pile and light 'em on fire for a longer-lived updraft.</li>
<li>Throw down a Zonai fan, make sure it’s blowing up, then turn it on. It’ll give you an updraft you can ride up, and it’ll stay available as long as you have battery power.</li>
<li>Throw down a Zonai Spring, climb on top, and whack it to launch upward. This gives you more air than a fan and requires no battery, but you need to hit it again to reset it before taking another ride. You can attach multiple springs in a stack to go even higher.</li>
<li>Get a Zonai Hover Platform as high as you can&#8202;—&#8202;fusing one to an arrow and shooting up is the perfect height&#8202;—&#8202;then Ascend up on top of the platform.</li>
</ul>
<p>And, finally, if Sky Island parts are falling nearby, climb on top and use Recall.</p>
<h3 id="use-tools-for-crowd-control"><a href="https://www.leereamsnyder.com/#use-tools-for-crowd-control" class="header-anchor"><span>Use tools for crowd control</span></a></h3><p>Abusing the <a href="https://www.leereamsnyder.com/#elements">elements</a> or <a href="https://www.leereamsnyder.com/#pick-up-all-the-plants">plants from the depths</a> can give you a major edge in hectic fights.</p>
<h2 id="how-to-kill-specific-enemies"><a href="https://www.leereamsnyder.com/#how-to-kill-specific-enemies" class="header-anchor"><span>How to kill specific enemies</span></a></h2><p>The minibosses throughout Hyrule can be daunting, but getting good at killing them is the best way to get strong weapons and rare goodies. Of particular note are Hynoxes, which always carry a variety of weapons, and Lynels which have particularly strong bits to Fuse to weapons.</p>
<h3 id="armored-enemies"><a href="https://www.leereamsnyder.com/#armored-enemies" class="header-anchor"><span>Armored enemies</span></a></h3><p>This is one of many reasons that you should always keep some hammers on hand.</p>
<p>Weapons fused with Moblin, Horriblin, or Hinox horns, Frox fangs, Dragon Shards, Like-Like stones, Lynel Hooves or Mace horns, spiked balls, or rocks are what you’re looking for.</p>
<p>Any of those fused to arrows, especially Lynel Hooves, work too.</p>
<p>Explosives also will break armor&#8202;—&#8202;just make sure you’re not in the blast radius.</p>
<h3 id="boss-bokoblins"><a href="https://www.leereamsnyder.com/#boss-bokoblins" class="header-anchor"><span>Boss Bokoblins</span></a></h3><p>These can be chaos if you’re not used to handling crowds. Try to pick off as many Bokoblins as you can before really engaging with the Boss.</p>
<p>If he summons his underlings to him, that’s a good time for <abbr title="Area of Effect">AOE</abbr> damage like powerful elemental attacks or explosives.</p>
<p>Weaker ones you can knock down by using Recall on the boulders they chuck at you.</p>
<h3 id="flux-constructs"><a href="https://www.leereamsnyder.com/#flux-constructs" class="header-anchor"><span>Flux Constructs</span></a></h3><p>The glowing box is the only thing that takes damage. Grab it with Ultrahand and shake it out (like you’re disassembling something you built) and the entire boss will collapse and you can swing away at the weak point. For the higher level Constructs, you might have to hit the box with an arrow to stun it before you can easily Ultrahand it, or just keep pulling other blocks away until it falls apart.</p>
<p>For the rotating cube phase, I like to use Ultrahand on the blocks to slide them out of the way and make it easier to grab the weak one.</p>
<p>For the final phase when it goes way up in the air, dodge the incoming blocks, climb on one, and use Recall on it to fly up where you can attack the weak box. Lower-level Constructs you can Ascend right up.</p>
<video class="lazy" width="1280" height="720" muted loop playsinline controls preload="none">
  <source src="https://i.imgur.com/AK6wXGs.mp4" type="video/mp4" />
<p>Your browser does not support the video tag or something has gone wrong with loading the video. <a href="https://imgur.com/a/pzzw5R5">Try it on Imgur</a></p>
</video>
<p>Or just shoot a lot of Bomb Flower arrows at 'em and they’ll fall apart.</p>
<p>Be sure to use Fuse on the core that it drops!</p>
<h3 id="taluses"><a href="https://www.leereamsnyder.com/#taluses" class="header-anchor"><span>Taluses</span></a></h3><p>That glowing ore deposit on the top? That’s the weak spot.</p>
<p>It’s easiest to climb on top when they’re stunned and it drops to the ground. You can either hit the weak spot with arrows (eyeballs can help), use Recall (quickly!) when it throws a boulder at you, or run sideways like a madman and climb up when it lowers itself to replenish its arms.</p>
<p>For Frost or Igneo Taluses, you’ll have to hit the body with the opposite element before you can stand on it.</p>
<p>If you’re feeling ballsy, you can run right under its central body and Ascend up top. I usually run up, trigger Ascend, and start smashing A until it lets me up.</p>
<p>Once you’re on top, the charged spin with a two-handed hammer is the fastest way to drop them. They’ll throw you off after a few seconds; if they start shaking, jump off.</p>
<video class="lazy" width="1280" height="720" muted loop playsinline controls preload="none">
  <source src="https://i.imgur.com/PJQeBUR.mp4" type="video/mp4" />
<p>Your browser does not support the video tag or something has gone wrong with loading the video. <a href="https://imgur.com/a/IBh75sz">Try it on Imgur</a></p>
</video>
<p>Sometimes they have the ore deposit stuck inconveniently on the side where you can’t Spin-2-Win. These are just the worst. You might have to stand on top of that and do your best to hit it; try a spear here, too. Or leap off and use Bullet Time to pepper them with arrows.</p>
<p>Don’t forget to fuse the heart they drop to a weapon or shield!</p>
<h3 id="hinoxes"><a href="https://www.leereamsnyder.com/#hinoxes" class="header-anchor"><span>Hinoxes</span></a></h3><p>If you’ve got Stealth or move very quietly you can pluck the weapons off their necklace before they wake up.</p>
<p>Back away and shoot 'em in the eye. As always, Keese Eyeballs on the arrows make this easy. They’ll fall down in agony (a bomb arrow in the eye will drop them for a <em>long</em> time), and you can go to town on 'em.</p>
<p>When they’re around half health, they’ll start to cover the eye with a hand if you’re not quick on the draw.</p>
<p>If they have wooden armor on their legs, you can light that on fire to distract them for a bit. Likewise with metal armor and electricity.</p>
<h3 id="stalnoxes"><a href="https://www.leereamsnyder.com/#stalnoxes" class="header-anchor"><span>Stalnoxes</span></a></h3><p>These are basically the same as Hinoxes, but more annoying: you’ll eventually knock the eye out of the body and have to keep pounding on that before the body grabs it and pops it back in. Try to get in between the eye and the body to slow it down and keep them apart.</p>
<h3 id="froxes"><a href="https://www.leereamsnyder.com/#froxes" class="header-anchor"><span>Froxes</span></a></h3><p>Shoot the glowing eye, then climb on top and whack the ore deposits on its back. If you stay on there, when it recovers it’ll launch you high enough in the air to glide and bullet time to hit it in the eye again.</p>
<p>If you’re stuck on the ground, I find these can be <em>real</em> hard to get a good shot, so no shame in using Eyeball arrows.</p>
<p>If it starts Kirby-ing, fire a Bomb Flower into its mouth or take a Zonai Time Bomb out of your inventory.</p>
<h3 id="moldugas"><a href="https://www.leereamsnyder.com/#moldugas" class="header-anchor"><span>Moldugas</span></a></h3><p>The trick is to get them airborne.</p>
<p>If they’re close and you’re up on a pillar or something, you can shoot an arrow at the ground to get its attention, and it’ll shoot up where the arrow landed.</p>
<p>Once they’re flying up in the air, you can hit their underside with a Bomb Flower arrow to stun them. Once stunned, race over and whack their underside for bonus damage. When it recovers, zip back to your higher ground and repeat.</p>
<p>Zonai Time Bombs work well here; the Molduga will approach, then have a bad day. I’d Fuse one to an arrow instead of trying to throw them.</p>
<p>If you’ve got the Sage from the Water Temple, you can also use his power to absorb the Molduga’s hit and get you both airborne, at which point you can shoot the belly. The Fire and Lightning Temple sages will also give you some explosive options.</p>
<video class="lazy" width="1280" height="720" muted loop playsinline controls preload="none">
  <source src="https://i.imgur.com/4QkKYsP.mp4" type="video/mp4" />
<p>Your browser does not support the video tag or something has gone wrong with loading the video. <a href="https://imgur.com/a/cHxanMb">Try it on Imgur</a></p>
</video>
<h3 id="gloom-spawn-aka-gloom-hands"><a href="https://www.leereamsnyder.com/#gloom-spawn-aka-gloom-hands" class="header-anchor"><span>Gloom Spawn aka Gloom Hands</span></a></h3><p>These move fast, but they can’t climb. It’s not easy in a panic, but you can also use Dazzlefruit to stun them for a bit.</p>
<p><a href="https://www.leereamsnyder.com/#consider-going-high">Get above them</a>, then rain Bomb Flower arrows on the hands until dead. You have to keep up the pressure, or else the individual hands will respawn.</p>
<h3 id="lynels"><a href="https://www.leereamsnyder.com/#lynels" class="header-anchor"><span>Lynels</span></a></h3><p>A headshot will stun them, then you can wail on 'em. But that’s, err, easier said then done.</p>
<p>You can cheese these with eyeball arrows, or use <a href="https://www.leereamsnyder.com/#consider-going-high">any method you like to get some height</a> so you can enter bullet time to get that headshot.</p>
<p>With a little practice, many of their attacks have some fairly generous windows for Flurry Rushes, so you can land some blows in style. Also, almost all of their melee attacks can be parried, which will give you a second to pull out your bow and land a headshot. I typically parry, then aim up roughly towards the head, and strafe to make any final small adjustments before firing. An hour of practice here is a solid investment.</p>
<p>While stunned, you can go to the side or rear and hit <strong>A</strong> to mount them for a few seconds during which you can tap <strong>Y</strong> furiously to hit them before it throws you off.</p>
<p>Bizarrely, attacks while mounted on a Lynel’s back do <em>not</em> reduce your weapon’s durability! A common tactic is to assemble a powerful but fragile weapon (eg Gerudo or Royal Guard claymore on its last hit) and use it exclusively on a Lynel’s back, where it will never break. Make a strong enough weapon and you can pull nonsense like this:</p>
<video class="lazy" width="1280" height="720" muted loop playsinline controls preload="none">
  <source src="https://i.imgur.com/X8XTx3T.mp4" type="video/mp4" />
<p>Your browser does not support the video tag or something has gone wrong with loading the video. <a href="https://imgur.com/a/3uxp8km">Try it on Imgur</a></p>
</video>
<h3 id="gleeoks"><a href="https://www.leereamsnyder.com/#gleeoks" class="header-anchor"><span>Gleeoks</span></a></h3><p>I would not engage with these until you can kill Lynels, because <a href="https://www.leereamsnyder.com/#fuse-flying-baddies-parts-to-arrows">Keese Eyeballs</a> and the multi-shot bows that Lynels drop make Gleeoks <em>relatively</em> easy to kill.</p>
<p>Use Lynel bows and Fused eyeballs as fast as you can to land a bunch of headshots and drop the Gleeok. Then close in and whack the heads. Don’t get too greedy as it starts to recover, because it’ll blow you away and knock you over, possibly throwing you off the arena you’re fighting it on. If you can avoid getting blown back, you can probably fire another series of multiple Eyeball arrow salvos and stun it again before it can do much.</p>
<p>For the last third or so of its health bar, it’ll fly way, <em>way</em> up. It’ll still be in range of Eyeball arrows for a bit as it ascends, so hopefully you can knock it back down before it’s out of range.</p>
<p>Failing that, you’ll need to get airborne <em>fast</em>. A Rocket Shield or a stack of Springs is your best bet. Otherwise, you’ll have to either use Recall on icicles or try to ride updrafts while the Gleeok rains elemental death from above. It’s doable, but very unpleasant.</p>
<h2 id="finding-korok-seeds"><a href="https://www.leereamsnyder.com/#finding-korok-seeds" class="header-anchor"><span>Finding Korok seeds</span></a></h2><p>There are literally 1,000 Koroks on the Surface and Sky Islands. Once you know the broad patterns the puzzles fall into, you’ll start spotting them everywhere.</p>
<ul>
<li><strong>Backpacking buddies</strong>: These are worth doing because two seeds at once is awesome, and the path between them often has you passing over some treasure or near something interesting that you might have otherwise missed. Look around for parts to build a vehicle. If there are none, you can usually walk the backpacker over with Ultrahand.</li>
<li><strong>Conspicuous rock</strong>: (<a href="https://imgur.com/a/NfU01xE" title="An example of a Korok puzzle with a rock in an interesting place">Example</a>) If you see a single rock somewhere semi-interesting, odds are it’s hiding a Korok. You’ll find them on top of buildings, on small islands, on top of mountains, on top of larger trees, and underneath piles of leaves you can burn away.</li>
<li><strong>Incomplete rock pattern</strong>: (<a href="https://imgur.com/a/aLLKfe4" title="An example of a Korok puzzle with an incomplete rock pattern">Example</a>) You can spot these on the map if you’re looking closely. If you see a lot of rocks in a geometric pattern&#8202;—&#8202;typically circles&#8202;—&#8202;that’s missing a part, look around nearby for a spare rock. Place the rock in the right spot (you can either carry it or Ultrahand) to complete the pattern and you’ll reveal a Korok. Most patterns are just missing one rock, but some have two gaps.</li>
<li><strong>Metal block pattern</strong>: (<a href="https://imgur.com/a/IUCXZRs" title="An example of a Korok puzzle with matching metal blocks">Example</a>) These will have a bunch of dark, patterned blocks in some formation with a smaller set of blocks nearby. Use Ultrahand to place the smaller set into the larger one to fill in the gaps or match an existing one.</li>
<li><strong>Ascend stump</strong>: (<a href="https://imgur.com/a/VbvJier" title="An example of a Korok Ascend puzzle">Example</a>) Look up while going under archways or bridges. If you see a stump on the ceiling, Ascend through it to reveal the Korok.</li>
<li><strong>Chasing lights</strong>: I see those most often around ponds, fountains, or statues. You’ll hear rattling and see twinkling lights zooming around on the ground. Wait for them to come back around to you and examine the lights to find the Korok.</li>
<li><strong>Lights in high places</strong>: (<a href="https://imgur.com/a/YJUWu0l" title="An example of a Korok puzzle with lights around a high place">Example</a>) Look around the very highest points of an area&#8202;—&#8202;lonely tall trees, chimneys, towers, spires, landmarks, flagpoles&#8202;—&#8202;and you might see a field of twinkling lights that you can examine. They won’t appear until you’re close.</li>
<li><strong>Stump race</strong>: (<a href="https://imgur.com/a/dlBQrI7" title="An example of a Korok puzzle with a stump race">Example</a>) For these, you’ll step on a small stump and it’ll make a ring of lights appear somewhere in the distance. Get through the ring before it disappears and you’ll reveal the Korok. (The power you get from the Wind Temple will make these easier.)</li>
<li><strong>Stump “Floor is Lava”</strong>: (<a href="https://imgur.com/a/fidS3Jc" title="An example of a Korok puzzle with a stump and target">Example</a>) These stumps will make a target appear on the ground in the distance. You have to jump off the stump and land on the target without touching the ground in between.</li>
<li><strong>Stump dive &amp; chase</strong>: (<a href="https://imgur.com/a/gDN3z78" title="An example of a Korok puzzle with a dive off of Sky Islands">Example</a>) I only saw these way up on Sky Islands. You step on the stump, and a light shoots out down toward the surface. Dive after the light, get close(ish) and examine it before you get to the ground. Pro-tip: don’t chase these until you have a fast travel point nearby so you can try again if you miss.</li>
<li><strong>Stump crawl</strong>: If you see a stump on the side of a Sky Island, climb over the face of it to reveal the Korok.</li>
<li><strong>Dandelions</strong>: (<a href="https://imgur.com/a/WoHEMmV" title="An example of a Korok puzzle with a floating dandelion">Example</a>) I saw these on some large hollow tree stumps and on top of some towers. You strike the flower and it’ll pop into the air, and you have to jump off and examine it before it hits the ground.</li>
<li><strong>Statue offering</strong>: If you see a series of statues holding the same fruit but one of them is empty, place the appropriate fruit from your inventory into the empty spot to make a Korok appear. These are often very small statues, but in Faron they can be hilariously large. Feel free to take your fruit back afterwards!</li>
<li><strong>Pop the cork</strong>: (<a href="https://imgur.com/a/VAfa70F" title="An example of a Korok cork puzzle">Example</a>) These are two corks attached with a chain. The idea is you need to apply a lot of force to the loose cork to rip out the stuck one. If you’re near water, use Ultrahand to push one cork deep into the water, and when it pops out it’ll release the stuck one. Other times you might have to attach something heavy like a boulder. Or try a Zonai Rocket.</li>
<li><strong>Pinwheel archery challenge</strong>: (<a href="https://imgur.com/a/QIorPfS" title="An example of a Korok puzzle a pinwheel and balloons">Example</a>) If you see a rattling orange pinwheel somewhere, stand by it and start looking for balloons with targets. Shoot all the balloons (<a href="https://www.leereamsnyder.com/#fuse-flying-baddies-parts-to-arrows">Wings</a> will help if they’re far away or moving fast) to reveal a Korok. The pinwheels glow at night, which can make it easier to spot them. They also have a distinctive rattle.</li>
<li><strong>Conspicuous balloon</strong>: (<a href="https://imgur.com/a/oWxUlG4" title="An example of a Korok puzzle with a semi-hidden balloon">Example</a>) Separate from the Pinwheel challenges, you might spot a single stationary target balloon underneath a bridge or tucked away in a hard-to-spot corner. Shoot it.</li>
<li><strong>Shoot the acorn</strong>: (<a href="https://imgur.com/a/VygPyB6" title="An example of a Korok puzzle with a hanging acorn">Example</a>) These are large acorns&#8202;—&#8202;sometimes hanging from chains&#8202;—&#8202;that you can find in hollow logs, under bridges, in hollows of trees, just stuck on cliff sides. Shoot it.</li>
<li><strong>Red arrows</strong>: (<a href="https://imgur.com/a/DYUN6JX" title="An example of a Korok puzzle with red arrows pointing to a tree to climb">Example</a>) If you see little signs with cartoony red arrows, look around for more. There will usually be 2 or more pointing to a single location. Go to where they’re all pointing&#8202;—&#8202;you might have to climb&#8202;—&#8202;and some twinkling lights that you can examine will appear.</li>
<li><strong>Lily circle</strong>: (<a href="https://imgur.com/a/QtDX4sF" title="An example of a Korok puzzle with a lily circle to dive into">Example</a>) Look for circles of lilies in water. Dive into the circle from above (it’s OK to use your paraglider to make adjustments before landing) and you’ll find a Korok.</li>
<li><strong>Boulder holder</strong>: (<a href="https://imgur.com/a/WEmd5Ga" title="An example of a Korok puzzle with a boulder tee">Example</a>) These are new in <em>TotK</em>, and the opposite of the boulder golf puzzles in <em>BotW</em>. You can spot these by either seeing the distinctive boulders in little holes or finding the distinctive stick tripods. Find the boulder, then use Ultrahand to place the boulder in the tripod.</li>
<li><strong>Flower path</strong>: These start with distinctive yellow flowers, often around clusters of small towers, islands, or hills. You touch the flower, and it’ll disappear and reappear somewhere close by. Keep finding and touching the yellow flower until a white flower appears, and you’ll get a Korok.</li>
<li><strong>Fix the roof</strong>: (<a href="https://imgur.com/a/UlH6Fb8" title="An example of a Korok puzzle with a broken roof">Example</a>) These are new in <em>TotK</em>. I see these around small town ruins. A ruined structure will have a not-quite-rectangular hole in the roof. Nearby you’ll probably find a not-quite rectangular hunk of wood that fits the gap. Place the wood there with Ultrahand and the Korok will reveal itself.</li>
<li><strong>Ring the bell</strong>: Some towers or fountains have bells. Use Ultrahand to make them ring and you’ll find a Korok.</li>
</ul>
<h2 id="where-to-find-some-rare-materials"><a href="https://www.leereamsnyder.com/#where-to-find-some-rare-materials" class="header-anchor"><span>Where to find some rare materials</span></a></h2><h3 id="stealthfin-trout"><a href="https://www.leereamsnyder.com/#stealthfin-trout" class="header-anchor"><span>Stealthfin Trout</span></a></h3><p>You eventually need these for the Stealth Armor’s final levels. They’re only in the lake around Korok Forest. I found a bunch at the south side near the Training Camp, but there are a few other clusters of them around the lake. Take a picture of one, use Sensor+, build a boat, then make a lap.</p>
<p>If you don’t see <em>any</em>, save your game, close the game entirely, and restart it.</p>
<h3 id="lizalfos-tails"><a href="https://www.leereamsnyder.com/#lizalfos-tails" class="header-anchor"><span>Lizalfos Tails</span></a></h3><p>You need a bunch of these for armor upgrades, and the drop rates are dismal.</p>
<p>For Green ones, a merchant at Kara Kara Bazaar in Gerudo Desert sells some at exorbitant rates, but by the time I needed Green tails most of the Lizalfos in the game had scaled up beyond green, so it was easier to just pay.</p>
<p>For Fire-Breath and Ice-Breath Lizalfos Tails, rampage through Gerudo Canyon each Blood Moon. There are 20-ish camps of 2&#8202;–&#8202;3 Lizalfos, and they swap between Fire Lizalfos during the day and Ice Lizalfos at night. <a href="https://www.reddit.com/r/tearsofthekingdom/comments/14boeyy/fire_and_ice_lizalfos_tail_farming_guide/">This post by Reddit user Gogeta2112 has a map of the camps and additional advice</a>. By the time you have all the tails you need, you’ll also have well over a hundred elemental horns and <em>many</em> hundreds of Lizalfos Talons you can sell. That post also lists a few accessible groups of Blue Lizalfos.</p>
<p>For Thunder-Breath tails… good luck.</p>
<h3 id="beetles"><a href="https://www.leereamsnyder.com/#beetles" class="header-anchor"><span>Beetles</span></a></h3><p>I’ve only found these in decent numbers in two places:</p>
<ul>
<li>The trees around the Dondons north of Lakeside Stable have some.</li>
<li>A single tree by Rutile Lake around Satori Mountain has almost a dozen of them. If you’ve helped out the newlyweds in Gerudo Canyon that needed Gleeok guts, they’re camping right there.</li>
</ul>
<p>Check at night or in the early morning. I’ve never seen a beetle during the day.</p>
<p>Finally, sometimes there will be a beetle or two attached to an Evermean tree after you kill it.</p>
<h3 id="porgies"><a href="https://www.leereamsnyder.com/#porgies" class="header-anchor"><span>Porgies</span></a></h3><p>Mighty and Armored Porgies are key to making the longest-lasting Attack Up or Defense Up elixirs.</p>
<p>Find these mostly in the water on the southern coast, particularly around Lurelin Village.</p>
<p>Look for swarms of birds circling above the water and you’ll find schools of dozens of them. There’s one south of the southern-most tip of Cape Cresia (3430, 105, -3940), and another in the middle of the bay directly west of the tip of Soka Point (3581, 105, -3618).</p>
<h3 id="construct-captain-horns"><a href="https://www.leereamsnyder.com/#construct-captain-horns" class="header-anchor"><span>Construct Captain Horns</span></a></h3><p>You need these for the Zonai armor set. Construct Captains are uncommon to begin with, and most of them in the overworld scale up quickly.</p>
<p>Your most reliable source of lower-level horns will be Proving Ground shrines. <a href="https://www.reddit.com/r/tearsofthekingdom/comments/13tt2jx/comment/jm21i5a/">This comment from Reddit user Burgersoul has an extensive list of Captain Construct Is</a>, and <a href="https://www.reddit.com/r/zelda/comments/13g7q34/comment/jnuru7f/">this comment from Reddit user lucygracenelson has a good list of Is, IIs, and IIIs</a>.</p>
<p>Constructs do not revive with Blood Moons; they come back after 4 in-game days have passed.</p>
<h3 id="boss-bokoblin-horns"><a href="https://www.leereamsnyder.com/#boss-bokoblin-horns" class="header-anchor"><span>Boss Bokoblin Horns</span></a></h3><p>You need these for the Royal Guard Armor, and eventually the lower level ones are uncommon. <a href="https://www.reddit.com/r/tearsofthekingdom/comments/13j0d7u/comment/jlqy0gq/">This comment from Reddit user palaptie has a crowdsourced list of Boss Bokoblins of all colors that don’t scale to Silver</a>.</p>
<h2 id="thats-it"><a href="https://www.leereamsnyder.com/#thats-it" class="header-anchor"><span>That’s it!</span></a></h2><p>I hope you learned something cool. If you think I’m missing some game-changing or fun thing, let me know! I’m <a href="https://twitter.com/leereamsnyder/">@leereamsnyder on Twitter</a> or <a href="https://www.reddit.com/user/unexplainedbacn">unexplainedbacn</a> on Reddit.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[False vacuum decay]]></title>
            <link>https://www.leereamsnyder.com/false-vacuum-decay</link>
            <guid>https://www.leereamsnyder.com/false-vacuum-decay</guid>
            <pubDate>Mon, 15 May 2023 16:00:00 GMT</pubDate>
            <description><![CDATA[You won’t see it coming]]></description>
            <content:encoded><![CDATA[<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/heroes/false-vacuum-decay.jpeg" loading="lazy" width="3024" height="1701" alt="" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/heroes/false-vacuum-decay.jpeg 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/heroes/false-vacuum-decay.jpeg 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/heroes/false-vacuum-decay.jpeg 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/heroes/false-vacuum-decay.jpeg 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/768/q/60/images/heroes/false-vacuum-decay.jpeg 768w, https://www.leereamsnyder.com/resized-n-optimized-image/w/960/q/60/images/heroes/false-vacuum-decay.jpeg 960w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1024/q/60/images/heroes/false-vacuum-decay.jpeg 1024w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1280/q/60/images/heroes/false-vacuum-decay.jpeg 1280w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1600/q/60/images/heroes/false-vacuum-decay.jpeg 1600w, https://www.leereamsnyder.com/resized-n-optimized-image/w/1920/q/60/images/heroes/false-vacuum-decay.jpeg 1920w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2048/q/60/images/heroes/false-vacuum-decay.jpeg 2048w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2240/q/60/images/heroes/false-vacuum-decay.jpeg 2240w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2560/q/60/images/heroes/false-vacuum-decay.jpeg 2560w, https://www.leereamsnyder.com/resized-n-optimized-image/w/2880/q/60/images/heroes/false-vacuum-decay.jpeg 2880w, https://www.leereamsnyder.com/resized-n-optimized-image/w/3024/q/60/images/heroes/false-vacuum-decay.jpeg 3024w" sizes="(max-width: 32em) 96vw, 30em"></p>
<div class="intro">
<p>This was first published on <a href="https://actioncookbook.substack.com/p/false-vacuum-decay">The Action Cookbook Newsletter</a>.</p>
<p><strong>A small warning</strong>: this contains discussion of suicide.</p>
</div>
<p>In October of 2019 I went to a Wilco concert, finally checking off one of the big unfinished items on my bucket list.</p>
<p>I am not by nature a concert-goer. For me, listening to music has historically been done either (a) at ear-splitting volume alone in the car or (b) at ear-splitting volume alone with headphones. It’s a single player game. I don’t need other people around to enjoy it, and I can do it from the comfort of my home. Why go out?</p>
<p>But Wilco is a top five&#8202;—&#8202;depending on the day, maybe top two&#8202;—&#8202;all-time band for me. I have devoured all of their catalog. I squealed like the entire February 1964 Ed Sullivan Show audience when lead singer Jeff Tweedy showed up for like a 2-minute cameo on <em>Parks and Recreation</em>. Exceptions must be made.</p>
<p>Also, Wilco is a kick-ass concert band. After some early turbulence, their lineup hasn’t changed since the 2004 additions of acid jazz freak guitarist Nels Cline and polyglot composer Pat Sansone. They are a <em>tight</em> ensemble. For evidence, check out the 2005 double live album <em>Kicking Television: Live In Chicago</em>. I particularly enjoy that album’s re-interpretation of “One By One” from humble mumbler to a mountain-moving guitar solo showcase.</p>
<p><lite-youtube videoid="rRSRrtZeJDw">
  <a href="https://youtube.com/watch?v=rRSRrtZeJDw" class="lty-playbtn" title="Play video">
    <span class="a11y">Play video</span>
  </a>
</lite-youtube></p>
<p><lite-youtube videoid="9Izks6oNYT0">
  <a href="https://youtube.com/watch?v=9Izks6oNYT0" class="lty-playbtn" title="Play video">
    <span class="a11y">Play video</span>
  </a>
</lite-youtube></p>
<p>As expected, they kicked ass. It was a perfect autumn evening. I sat on a lawn chair, had a few beers, and watched one of my favorite bands play a lot of my favorite songs. I went with a friend, but they might as well have not even existed for a few hours. I was locked in.</p>
<p>I have only one criticism: that night, they didn’t play “Jesus Etc.”—arguably their best song and arguably <em>the</em> best song.</p>
<hr>
<p>Verse 1:</p>
<blockquote>
<p>Jesus, don’t cry<br />
You can rely on me honey<br />
You can combine anything you want<br />
I’ll be around<br />
You were right about the stars<br />
Each one is a setting sun</br></p>
<p>Tall buildings shake<br/>
Voices escape singing sad sad songs<br/>
Tuned to chords strung down your cheeks<br/>
Bitter melodies turning your orbit around</p>
</blockquote>
<hr>
<p>I just finished up <em>The End of Everything (Astrophysically Speaking)</em> by Dr. Katie Mack. Excellent book: it’s an informative and surprisingly breezy tour of all the theoretical ways our universe might end, whether it’s a reversal of our current expansion (bad), heat death (also bad), dark energy stripping matter apart (very bad), a collision with a parallel universe from another dimension (🤯), or, my favorite, a charming theory called false vacuum decay.</p>
<p>I am butchering the science, but it roughly goes like this: in the opening moments after the Big Bang, we know that something about the fundamental forces of the universe was… different. Specifically, electromagnetism and the weak nuclear force were, for the briefest of moments, the same single force. Once they separated into the two forces we know and appreciate today, that’s allowed most of our existence to, uh, be. Quantum particles can form into protons and neutrons, combine into atoms, team up with other atoms to form stars and molecules and galaxies and people, and on and on for billions of years of apparent stability.</p>
<p>But! If these fundamental forces were able to rearrange themselves once before, what if it happened <em>again</em>?</p>
<p>The theory goes that maybe at some point in the universe, something will shift that causes the fundamental forces to reconfigure themselves in a new, novel way. At that point, physics as we understand it will no longer exist. Likewise, energy and matter as we know them <em>can no longer exist</em> and would be ripped apart into some new, unknowable form that conforms to the new fundamental forces.</p>
<p>Then from this initial point of “new physics,” a bubble of released energy will expand outward in all directions at the speed of light and everything it touches will immediately just be&#8202;—&#8202;gone. Canceled entirely. And you thought “new math” was rough!</p>
<p>It gets worse! Unlike the definitely-in-the-far-future heat death of the universe, this could happen <em>at any time</em>. Maybe this has happened already, and the bubble of doom just hasn’t gotten to us yet. <a href="https://www.youtube.com/watch?v=Wp9sN2bzPVs">Why, you could wake up dead tomorrow! Well, good night!</a></p>
<p>If it’s any consolation, we can’t see it coming (speed of light and all that), and we wouldn’t feel any pain when it gets here. And the broad consensus among very smart astrophysicists is that the chances of this really happening are vanishingly small.</p>
<p>I&#8202;—&#8202;not a smart astrophysicist&#8202;—&#8202;am not so sure about that.</p>
<hr>
<p>On Wednesday, I learned that <a href="https://www.nytimes.com/2023/05/10/us/heather-armstrong-dead.html">Heather Armstrong had died</a>.</p>
<p>If you, like me, were extremely online in the early 2000s, you might better know her as the bracing, thoughtful, hilarious author of Dooce.com.</p>
<p>From the opening of the obituary in the <em>New York Times</em>:</p>
<blockquote>
<p>Heather Armstrong, the breakout star behind the website Dooce, who was hailed as the queen of the so-called mommy bloggers for giving millions of readers intimate daily glimpses of her odyssey through parenthood and marriage, as well as her harrowing struggles with depression, died on Tuesday at her home in Salt Lake City. She was 47.</p>
</blockquote>
<p>Ooof. Barely older than me! This can’t get worse.</p>
<blockquote>
<p>Pete Ashdown, her longtime partner, who found her body in the home, said the cause was suicide.</p>
</blockquote>
<p>Ah, goddamnit.</p>
<p>Can you even imagine finding that? If there’s anything that could tear your whole universe apart in a blink, it’s that.</p>
<p>My thoughts are with her children, family, and friends.</p>
<hr>
<p>Hoo boy this has gotten dark. Let’s lighten the mood?</p>
<p>My friend’s grandmother died last year.</p>
<p>OK, rough start. Hang in there.</p>
<p>While they’re going through her belongings, my friend snags a bunch of vintage coats for his children. One of them was a particularly snazzy green jacket that wouldn’t look out of place on <em>Mad Men</em>. His 8-year-old daughter was thrilled about this, because now she would be the only kid in her class with a cool jacket “from the nineteen-hundreds.”</p>
<p>Instantly, my friend’s body was ripped from existence and replaced with a pile of dusty Werther’s Originals.</p>
<hr>
<p>A little over 20 years ago, Wilco released <em>Yankee Hotel Foxtrot</em>.</p>
<p>The creation of this album is now the stuff of legends: Wilco was under contract with Warner/Reprise records, the label hated this album and dropped the band, Wilco released it online for free, then Nonesuch Records&#8202;—&#8202;a different division of Warner!—signed the band and officially released the album to big sales and universal acclaim.</p>
<p>It could have gone so many other ways, as <a href="https://pitchfork.com/reviews/albums/wilco-yankee-hotel-foxtrot-super-deluxe-edition/">Stephen M. Deusner wrote in his review of the 20th anniversary Super Deluxe Edition</a>:</p>
<blockquote>
<p>In retrospect, everything about <em>Yankee Hotel Foxtrot</em> feels astonishingly precarious. It’s an album that inspires endless what-ifs: What if it hadn’t been very good, or what if it had been extremely good but not in a way that captured the imaginations of so many listeners? What if Jim O’Rourke had been too busy to take Tweedy’s phone call and never connected them with Glenn Kotche or mixed the final album? What if Nonesuch had passed on the record, robbing us of the satisfying narrative that Wilco made Warner pay for the album twice? What if streaming it on their website had depleted sales rather than boosted them? What if a national tragedy hadn’t immediately given the music more gravity and relevance than even Wilco could have dreamed? Every hypothetical represents a new universe, a new world of possibilities.</p>
</blockquote>
<hr>
<p>About 25 years ago, a friend died from suicide. Her name was Jenny. We had been in marching band together. We both played alto sax; she was older than me and was our section leader. She was funny, personable, and charming. Everyone liked Jenny.</p>
<p>She went off to college; then she was truly gone.</p>
<p>When we found out, I don’t think I said much at all. I felt numb. I was probably in shock. Definitely also I was angry. What a thoughtless thing to do!</p>
<p>Megan, another saxophonist in my grade who had been close with Jenny, wept.</p>
<p>I had an interesting relationship over the course of high school with Megan. We were together <em>all the time</em>, in all the same honors classes, in the same bands, played the same instrument. I was first chair; she was second. I would get an A+++ on a project; she’d get merely an A++. She studied hard; I studied some. She could sing; I absolutely could not. When she spoke, she was quiet, thoughtful, and sharp; meanwhile I talk like a rubber mallet canoodling with a bicycle horn. Come to think of it, I sing like that too.</p>
<p>I knew, deep down, she was smarter than me even if the grades didn’t reflect it, and it ate at me a little. Both of us quickly figured out how to drive each other just a little bit nuts. We needled each other relentlessly. I wouldn’t say it was ever outright malicious, but I was definitely a little mean.</p>
<p>So, I might be misremembering a bit here&#8202;—&#8202;see shock, anger above&#8202;—&#8202;but if we had any truly awful honest-to-god fights, it was when I announced that I didn’t want to go to the wake or the funeral. Megan thought I was being a selfish prick and these things weren’t about me. I <em>was</em> being a selfish prick and I hated that she was right about it. But I went. It sucked, but I went.</p>
<p>(For the record, I still believe that there oughta be a permanent ban on the deaths of anyone and anything that I personally care about, please and thank you!)</p>
<p>After high school, Megan and I went our separate ways.</p>
<p>A few years into college we happened to be back in our hometown for Spring Break and met for coffee to catch up. A little distance was, I think, good for us. We chatted warmly, easily, without a trace of antagonism. She was funnier than I remembered.</p>
<p>When the conversation flowed to music that we had been listening to, we discovered that we had both recently gotten very into Over The Rhine, a soulful husband-wife duo from Cincinnati. Also: Wilco.</p>
<p>After coffee, we drove around aimlessly to listen to some Over The Rhine. We listened to <em>Yankee Hotel Foxtrot</em> in its entirety.</p>
<p>We listened together in reverence. In those moments, the physics underpinning our relationship were irrevocably altered.</p>
<p>I wish I hadn’t been such an asshole back in the day.</p>
<p>It was so nice to not listen alone.</p>
<hr>
<p>Second verse:</p>
<blockquote>
<p>Don’t cry<br />
You can rely on me honey<br />
You can come by any time you want<br />
I’ll be around<br />
You were right about the stars<br />
Each one is a setting sun<br /></p>
<p>Tall buildings shake<br />
Voices escape singing sad sad songs<br />
Tuned to chords strung down your cheeks<br />
Bitter melodies turning your orbit around</p>
</blockquote>
<hr>
<p>(Just to be clear, this was not a romantic connection. Not in this universe!)</p>
<hr>
<p>When the 20th anniversary reissue of <em>Yankee Hotel Foxtrot</em> came out last year I happily dove down a Wilco rabbit hole and discovered <a href="https://pitchfork.com/reviews/albums/19955-wilco-alpha-mike-foxtrot-rare-tracks-19942014whats-your-20-essential-tracks-19942014/">a new-to-me box set of rarities</a> called <em>Alpha Mike Foxtrot</em> with a staggering 77 tracks.</p>
<p>Five hours in at #71 is a concert recording of “Jesus Etc.” featuring Andrew Bird! One of my favorite bands playing one of my favorite songs with another one of my favorite artists??! And this is one of the songs I’ve never heard them play live! I was ready for a treat.</p>
<p>It’s a nice enough recording in the beginning. It’s not a stirring reinterpretation, nor does it have to be.</p>
<p>But when they hit the third verse, well, I didn’t see it coming.</p>
<p><lite-youtube videoid="0H4aPQ2hUOo">
  <a href="https://youtube.com/watch?v=0H4aPQ2hUOo" class="lty-playbtn" title="Play video">
    <span class="a11y">Play video</span>
  </a>
</lite-youtube></p>
<p>It’s around 2:20 in the video above. Jeff Tweedy doesn’t start singing the verse immediately. At first it feels like an awkward half second of silence, like something has gone wrong with the recording.</p>
<p>Then, you can hear them. You might have to strain; they’re deep in the mix. You haven’t really been able to hear them before, but now the audience is singing the third verse:</p>
<blockquote>
<p>Our love<br />
Our love<br />
Our love is all we have<br />
Our love<br />
Our love is all of God’s money<br />
Everyone is a burning sun</p>
</blockquote>
<p>Thousands of voices in unison, thousands of astonishingly precarious, beautiful sunsets converging.</p>
<p>It’s the most beautiful sound I’ve ever heard.</p>
<p>I felt so close to every single one of them. Their energy&#8202;—&#8202;their love for this band, this song, this moment, each other&#8202;—&#8202;previously unknown to me, ripped through me with such violence that I fell to my knees, and I wept.</p>
<p>When I could stand again, I hit rewind.</p>
<p>This time, I sang along.</p>
<p>I was alone. But also, I knew that I wasn’t.</p>
<p>(If you are in crisis, please call, text, or chat with the Suicide and Crisis Lifeline at 988. You, too, are not alone)</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Plumb luck]]></title>
            <link>https://www.leereamsnyder.com/plumb-luck</link>
            <guid>https://www.leereamsnyder.com/plumb-luck</guid>
            <pubDate>Sun, 23 Apr 2023 16:00:00 GMT</pubDate>
            <description><![CDATA[Three stories about plumbing, or one about money]]></description>
            <content:encoded><![CDATA[<p>I’m building to a point here, but first here’s three anecdotes about plumbing.</p>
<h2 id="the-dishwasher"><a href="https://www.leereamsnyder.com/#the-dishwasher" class="header-anchor"><span>The dishwasher</span></a></h2><p>One night about 6 years ago I loaded up our dishwasher, turned it on, and headed up to bed. Just like every night.</p>
<p>However, this particular night, a few minutes later I had a brief moment of doubt about whether or not I had locked the back door.</p>
<p>When I went down to check on the door and stepped into the kitchen, I stepped in a puddle of water.</p>
<p>The dishwasher had sprung a leak!</p>
<p>Even worse, when I turned the dishwasher off, water <em>still</em> kept flowing into it, pooling at the bottom, then spilling all over the floor. It was like the dishwasher wanted to change careers and become a fountain but hadn’t bothered to give me any notice or, ya know, move out of my kitchen. Rude!</p>
<p>(Remembering this is making me re-evaluate how harshly I judged <a href="https://www.leereamsnyder.com/a-bit-more">my “bad” toaster</a>. This was a <em>naughty</em> dishwasher.)</p>
<p>I had to cut off the water supply from the sink to get it to stop spitting water all over the kitchen.</p>
<p>So that was a fun couple of minutes of panic, but I caught it early enough that we could soak up the water with a bunch of beach towels.</p>
<p>If I hadn’t randomly had to go back downstairs to check on the door, the dishwasher’s all-night meltdown probably would have caused <em>catastrophic</em> damage, with repair costs far outweighing the cost of a new appliance.</p>
<h2 id="the-water-main"><a href="https://www.leereamsnyder.com/#the-water-main" class="header-anchor"><span>The water main</span></a></h2><p>A few months later, I got a call from our municipal water company. They noticed that our water usage had <strong>quadrupled</strong> that month, an indication that there’s some sort of new water leak.</p>
<p>We called in a plumber, who couldn’t find anything leaking in the house or in the crawlspace. Huzzah!</p>
<p>Well, un-huzzah, because that meant there might be a leak in the main line to our house. The one buried under our front yard.</p>
<p>I asked the plumber, “how do we find that without digging up the entire yard?”</p>
<p>“Is the ground wet anywhere?”</p>
<p>“It has been raining every day for a week, so, yes, the ground is wet everywhere.”</p>
<p>So the plumbers didn’t want to tear up the entire yard, and I did not want the plumbers to tear up the entire yard, so now we had to call in a “leak detection specialist.”</p>
<p>One of my favorite things about life is learning about new things that are jobs. When I pictured in my mind’s eye what such a specialist would look like, I pictured some grizzled old dude named Walter with a ZZ Top beard and multiple tattoos of a burly sailor strangling a pipe.</p>
<p>The specialist who showed up was a baby-faced dude named DJ with spiked-up bleached hair who couldn’t have been much older than 20 and didn’t have even a single tattoo of a burly sailor strangling a pipe.</p>
<p>I was skeptical, put it that way.</p>
<p>After an hour of DJ sending little snake cameras down pipes and (I imagine) trotting up and down the yard with a divining rod, he pointed to a spot and said, “I think it’s here.”</p>
<p>If you drew a straight line from the municipal water connection at the street to the point where the mater main came into our house, DJ was pointing at a spot 15 feet away from there. For the water main to even be where he was pointing, someone would have had to laid the pipe like they were playing the closing seconds of <a href="https://www.google.com/search?q=snake+game&amp;tbm=isch&amp;source=hp&amp;biw=1472&amp;bih=819&amp;ei=q-xFZP_KHuOvqtsPq72vsAw&amp;iflsig=AOEireoAAAAAZEX6u0NKiCF8dKTM0tB9b3uzP-c9DMWM&amp;ved=0ahUKEwi_zK-0v8H-AhXjl2oFHaveC8YQ4dUDCAY&amp;uact=5&amp;oq=snake+game&amp;gs_lcp=CgNpbWcQA1AAWABgAGgAcAB4AIABAIgBAJIBAJgBAKoBC2d3cy13aXotaW1n&amp;sclient=img">a game of Snake</a>, maliciously. The days of me being skeptical of DJ were coming to a middle.</p>
<p>“You <em>think</em> it’s there?”</p>
<p>“I can’t get a good look with my cameras, but I have a feeling it’s right here.”</p>
<p>“A <em>feeling</em>?”</p>
<p>“Look, my man, I’ve found a lot of leaks in my time…”</p>
<p>(I’m certain at this point my eyebrows went up with such violence that they flew off of my face and slipped the surly bonds of earth.)</p>
<p>“…so I’ve got a good sense that it’s here.”</p>
<p>With no one else to turn to, I had to accept DJ’s hunch and bring the plumbers back in the next day.</p>
<p>The crew started digging, and in under 5 minutes reported that they had found where the main line had broken and was dumping out water. It was <em>exactly</em> where DJ thought it would be.</p>
<p>So shame on me for not trusting DJ.</p>
<p>All told it cost a couple of hundred bucks for the plumbers’ and DJ’s time. It could have been so much worse! The plumbers might have had to tear up the whole yard, and there’s always the chance that the leak wouldn’t have even been there! I was very fortunate that (a) DJ was right and (b) the water company let me know about even the possibility of a leak so quickly. There was <em>zero</em> visible indication that anything was wrong; that pipe would have happily barfed out thousands of gallons of water for a loooooong time.</p>
<h2 id="the-water-heater"><a href="https://www.leereamsnyder.com/#the-water-heater" class="header-anchor"><span>The water heater</span></a></h2><p>Earlier this year, we hired some contractors to build us a new deck in our backyard. Because they were demolishing the old deck, I had to clear all of my crap off it a few days in advance.</p>
<p>The most convenient place to shove all my deck crap was our crawlspace, so that’s where everything went.</p>
<p>In the course of hastily shoving my patio heater into a corner of the crawlspace, I glanced over at our water heater and noticed that it was looking a lot more… orange than expected.</p>
<p>The reason it was orange was because it had sprung a small leak on top of the tank and rust-filled water was oozing all over it.</p>
<p>Cue another unexpected expense, but once again I just happened to notice the problem fairly early. I don’t go in the crawlspace often, so the leaking water could have eaten away at the foundation or the heater could have gone fully kaput at a very innoportune moment and required (much more expensive) emergency plumbing and electrical work. It could have been a lot worse.</p>
<h2 id="you-said-you-were-building-to-a-point"><a href="https://www.leereamsnyder.com/#you-said-you-were-building-to-a-point" class="header-anchor"><span>You said you were building to a point?</span></a></h2><p>I bring up this all up because a few months ago I read <a href="https://pudding.cool/2022/12/yard-sale/">this delightful visual essay from <em>The Pudding</em></a> that illustrates how it’s somewhat inevitable that a capitalistic society will end up with a handful of super-rich folks.</p>
<p>Think of an economy like a game where everyone in a room starts with $1,000. Every round of the game you pair up with someone and you wager up to 20% of your pot. If one of you has less money than the other, the smaller pot determines the size of the wager. Then you flip a coin and call it. If you call it correctly, you get the wagered amount. That’s it. Repeat until you’re out of money or you have all the money.</p>
<p>Let’s say in the first round, you wager $200 and lose. Now you have $800. The next round, you win! Yay! You’ve won one, lost one, you should be even, right?</p>
<p><em>Wrong!</em></p>
<p>Because in the second round, you could only wager up to 20% of your pot, your wager that round was $160. So after losing $200 in the first round and gaining $160 back in the next, you’re at $960 now.</p>
<p>On the other hand, your opponent&#8202;—&#8202;despite having won and lost an equal number of rounds&#8202;—&#8202;is ahead of where they started and doing better than you now.</p>
<p>Do that a couple of thousand times and eventually one or two or three people have all the money, and everyone else is broke.</p>
<p>Do <a href="https://pudding.cool/2022/12/yard-sale/">go read the article</a>; it explains all this with fun little cartoons and charts.</p>
<p>As the article points out, this so-called “Yard Sale” model is an extremely simplified version of an economy and wealth distribution, but it’s a helpful model for explaining how:</p>
<ol>
<li>There’s gonna be a few extremely rich people and way more not-rich people</li>
<li>They won’t admit it, but the rich people got rich almost purely out of luck&#8202;—&#8202;this wasn’t a game of skill!</li>
</ol>
<p>Now maybe that doesn’t square with your worldview or whatever.</p>
<p>But look at me: if any or all of my plumbing fiascos had gone another way, I’d be out probably many more thousands of dollars.</p>
<p>I’m not like uber wealthy and it’s entirely likely I’ll blow these “windfalls” on avocado toast (it’s tasty!) or digital cameras instead of whatever filthy rich people do like building skyscrapers or buying sapphire mines or ruining social media platforms.</p>
<p>But “wins” like this do add up! And I didn’t do anything special to earn them! I just happened to catch my plumbing issues early out of pure dumb luck! Or in the case of the main line break, systems were in place to let me know about a problem early, and I luckily hired DJ The Human Water Leak Detector.</p>
<p>Just something to think about.</p>
<p>Also, because I have now documented my “hot streak” of plumbing disasters I am fully expecting the gods of plumbing mischief to strike me down now.</p>
<p>I didn’t want to take a shower tonight anyway.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[ChatGPT can’t write code (…yet?)]]></title>
            <link>https://skventures.substack.com/p/societys-technical-debt-and-softwares</link>
            <guid>https://www.leereamsnyder.com/chatgpt-and-i-are-python-experts-now</guid>
            <pubDate>Sun, 02 Apr 2023 16:00:00 GMT</pubDate>
            <description><![CDATA[Someone is wrong on the internet]]></description>
            <content:encoded><![CDATA[<p>I’ve seen <a href="https://skventures.substack.com/p/societys-technical-debt-and-softwares">this article/newsletter/whitepaper(?) titled “Society’s Technical Debt and Software’s Gutenberg Moment”</a> from SK Ventures all over the place this past week. In it, the authors Paul Kedrosky &amp; Eric Norlin argue that either now or very soon, Large Language Model (LLM) chatbots like ChatGPT will allow anyone to easily write software, and accordingly the cost of writing software will fall, like, a ton.</p>
<p>Because I am a software developer, I am watching these developments with interest. Right now I am currently unsure about how much I, personally, should be worried about chatbots <a href="https://southpark.fandom.com/wiki/%22They_took_our_jobs!%22">takin my jerbs</a>.</p>
<p>However, I can safely say that after reading this article, <strong>I’m not any more worried now than I was a little bit ago</strong>.</p>
<p>The evidence these guys offer that ChatGPT or whatever is going to change, as they put it, “the very idea of what it means to manipulate the symbols that constitute a programming language”, is this:</p>
<blockquote>
<p>Rather than having to learn Python to parse some text and remove ASCII emojis, for example, one could literally write the following ChatGPT prompt:</p>
<p><code>Write some Python code that will open a text file and get rid of all the emojis, except for one I like, and then save it again.</code></p>
<p>In case you’re thinking, “there’s no way that works,” you’re wrong. It works fine, took two seconds, and is just a glimpse of how previously inaccessible deftness at writing code is now available to anyone:</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/sk-ventures-chatgpt-python-1.png" loading="lazy" width="818" height="658" alt="Screen capture of a ChatGPT session with the prompt “Python code to load the file toomanyemojis.txt and remove all the ascii emojis except the one for shrugs and then save it again” and ChatGPT’s response, which I will reproduce below" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/sk-ventures-chatgpt-python-1.png 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/sk-ventures-chatgpt-python-1.png 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/sk-ventures-chatgpt-python-1.png 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/sk-ventures-chatgpt-python-1.png 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/818/q/60/images/blog/sk-ventures-chatgpt-python-1.png 818w" sizes="(max-width: 32em) 96vw, 30em"></p>
</blockquote>
<p>That <em>does sound</em> impressive! But it also sounds like bullshit presented confidently, which is about to become a theme here.</p>
<p>From the screenshot above, here’s the Python script that ChatGPT spat out:</p>
<pre><code class="language-python"><span class="hljs-comment"># Open the file and read its content</span>
<span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;toomanyemojis.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:
  content = f.read()

<span class="hljs-comment"># Define a list of emojis to keep</span>
keep_emojis = [<span class="hljs-string">&#x27;¯\_(ツ)_/¯&#x27;</span>]

<span class="hljs-comment"># Remove all ASCII emojis except the ones to keep</span>
<span class="hljs-keyword">for</span> emoji <span class="hljs-keyword">in</span> content:
  <span class="hljs-keyword">if</span> emoji.encode(<span class="hljs-string">&#x27;ascii&#x27;</span>, <span class="hljs-string">&#x27;ignore&#x27;</span>).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> keep_emojis:
    content = content.replace(emoji, <span class="hljs-string">&#x27;&#x27;</span>)

<span class="hljs-comment"># Save the modified content back to the file</span>
<span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;toomanyemojis.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:
  f.write(content)
</code></pre>
<p>Quick digression about me: while I have been programming for over 15 years, I am not a Python expert. I did a tutorial once.</p>
<p>That said, <strong>this code does not work</strong>.</p>
<p>They asked ChatGPT to “write some Python code that will open a text file and get rid of all the emojis, except for one I like, and then save it again” and ChatGPT gave them a script that will <strong>turn your text file&#8202;—&#8202;no matter the contents&#8202;—&#8202;into an empty text file</strong>.</p>
<p>I’ll explain.</p>
<p>First up, opening the file:</p>
<pre><code class="language-python"><span class="hljs-comment"># Open the file and read its content</span>
<span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;toomanyemojis.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:
  content = f.read()
</code></pre>
<p>This looks ok, but my spidey-sense (haha because I detect possible bugs like a spider haha) is already concerned that this will only work if the file <code>toomanyemojis.txt</code> is in the same directory where you’re running the script. If that file is not in the current directory, it won’t work. But, like, whatever. File systems are hard.</p>
<p>Next up:</p>
<pre><code class="language-python"><span class="hljs-comment"># Define a list of emojis to keep</span>
keep_emojis = [<span class="hljs-string">&#x27;¯\_(ツ)_/¯&#x27;</span>]
</code></pre>
<p>This does define a list; however, ChatGPT or the authors or both do not seem to make or even understand a distinction between <span class="sc">ASCII</span> art or emojis.</p>
<p>The authors prompted “all ascii emojis except the one for shrugs”, and ChatGPT seems to interpret that as meaning the <span class="sc">ASCII</span> art shrug <code>¯\_(ツ)_/¯</code> instead of <a href="https://emojipedia.org/person-shrugging/">the “person shrugging&quot; emoji</a>, which is <em>maybe</em> what the authors meant? 🤷</p>
<p>You could call that semantic nitpicking; I’ve seen lots of people refer to <span class="sc">ASCII</span> art or emoticons or whatever “using text-y characters not literally” as emoji.</p>
<p>But (spoiler alert!) <strong>a lack of clarity in programming has consequences</strong>.</p>
<p>Anyway, the code up to this point has been a mere apéritif stimulating the palette before things get real bonkers:</p>
<pre><code class="language-python"><span class="hljs-comment"># Remove all ASCII emojis except the ones to keep</span>
<span class="hljs-keyword">for</span> emoji <span class="hljs-keyword">in</span> content:
  <span class="hljs-keyword">if</span> emoji.encode(<span class="hljs-string">&#x27;ascii&#x27;</span>, <span class="hljs-string">&#x27;ignore&#x27;</span>).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> keep_emojis:
    content = content.replace(emoji, <span class="hljs-string">&#x27;&#x27;</span>)
</code></pre>
<p>So in this <code>for</code> loop we’re going through every single character in the file, one-by-one.</p>
<p>Then in the next line with the <code>if</code> statement we’re… well, let’s split that apart a bit.</p>
<p>First, with <code>emoji.encode('ascii', 'ignore').decode('utf-8')</code> we’re effectively removing all non-<span class="sc">ASCII</span> characters. We’re going to come back to this later, but for the moment let’s rewrite this a bit and put that into its own variable:</p>
<pre><code class="language-python"><span class="hljs-keyword">for</span> character <span class="hljs-keyword">in</span> content:
  ascii_character = character.encode(<span class="hljs-string">&#x27;ascii&#x27;</span>, <span class="hljs-string">&#x27;ignore&#x27;</span>).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)
  <span class="hljs-keyword">if</span> ascii_character <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> keep_emojis:
    content = content.replace(emoji, <span class="hljs-string">&#x27;&#x27;</span>)
</code></pre>
<p>The “this will never work” part is <code>if ascii_character not in keep_emojis</code>.</p>
<p>After we’ve removed all non-<span class="sc">ASCII</span> characters from our single character, we now check if it is <em>not</em> in the <code>keep_emojis</code> list.</p>
<p>As a reminder, <code>keep_emojis</code> is a list that contains a single nine-character string that looks like a shrug:</p>
<pre><code class="language-python">keep_emojis = [<span class="hljs-string">&#x27;¯\_(ツ)_/¯&#x27;</span>]
</code></pre>
<p>A quick lesson because I just had to verify it myself: <code>x in y</code> in Python checks if the right-hand item is present in the left-hand collection. <code>x not in y</code> is the opposite: the right-hand item is not present in the left-hand collection. Some examples:</p>
<pre><code class="language-python"><span class="hljs-comment"># strings</span>
<span class="hljs-string">&#x27;a&#x27;</span> <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;abc&#x27;</span> <span class="hljs-comment"># true</span>
<span class="hljs-string">&#x27;z&#x27;</span> <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;abc&#x27;</span> <span class="hljs-comment"># false</span>
<span class="hljs-string">&#x27;z&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;abc&#x27;</span> <span class="hljs-comment"># true</span>
<span class="hljs-string">&#x27;/&#x27;</span> <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;¯\_(ツ)_/¯&#x27;</span> <span class="hljs-comment"># true</span>

<span class="hljs-comment"># lists</span>
<span class="hljs-number">1</span> <span class="hljs-keyword">in</span> [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>] <span class="hljs-comment"># true</span>
<span class="hljs-number">1</span> <span class="hljs-keyword">in</span> [<span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>] <span class="hljs-comment"># false</span>
<span class="hljs-number">1</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> [<span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>] <span class="hljs-comment"># true</span>

<span class="hljs-comment"># lists of strings; pay attention!</span>
<span class="hljs-string">&#x27;my&#x27;</span> <span class="hljs-keyword">in</span> [<span class="hljs-string">&#x27;my&#x27;</span>, <span class="hljs-string">&#x27;cute&#x27;</span>, <span class="hljs-string">&#x27;dog&#x27;</span>] <span class="hljs-comment"># true</span>
<span class="hljs-string">&#x27;m&#x27;</span> <span class="hljs-keyword">in</span> [<span class="hljs-string">&#x27;my&#x27;</span>, <span class="hljs-string">&#x27;cute&#x27;</span>, <span class="hljs-string">&#x27;dog&#x27;</span>] <span class="hljs-comment"># false!</span>
<span class="hljs-string">&#x27;m&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> [<span class="hljs-string">&#x27;my&#x27;</span>, <span class="hljs-string">&#x27;cute&#x27;</span>, <span class="hljs-string">&#x27;dog&#x27;</span>] <span class="hljs-comment"># true!</span>
</code></pre>
<p>Are you seeing the problem yet?</p>
<p>Let me try that conditional statement as a sentence: &quot;if this single <span class="sc">ASCII</span> character is not in the list that contains the multi-character string <code>¯\_(ツ)_/¯</code>, do the following…&quot;.</p>
<p>Put another way: &quot;if <strong>a single character</strong> is not any of these <strong>specific multi-character</strong> strings, do the following…&quot;.</p>
<p>Well, that’s… always true!</p>
<p>Again, not a Python expert here, but I’ll rewrite that line back into code:</p>
<pre><code class="language-python">  <span class="hljs-keyword">if</span> true:
</code></pre>
<p>That’s unnecessary, so this whole loop is…</p>
<pre><code class="language-python"><span class="hljs-keyword">for</span> character <span class="hljs-keyword">in</span> content:
  content = content.replace(character, <span class="hljs-string">&#x27;&#x27;</span>)
</code></pre>
<p>…turning every character in the file into an empty string one-by-one, and finally write it all back to the same file…</p>
<pre><code class="language-python"><span class="hljs-comment"># Save the modified content back to the file</span>
<span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;toomanyemojis.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:
  f.write(content)
</code></pre>
<p>…resulting in a blank file, no matter what was originally in the file! 🎉🥳🎊</p>
<p>(You saved a separate copy of that file that ChatGPT just helped you erase, right?)</p>
<p>So, yeah, this doesn’t work.</p>
<p>Let’s circle back to that encoding/decoding part.</p>
<p>The authors <em>actually asked ChatGPT to explain this</em> and called it “damn clever”:</p>
<blockquote>
<p>Say you weren’t sure why this works, or were skeptical that it would work, and thought maybe the AI was bluffing. You could ask it to explain itself, as shown here:</p>
<p><img src="https://www.leereamsnyder.com/auto-optimized-image/images/blog/sk-ventures-chatgpt-python-2.png" loading="lazy" width="786" height="351" alt="Screen capture of a ChatGPT session with the prompt “how does the above code know some characters are an emoji?” and ChatGPT’s response, “In the above code, the assumption is made that any ASCII character that cannot be encoded using UTF-8 is an emoji. This is because most emojis are not part of the ASCII character set, so they cannot be represented directly as ASCII characters. When we call the 'encode() method on a string with the "ascit" encoding and the •'ignore' error handling option, any characters that cannot be represented in ASCII are simply removed from the string”" srcset="https://www.leereamsnyder.com/resized-n-optimized-image/w/256/q/60/images/blog/sk-ventures-chatgpt-python-2.png 256w, https://www.leereamsnyder.com/resized-n-optimized-image/w/320/q/60/images/blog/sk-ventures-chatgpt-python-2.png 320w, https://www.leereamsnyder.com/resized-n-optimized-image/w/512/q/60/images/blog/sk-ventures-chatgpt-python-2.png 512w, https://www.leereamsnyder.com/resized-n-optimized-image/w/640/q/60/images/blog/sk-ventures-chatgpt-python-2.png 640w, https://www.leereamsnyder.com/resized-n-optimized-image/w/786/q/60/images/blog/sk-ventures-chatgpt-python-2.png 786w" sizes="(max-width: 32em) 96vw, 30em"></p>
<p>In short, the LLM used a neat hack. Instead of working through an exhaustive list of all ASCII emojis and seeing if they’re present, it elected to use character encodings to differentiate emojis from non-. That is damn clever, and that you can ask the LLM to explain how it did something&#8202;—&#8202;that there is a self-referential explanatory power&#8202;—&#8202;is another reason why this changes the software game.</p>
</blockquote>
<p>The statement <code>emoji.encode('ascii', 'ignore').decode('utf-8')</code> does do what ChatGPT says it does. If any character in that string is outside of the <a href="https://en.wikipedia.org/wiki/ASCII">more-limited <span class="sc">ASCII</span> set</a>, it’ll be removed. Most emoji characters are not <span class="sc">ASCII</span> characters.</p>
<p>We’ll put aside if “clever” code is a good thing (<a href="https://guifroes.com/clever-code-is-bad/">it is not</a>), but that <em>is</em> a clever way to remove most emojis from a string.</p>
<p>However, “remove emojis” wasn’t the goal, was it? And if you’re <em>actually looking for emoji</em>, it doesn’t seem correct to remove them all first.</p>
<p>And, believe me, I have about a thousand more words in me about how that <code>¯\_(ツ)_/¯</code> <span class="sc">ASCII</span> art is <em>technically</em> a mix of <span class="sc">ASCII</span> and non-<span class="sc">ASCII</span> characters and most <span class="sc">ASCII</span> art is multiple characters and many emoji <a href="https://www.fluentpython.com/extra/multi-character-emojis/">are often actually multiple combined characters masquerading as a single character</a> so looking through a file a single character at a time is doomed to fail, but all that doesn’t matter.</p>
<p>What does matter is the authors assumed that this code works (it doesn’t), asked ChatGPT how it works (it doesn’t) and ChatGPT responded with some confident bullshit about character encodings that sounds technical and programmer-y but doesn’t actually have much bearing on how it works (it doesn’t), and the authors bought it. Yadda yadda yadda anyone can code!</p>
<p><img src="https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNjQxMzIyZGM3YTE4NzUyMGZhMjgzYjM0YjNiOWQ4NmY5NDMwMDI4MiZjdD1n/iUDBOBjNi7U5KI52OO/giphy.gif" alt="Are we having fun yet?"></p>
<p>So when the authors said</p>
<blockquote>
<p>In case you’re thinking, “there’s no way that works,” you’re wrong.</p>
</blockquote>
<p>that was, um, also wrong.</p>
<p>If I was being charitable, I’d say the authors are over-excited about these chatbots, tried to use one to prove a point, and didn’t check their work. Like even a little bit.</p>
<p>If I was being less charitable, I’d say the authors appear to believe anything a chatbot tells them. Which is mildly terrifying.</p>
<p>I mean, look: these chatbot doohickeys are going to get better. I can see <a href="https://kottke.org/23/03/chatgpt-made-me-cry">a compelling case for working with one as a springboard or co-pilot</a> of sorts, where you let it handle the boilerplate and trawl the internet for answers for you, and then you work together to refine the results. But I wouldn’t blindly trust one with a coding task today.</p>
<p>And in the meantime, watch out for confident bullshit from both your LLM chatbots and the people hyping them.</p>
<p>But what do I know? I’m just an expensive, inefficient software developer.</p>
<p><code>¯\_(ツ)_/¯</code></p>
<p>(And, yes, I am aware of <a href="https://en.wikipedia.org/wiki/Brandolini%27s_law">Brandolini’s law</a>, thank you.)</p>
]]></content:encoded>
        </item>
    </channel>
</rss>