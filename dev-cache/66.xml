<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-US">
  <title>Dan McKinley</title>
  <link href="https://mcfunley.com/" rel="alternate" type="text/html" hreflang="en-US" />
  <id>urn:uuid:0f5320a2-eb2c-2b09-f70e-ca9845402e07</id>
  <icon>https://mcfunley.com/assets/images/favicon.png</icon>
  <logo>https://mcfunley.com/assets/images/favicon.png</logo>
  <updated>2024-10-30T21:35:48+00:00</updated>
  <link href="https://mcfunley.com/feed.xml" rel="self" type="application/atom+xml" />

  
  <entry>
    <title type="html">I Tried to use AI to Read an AI Book</title>
    <link href="https://mcfunley.com/i-tried-to-use-ai-to-read-an-ai-book" rel="alternate" type="text/html" title="I Tried to use AI to Read an AI Book" />
    <published>2024-06-09T00:00:00+00:00</published>
    <updated>2024-06-09T00:00:00+00:00</updated>
    
    <id>urn:uuid:57CF0F29-3044-4481-8C5D-7C83A3A050C2</id>
    <content type="html" xml:base="https://mcfunley.com/i-tried-to-use-ai-to-read-an-ai-book">
	  &lt;p&gt;I recently read &lt;a href=&quot;https://www.vromansbookstore.com/book/9780593716717&quot;&gt;&lt;em&gt;Co-Intelligence&lt;/em&gt; by Ethan Mollick&lt;/a&gt;. It was good! You should read it. I want to say this up front, since after some preamble I’m going to describe a Rube-Goldbergian attempt to poke petty holes in it. I don’t want the reader to lose sight of the big picture, which is that I was trying to do this &lt;em&gt;in the spirit of the book.&lt;/em&gt; Which again, is pretty good.&lt;/p&gt;

&lt;h5 id=&quot;the-zeitgeist-is-a-polterin&quot;&gt;The Zeitgeist is a-Polterin’&lt;/h5&gt;
&lt;p&gt;How are we going to know what’s true? How are we going to find information, now? It’s been on my mind lately, as it’s been on everyone else’s mind. The web has been thrown into chaos. As of right now if you ask Google &lt;a href=&quot;https://www.google.com/search?q=is+there+a+country+in+africa+that+starts+with+k&amp;amp;rlz=1C5CHFA_enUS1097US1099&amp;amp;oq=is+there+a+country+in+af&amp;amp;gs_lcrp=EgZjaHJvbWUqDAgAEAAYFBiHAhiABDIMCAAQABgUGIcCGIAEMgcIARAAGIAEMgYIAhBFGDkyBwgDEAAYgAQyBwgEEAAYgAQyBwgFEAAYgAQyBwgGEAAYgAQyBggHEEUYPKgCALACAQ&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&quot;&gt;if there’s a country in Africa that starts with “k,”&lt;/a&gt; you get a confident “no” that cites one post or another lampooning the entire debacle.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/close-reading/k-countries.webp&quot; alt=&quot;Google erroneously asserting that no countries in Africa start with the letter K&quot; /&gt;
  &lt;figcaption&gt;Web publications are presumably competing for the dregs of display ad revenue by seeing who can roast Google for this the hardest. Which (objectively) rules.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Google isn’t shooting itself in the face right before our eyes because they all think these results are good. (I bet the internal conversations are &lt;em&gt;hilarious.&lt;/em&gt;) They’re shooting themselves in the face because they’re in a desperate steel cage match with the &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Innovator%27s_Dilemma&quot;&gt;Innovator’s Dilemma&lt;/a&gt;. Our relationship with information retrieval seems like it’s changing, and this will affect Google. But as a participant in this shitshow they are constrained to seek the set of different equilibria that still more or less resemble web search. When they fuck up, they are fairly scrutinized in ways that their competitors are not. They have to transmogrify the golden goose into &lt;a href=&quot;https://www.reddit.com/r/TheSimpsons/comments/kpsnb9/grand_funk_railroad_paved_the_way_for_jefferson/&quot;&gt;some sort of hovercraft&lt;/a&gt;, which is a significantly harder task than simply killing it.&lt;/p&gt;

&lt;p&gt;LLM’s are now training on their own hallucinated content in a doom loop, and media companies are too busy dying &lt;a name=&quot;ref1&quot; href=&quot;#f1&quot; class=&quot;footnote&quot;&gt;[1]&lt;/a&gt; to be plausible as a solution to this. I don’t know what to say about Twitter except “good luck.” You’d be forgiven for hoping for the &lt;a href=&quot;https://www.youtube.com/watch?v=2twY8YQYDBE&quot;&gt;Nothing but Flowers&lt;/a&gt; scenario, in which we all collectively and abruptly decide to go back to the land.&lt;/p&gt;

&lt;p&gt;But despite all of this I am not an LLM detractor. Whereas the entire web3 era came and went without ever coalescing into a legible concept of any kind, LLM’s are very much a non-fake technology. We haven’t figured out the right way to hold them, yet, but that’s no reason to just give up and walk into the sea.&lt;/p&gt;

&lt;h5 id=&quot;idk-lets-all-read-books-instead&quot;&gt;Idk, Let’s All Read Books Instead?&lt;/h5&gt;
&lt;p&gt;When I’m really chewing on something I read books about it, and I recommend the practice. I do not recommend it as a solution to everything, as &lt;a href=&quot;https://www.404media.co/ai-generated-kara-swisher-biographies-flood-amazon/&quot;&gt;books are not necessarily written by humans&lt;/a&gt; and even when they are &lt;a href=&quot;https://www.youtube.com/watch?v=biYciU1uiUw&quot;&gt;they are not necessarily using their whole ass to do it&lt;/a&gt;. But as a way to let ideas really stretch out in your mind and stink up the place, I don’t have a better way. So again, I read &lt;em&gt;Co-Intelligence&lt;/em&gt;. And again, it was pretty good.&lt;/p&gt;

&lt;p&gt;Inspiration struck right on schedule when my friend &lt;a href=&quot;https://gigamonkeys.com/&quot;&gt;Peter Seibel&lt;/a&gt; also read &lt;em&gt;Co-Intelligence&lt;/em&gt;. Peter noticed a claim about 3/4 of the way through:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;
    [R]epeated studies found that differences between the programmers in the top 75th percentile and those in the bottom 25th percentile can be as much as 27 times along some dimensions of programming quality... [b]ut AI may change all that.
    &lt;a href=&quot;#f2&quot; class=&quot;footnote&quot; name=&quot;ref2&quot;&gt;[2]&lt;/a&gt;
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Peter is a &lt;a href=&quot;https://gigamonkeys.com/book/&quot;&gt;programming book author&lt;/a&gt;, and tech industry veteran turned high school CS teacher. You could say he’s dedicated himself to spreading the craft, and so this claim is something of a pet issue of his.&lt;/p&gt;

&lt;figure&gt;
  &lt;a href=&quot;https://twitter.com/peterseibel/status/512615519934230528&quot;&gt;
    &lt;img src=&quot;/assets/images/close-reading/peter-10x.webp&quot; alt=&quot;How to be a 10x programmer, per Peter Seibel: help ten other engineers be twice as good.&quot; /&gt;
  &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.glitch.com/post/the-10x-programmer-and-other-myths/&quot;&gt;Indeed the claim is a well-established industry trope at this point&lt;/a&gt;. It is widely considered to be thinly sourced at best, and entirely vibes at worst. It usually relies on scant evidence when it’s sourced at all. But in this case, it was sourced! In a paper we hadn’t heard of before! The specific citation was:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The gap between the programmers: L. Prechelt, “An Empirical Comparison of Seven Programming Languages,” IEEE Computer 33, no. 10 (2000): 23–29, &lt;a href=&quot;https://doi.org/10.1109/2.876288&quot;&gt;https://doi.org/10.1109/2.876288&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So I decided to dig in and see if the paper supported this &lt;a href=&quot;#f3&quot; class=&quot;footnote&quot; name=&quot;ref3&quot;&gt;[3]&lt;/a&gt;.&lt;/p&gt;

&lt;h5 id=&quot;no-the-cited-paper-does-not-support-the-existence-of-27x-programmers&quot;&gt;No, The Cited Paper does not Support the Existence of 27x Programmers&lt;/h5&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cs.tufts.edu/~nr/cs257/archive/lutz-prechelt/comparison.pdf&quot;&gt;Prechelt’s paper&lt;/a&gt; is a comparison of &lt;em&gt;programming languages&lt;/em&gt;, not &lt;em&gt;programmers&lt;/em&gt;. Its conclusion is closer to “C++ sucks” &lt;a name=&quot;ref4&quot; href=&quot;#f4&quot; class=&quot;footnote&quot;&gt;[4]&lt;/a&gt; than anything to do with programmer ability. There are two overlapping problems with using it here:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The paper acknowledges weaknesses in its samples, and other reasons we may be looking at biased results. (This is lovely to see.)&lt;/li&gt;
  &lt;li&gt;The paper is not trying to make any points about programmer capabilities.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hence the conclusions of the paper don’t really support the premise in that part of Mollick’s text.&lt;/p&gt;

&lt;h5 id=&quot;again-i-have-to-stress-that-co-intelligence-is-a-good-book&quot;&gt;Again, I Have to Stress that &lt;em&gt;Co-Intelligence&lt;/em&gt; is a &lt;em&gt;Good&lt;/em&gt; Book&lt;/h5&gt;
&lt;p&gt;&lt;em&gt;Co-Intelligence&lt;/em&gt; has sources that we are invited to check, and of course many books do not do this. Mollick is a serious person who is trying to do a good job, in good faith, and many are not. There’s nothing unusual about noticing a problem like this in a book. This is just what it’s like to read something that touches on topics that you happen to know a great deal about.&lt;/p&gt;

&lt;p&gt;Many of 2024’s gravest epistemological dangers arise when we read things that we &lt;em&gt;don’t&lt;/em&gt; know much about &lt;a name=&quot;ref5&quot; href=&quot;#f5&quot; class=&quot;footnote&quot;&gt;[5]&lt;/a&gt;. In those situations, we’re liable to reinforce our own biases or blithely accept the authority of the text. How can we do better?&lt;/p&gt;

&lt;p&gt;The answer is probably something like “critical thinking,” or “close reading.” We should be putting more thought into the sources of what we’re consuming. We should be questioning whether those sources support the conclusions drawn, and what problems they may have themselves. By doing so we can form a more nuanced interpretation of what we’re consuming.&lt;/p&gt;

&lt;p&gt;Of course, the downside is that this all takes a metric shit-ton of time.&lt;/p&gt;

&lt;h5 id=&quot;what-to-do-mechanize&quot;&gt;What to do? Mechanize!&lt;/h5&gt;
&lt;p&gt;It occurred to me at this point that perhaps I could use AI to augment my critical thinking skills. It occurred to me because this is the sort of thing the book was constantly encouraging me to do:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;
    Research has successfully demonstrated that it is possible to correctly determine the most promising directions in science by analyzing past papers with AI &lt;a name=&quot;ref6&quot; class=&quot;footnote&quot; href=&quot;#f6&quot;&gt;[6]&lt;/a&gt;
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What if AI could be an asset in skepticism about itself? Could AI be both the cause of &lt;em&gt;and solution to&lt;/em&gt; all of our filter bubble problems? I am not sure. Let’s find out!&lt;/p&gt;

&lt;p&gt;My first few naive attempts were to simply feed the LLM &lt;a name=&quot;ref7&quot; class=&quot;footnote&quot; href=&quot;#f7&quot;&gt;[7]&lt;/a&gt; some content by hand. I’d give it a PDF, a passage from the book, and the specific claim that was being supported by the citation. I’d ask it what it thought, either in general or as a two parter (&lt;em&gt;“How would you rate this paper? Do you think it provides good support for this claim in this text?”&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;The results of this were disappointing–the LLM universally responded with paragraphs amounting to &lt;em&gt;“yeah, lookin’ good hoss!”&lt;/em&gt; Being at least vaguely on top of &lt;a href=&quot;https://applied-llms.org/&quot;&gt;the conversations around using LLM’s in anger&lt;/a&gt;, I figured that the problem here was that I was asking it to do far too much at once.&lt;/p&gt;

&lt;h5 id=&quot;revising-the-approach&quot;&gt;Revising the Approach&lt;/h5&gt;
&lt;p&gt;After thinking about it a bit more, I realized that the goal should probably be about prioritization. This is also in line with Mollick’s advice:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;
    The closer we move to a world of Cyborgs and Centaurs in which the AI augments our work, the more we need to maintain and nurture human expertise. We need expert humans in the loop.
    &lt;a name=&quot;ref8&quot; href=&quot;#f8&quot; class=&quot;footnote&quot;&gt;[8]&lt;/a&gt;
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I am definitely not going to check the 90+ academic papers cited by this book, let alone the web pages and other books cited. And on the basis of its output so far, I am also not going to just trust the LLM to do that for me without help. Instead, the goal would be to use AI to get the drudgery of sifting through references out of my way. I decided that I’d try this instead:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I’ll ask the LLM to give each of the cited papers an overall trustworthiness score.&lt;/li&gt;
  &lt;li&gt;I’ll ask the LLM to rate how well each citation supports the claim in the text.&lt;/li&gt;
  &lt;li&gt;From those two scores, I’ll make a weighted list of things to dig into by hand, leveraging my own abilities better.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I spent a day day collecting the papers, and managed to find nearly all of them without having to pay a wall.&lt;/p&gt;

&lt;h5 id=&quot;scoring-papers&quot;&gt;Scoring Papers&lt;/h5&gt;
&lt;p&gt;My first attempt at scoring the papers was direct: I just fed the LLM the paper and asked it to rate its trustworthiness on a scale of one to ten. The LLM scored nearly every paper a 9 or a 10 out of 10. That’s perhaps unsurprising, since there are several sources of selection combining to bias the book towards citing papers that aren’t just total nonsense &lt;a href=&quot;#f9&quot; name=&quot;ref9&quot; class=&quot;footnote&quot;&gt;[9]&lt;/a&gt;. But unfortunately that’s useless as a means to differentiate. Asking the same question while providing a sample of other papers as a basis for comparison produced the same results &lt;a href=&quot;#f10&quot; name=&quot;ref10&quot; class=&quot;footnote&quot;&gt;[10]&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I switched to asking the LLM to stack rank a set of papers. I’d give it a paper with nine others, and ask it to give me the ranking of trustworthiness. At first this seemed to produce better results, meaning the LLM would relent and say, “ok, this paper is a four out of ten in this set.” But repeating this a few times showed that the rankings were unstable - the same paper would get a range of rankings between 1 and 10 that seemed quite broad.&lt;/p&gt;

&lt;p&gt;It occurred to me that the instability might average out in a useful way with repeated trials. If we ask the LLM to repeatedly stack rank a paper, it might occasionally rate it as an 8 but ultimately average it as a 3. Like so:&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/close-reading/simulated-convergence.webp&quot; alt=&quot;Simulating what would happen if LLM-provided paper scores eventually converged.&quot; /&gt;
  &lt;figcaption&gt;
    Simulating repeatedly scoring papers if it&apos;s the case that the LLM can differentiate them unreliably. In the ideal case the average scores (the center lines) will be different from each other and the standard errors (the shaded regions) should get tighter with repeated trials.
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;But after doing this 20 times for a set of referenced papers, in practice that didn’t work:&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/close-reading/convergence-attempt-1.webp&quot; alt=&quot;Graph showing that LLM paper rankings are random in practice&quot; /&gt;
  &lt;figcaption&gt;
    Asking the LLM to rank papers repeatedly results in every paper converging on a 5/10 with relatively wide distributions, i.e. the LLM&apos;s answers seem to be random.
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;I redid the process one more time by asking the LLM to focus on just critiques of the papers. That produced much more pessimism, but not in a way that would give me a principled smaller set of papers to scrutinize by hand:&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/close-reading/critique-convergence.webp&quot; alt=&quot;&quot; /&gt;
  &lt;figcaption&gt;
    Asking the LLM to focus on ranking critiques of papers results in very pessimistic scores, but doesn&apos;t differentiate them.
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;So progress seemed to stall out here. Having failed to find a way to give a paper a trustworthiness score that made any sense, it didn’t seem worthwhile to work out a way to rate the faithfulness of the citations to paper conclusions.&lt;/p&gt;

&lt;h5 id=&quot;what-did-we-learn&quot;&gt;What Did We Learn?&lt;/h5&gt;
&lt;p&gt;The premise here was that I could write some AI automation to help me walk away from an overall good work with a more nuanced view than I otherwise would have. Given the correlated nature of the attempt and the subject matter, that definitely worked! I have a more nuanced view of what someone could reasonably ask a current LLM to do now! But it is not clear that I achieved anything durable yet, beyond building a very inefficient shuffle algorithm that cost me $100 and ate a few days.&lt;/p&gt;

&lt;p&gt;I approached this with some classical ML system expertise, and therefore applied at least a little statistical thinking to what I did. I think in a lot of applications, folks just wouldn’t do this. The path of least resistance would be to ask the LLM for opinions, observe that it gives them, and plow forward.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/close-reading/nimoy.webp&quot; alt=&quot;Leonard Nimoy In Search of Spoof.&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;This could be good or bad! In purely creative scenarios it’s probably a win. But it’d be a convoluted way to reinforce confirmation bias in others, i.e., the exact opposite of what I was trying to accomplish.&lt;/p&gt;

&lt;p&gt;It seems like you could certainly use a current LLM to distinguish sources that are intrinsically terrible. But they aren’t particularly good at drawing out this kind of nuance right now, at least not in any straightforward way.&lt;/p&gt;

&lt;hr /&gt;

&lt;p class=&quot;acknowledgements&quot;&gt;
  Hi, thank you for reading. If you liked this you might like &lt;a href=&quot;/talks&quot;&gt;some of my talks&lt;/a&gt; such as the notable banger &lt;a href=&quot;https://boringtechnology.club/&quot;&gt;Choose Boring Technology&lt;/a&gt; or maybe some of my &lt;a href=&quot;/writing&quot;&gt;other writing&lt;/a&gt;. To old friends, I apologize for not writing in a while. I assure you I was embroiled in some really baroque psychodrama that seemed important at the time.
&lt;/p&gt;
&lt;p class=&quot;acknowledgements&quot;&gt;
  Thanks to Camille Fournier, Peter Seibel, Lonnen, Moishe Lettvin, et al for help with this!
&lt;/p&gt;

&lt;hr /&gt;

&lt;ol class=&quot;footnote-list&quot;&gt;
    &lt;li&gt;
      &lt;a name=&quot;f1&quot;&gt;&lt;/a&gt;
      &lt;p&gt;
        Here&apos;s where I thought I might link you to a great and relevant &lt;a href=&quot;https://searchengine.show&quot;&gt;Search Engine&lt;/a&gt; episode about the media apocalypse, except as far as I can tell we&apos;ve all decided to break the ability to link to podcast episodes. Case in point. Regardless, you should consider subscribing to &lt;a href=&quot;https://searchengine.show&quot;&gt;Search Engine&lt;/a&gt;.
        &lt;a href=&quot;#ref1&quot;&gt;&amp;#x21A5;&lt;/a&gt;
      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a name=&quot;f2&quot;&gt;&lt;/a&gt;
      &lt;p&gt;
        Ethan Mollick, &lt;i&gt;Co-Intelligence&lt;/i&gt; (New York: Penguin Random House, 2024), 156.
        &lt;a href=&quot;#ref2&quot;&gt;&amp;#x21A5;&lt;/a&gt;
      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a name=&quot;f3&quot;&gt;&lt;/a&gt;
      &lt;p&gt;
        Peter would like it to be noted that he reviewed the Prechelt paper himself, quickly concluded that it didn&apos;t support the book&apos;s claim, and moved on. The reader is encouraged to come to their own conclusions about our differing priority preferences and life choices.
        &lt;a href=&quot;#ref3&quot;&gt;&amp;#x21A5;&lt;/a&gt;
      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a name=&quot;f4&quot;&gt;&lt;/a&gt;
      &lt;p&gt;
        It&apos;s unclear if this &lt;i&gt;needs&lt;/i&gt; to be empirically proven, but it is correct. The paper does this:
      &lt;/p&gt;
      &lt;figure&gt;
        &lt;img src=&quot;/assets/images/close-reading/boxplot.webp&quot; alt=&quot;Box plot excerpted from L. Prechelt paper&quot; /&gt;
      &lt;/figure&gt;
      &lt;p&gt;
        Prechelt studies a big set of programs written in different languages. He contrives a &quot;bad to good ratio,&quot; which is the median of the slowest half of the programs divided by the median of the fastest half. The difference of &quot;27 times&quot; is the spread of outcomes within a language, which the book then conflates with programmer capability.
      &lt;/p&gt;
      &lt;p&gt;
        The paper talks a bit about how the programs in different languages are sourced from different places. The C++ programs are from CS master students, the Tcl programs are from open calls, etc. The paper discusses how there will be bias in the outcomes as the result of this.
        &lt;a href=&quot;#ref4&quot;&gt;&amp;#x21A5;&lt;/a&gt;
      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a name=&quot;f5&quot;&gt;&lt;/a&gt;
      &lt;p&gt;
        An example that&apos;s close to home for me is that some of my college friends (who also completed &lt;i&gt;an ivy league engineering program&lt;/i&gt;) are now moon landing deniers. This seems to be the result of choosing the Joe Rogan podcast as a source of information and identity.
      &lt;/p&gt;
      &lt;p&gt;
        I don&apos;t actually know since I won&apos;t listen to it, but as far as I can discern this podcast is a decades-long freefall into the bottomless abyss of nonsense that yawns beyond the boundaries of one&apos;s own expertise. &lt;a href=&quot;https://www.youtube.com/watch?v=lWAyfr3gxMA&quot;&gt;He had an actor on who thinks 1&amp;times;1=2&lt;/a&gt;, and apparently took it seriously. That may be an extreme example, but we&apos;d be mistaken to believe we&apos;re categorically immune from these kinds of errors just because we aren&apos;t megadosing shark cartilage and suffering head trauma regularly, or whatever.
      &lt;/p&gt;
      &lt;p&gt;
        Incidentally, do not contact me to discuss Joe Rogan.
        &lt;a href=&quot;#ref5&quot;&gt;&amp;#x21A5;&lt;/a&gt;
      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a name=&quot;f6&quot;&gt;&lt;/a&gt;
      &lt;p&gt;
        Mollick, 202. The &lt;a href=&quot;https://arxiv.org/abs/2210.00881&quot;&gt;paper he is citing&lt;/a&gt; in this case is not using a large language model, but is cool work regardless. They built their own semantic graph of research topics with more mundane extraction techniques, and then tried to predict future edges in it. They found that models with hand-crafted features outperformed unsupervised approaches, including a transformer model. And &quot;[s]urprisingly, using purely network theoretical features without machine learning works competitively.&quot; But, this was all in 2022.
        &lt;a href=&quot;#ref6&quot;&gt;&amp;#x21A5;&lt;/a&gt;
      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a name=&quot;f7&quot;&gt;&lt;/a&gt;
      &lt;p&gt;Everything in this writeup was done with GPT-4o. &lt;a href=&quot;#ref7&quot;&gt;&amp;#x21A5;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a name=&quot;f8&quot;&gt;&lt;/a&gt;
      &lt;p&gt;Mollick, 182. &lt;a href=&quot;#ref8&quot;&gt;&amp;#x21A5;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a name=&quot;f9&quot;&gt;&lt;/a&gt;
      &lt;p&gt;
        Indeed if you ask it to read &lt;a href=&quot;https://www.thelancet.com/action/showPdf?pii=S0140-6736%2897%2911096-0&quot;&gt;a very bad paper&lt;/a&gt;, it will rate its trustworthiness very low.
        &lt;a href=&quot;#ref9&quot;&gt;&amp;#x21A5;&lt;/a&gt;
      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a name=&quot;f10&quot;&gt;&lt;/a&gt;
      &lt;p&gt;
        Various attempts at excoriating the LLM to behave differently didn&apos;t get me anywhere either. &lt;i&gt;&quot;Your rankings overall should be normally distributed! Your mean ranking should be a five! Don&apos;t worry about your rankings getting back to the authors! Nobody is going to judge you for this!&quot;&lt;/i&gt;
        &lt;a href=&quot;#ref10&quot;&gt;&amp;#x21A5;&lt;/a&gt;
      &lt;/p&gt;
    &lt;/li&gt;
&lt;/ol&gt;

	</content>
    <author>
      <name>Dan McKinley</name>
      <uri>https://mcfunley.com/</uri>
    </author>
  </entry>
  
  <entry>
    <title type="html">Google Reader Killed RSS</title>
    <link href="https://mcfunley.com/google-reader-killed-rss" rel="alternate" type="text/html" title="Google Reader Killed RSS" />
    <published>2019-12-18T00:00:00+00:00</published>
    <updated>2019-12-18T00:00:00+00:00</updated>
    
    <id>urn:uuid:de2dac6b-5dc0-4097-86d7-466e1210b626</id>
    <content type="html" xml:base="https://mcfunley.com/google-reader-killed-rss">
	  &lt;p&gt;There were rumblings earlier this week that Alphabet executives mused
about &lt;a href=&quot;https://www.theinformation.com/articles/google-brass-set-2023-as-deadline-to-beat-amazon-microsoft-in-cloud&quot;&gt;killing GCP&lt;/a&gt;.
I think they probably won’t do it &lt;a href=&quot;#f1&quot; ref=&quot;#f1&quot; class=&quot;footnote&quot;&gt;[1]&lt;/a&gt;. But
as a side effect this has provoked yet another round
of &lt;a href=&quot;https://twitter.com/search?q=reader%20https%3A%2F%2Ftwitter.com%2Fkilledbygoogle%2Fstatus%2F1198773553039962112&amp;amp;src=typed_query&quot;&gt;everyone pouring one out&lt;/a&gt; for
the most beloved Google ex-feature ever, &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Reader&quot;&gt;Google Reader&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I miss the RSS world of the early 2000’s as much as anyone. I miss it almost
as much as I miss McCarren Pool having no water in it and new Spoon albums
sounding fresh. This is why I feel compelled to point out that those mourning
Google Reader are forgetting that it was actually responsible for ruining the
whole thing.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/homer-stands.jpg&quot; /&gt;
  &lt;figcaption class=&quot;text-center&quot;&gt;Computer, engage shitpost. Attack pattern &quot;digging up graves.&quot;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;It went like this: Google Reader killed RSS, &lt;em&gt;and then like a decade later&lt;/em&gt; Google
killed Google Reader. You’re having a funeral for the tame old fox that was
mysteriously living in your henhouse.&lt;/p&gt;

&lt;h5 id=&quot;a-bull-moose-stomping-around-the-primordial-tidepool&quot;&gt;A Bull Moose Stomping around the Primordial Tidepool&lt;/h5&gt;

&lt;p&gt;The existence of Google Reader wiped out a generation of attempts at building
hosted, social feed readers. I was working on one. We had maybe a thousand users,
so I’m not trying to overestimate the cardinality of the set of alternate universes in
which ours won. But the survival of any of them as independent actors became untenable
once Google Reader came out.&lt;/p&gt;

&lt;p&gt;Hosted feed aggregation was a relatively expensive product to attempt at the time.
There were no clouds yet, and bandwidth pricing on shared hosts was oppressive to
those of us just getting by on bootstrapped budgets. Everyone subscribed to less
than a hundred feeds, but it was fat-tailed and everyone chose a different set of
less than a hundred feeds. Your servers had to download a lot of stuff, and they had
to do it as often as you could afford.&lt;/p&gt;

&lt;p&gt;There was a significant amount of toil involved in maintaining the perception of quality,
because blogging software was a much more fragmented space then, and feeds of the era were a
&lt;em&gt;mess&lt;/em&gt;. Remember &lt;a href=&quot;https://en.wikipedia.org/wiki/Cute_Overload&quot;&gt;Cute Overload&lt;/a&gt;?
I do, mainly because it was a freaking frameset around a blogger site. This kind of
kluge was typical &lt;a ref=&quot;#f2&quot; href=&quot;#f2&quot; class=&quot;footnote&quot;&gt;[2]&lt;/a&gt;.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/cute-overload.jpg&quot; /&gt;
  &lt;figcaption class=&quot;text-center&quot;&gt;mfw we realized it was a freaking frameset&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;As long as Google Reader existed, the two available paths out of this were out of
reach. Anyone with money who believed in RSS as a consumer technology also believed
Google would dominate the space
&lt;a href=&quot;#f3&quot; class=&quot;footnote&quot;&gt;[3]&lt;/a&gt;.
The aura of infallability that Google possessed in this era before laughingstocks
like &lt;a href=&quot;https://twitter.com/adamlisagor/status/187596931638362114&quot;&gt;Glass&lt;/a&gt;,
&lt;a href=&quot;https://www.theverge.com/2019/4/2/18290637/google-plus-shutdown-consumer-personal-account-delete&quot;&gt;Google+&lt;/a&gt;,
&lt;a href=&quot;https://techcrunch.com/2009/11/26/why-google-wave-sucks/&quot;&gt;Wave&lt;/a&gt;, etc, is hard to relate.
Picture showing up for an audition and getting in line behind Denzel Washington.&lt;/p&gt;

&lt;p&gt;And of course you couldn’t charge a fee, because Google Reader was free.&lt;/p&gt;

&lt;h5 id=&quot;google-reader-not-impressive&quot;&gt;Google Reader: Not Impressive&lt;/h5&gt;

&lt;p&gt;This all would have been water under the bridge if Google had followed through
with making Reader what it deserved to be. But they did not. They kept it on
starvation rations for more than ten years.&lt;/p&gt;

&lt;p&gt;Reader’s social features, for example, were only slightly less catastrophically haphazard than Buzz.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/google-reader-notes.jpg&quot; /&gt;
  &lt;figcaption class=&quot;text-center&quot;&gt;What passed as the social features of Reader ca. 2008&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;For years and years it wasn’t even obvious how the friend list worked, &lt;em&gt;at all&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote class=&quot;quotation&quot;&gt;
  If you check the associated help page, it turns out that to remove someone, you have
  to remove them as a Gmail/Google Talk contact. Wow.
  &lt;p class=&quot;attribution&quot;&gt;
    &lt;a href=&quot;https://searchengineland.com/google-reader-gets-social-with-friends-shared-items-12949&quot;&gt;Search Engine Land, 2007&lt;/a&gt;
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Despite this, people out there lament the loss of the communities they’d built on
Reader. It’s frankly incredible that anyone managed this with tools this bad.
It validates that there was something there, something that could have been more
than what we got.&lt;/p&gt;

&lt;h5 id=&quot;hello-from-a-smoking-crater-inside-the-kill-zone&quot;&gt;Hello from a Smoking Crater Inside the Kill Zone&lt;/h5&gt;

&lt;p&gt;Google Reader reigned for so long that people towards the end of its run weren’t
wistful for a return to the old ways. They were wistful for the thing that
wrecked the old ways. The old ways were a world not even remembered.&lt;/p&gt;

&lt;p&gt;Allowing Reader to exist, but not attempting to make it something that could
achieve broader adoption–or even just be great inside its niche–was sufficient
to doom the medium. Reader was a worse product than Twitter by the time Twitter
came around. I don’t think it needed to be that way.&lt;/p&gt;

&lt;ol class=&quot;footnote-list&quot;&gt;
  &lt;li&gt;
    &lt;a name=&quot;f1&quot;&gt;&lt;/a&gt;
    I will say that if killing beloved products is your bag, then building a
    cloud platform is the smartest strategy because it allows you to shut down
    products you &lt;em&gt;don&apos;t even own&lt;/em&gt;. What legends!
  &lt;/li&gt;
  &lt;li&gt;&lt;a name=&quot;f2&quot;&gt;&lt;/a&gt;&lt;em&gt;The Daily Kluge&lt;/em&gt;, though, ran a tight ship.&lt;/li&gt;
  &lt;li&gt;
    &lt;a name=&quot;f3&quot;&gt;&lt;/a&gt;
    This was not wrong at all, but it played out differently than RSS fans expected.
    Some folks just didn&apos;t believe RSS would work at all, which I think is
    somewhat discredited now with the resurgence of podcasts.
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p class=&quot;acknowledgements&quot;&gt;
  Thanks to &lt;a href=&quot;https://programmingisterrible.com/&quot;&gt;tef&lt;/a&gt;,
  &lt;a href=&quot;https://twitter.com/lxt&quot;&gt;Laura Thomson&lt;/a&gt;, and
  &lt;a href=&quot;https://www.moishelettvin.com/&quot;&gt;Moishe&lt;/a&gt;.
&lt;/p&gt;

	</content>
    <author>
      <name>Dan McKinley</name>
      <uri>https://mcfunley.com/</uri>
    </author>
  </entry>
  
  <entry>
    <title type="html">Some Recent Work</title>
    <link href="https://mcfunley.com/some-recent-work" rel="alternate" type="text/html" title="Some Recent Work" />
    <published>2017-05-08T00:00:00+00:00</published>
    <updated>2017-05-08T00:00:00+00:00</updated>
    
    <id>urn:uuid:6d6cb15a-f879-141b-247f-b7971b5bd79f</id>
    <content type="html" xml:base="https://mcfunley.com/some-recent-work">
	  &lt;p&gt;Here are some links to recent work I’ve done elsewhere.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/ship-small-diffs&quot;&gt;Ship Small Diffs&lt;/a&gt; - I tried to transmute the anguish I feel looking at huge changesets into words.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hackernoon.com/mistakes-you-apparently-just-have-to-make-yourself-cc2dd2bfc25c&quot;&gt;Mistakes You Apparently Just Have to Make Yourself&lt;/a&gt; - Getting youngfolk to listen to you is harder than I realized.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/fourteen-months-with-clojure&quot;&gt;Fourteen Months with Clojure&lt;/a&gt; - Going back to my Lisp roots here.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://pushtrain.club/&quot;&gt;The Push Train&lt;/a&gt; - Trying to frantically document some of the human element of making engineering function at a high level, which for whatever reason didn’t strike me as vital at the time.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://frequentdeploys.club&quot;&gt;Deploying Often is a Very Good Idea&lt;/a&gt; - Conditional probability is extremely good.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/you-cant-have-a-rollback-button&quot;&gt;You Can’t Have a Rollback Button&lt;/a&gt; - Please engrave “but what if you didn’t?” on my tombstone I guess.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.skyliner.io/a-simple-pattern-for-jobs-and-crons-on-aws-2f965e43932f&quot;&gt;A Simple Pattern for Jobs and Crons on AWS&lt;/a&gt; - Not only did I stoop to writing a practical post for once, I also wrote &lt;a href=&quot;https://medium.com/@mcfunley/at-most-once-vs-at-least-once-f215dafd27e2&quot;&gt;a followup&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/no-way-out-but-through&quot;&gt;No Way Out but Through&lt;/a&gt; - More ranting and raving about deploying more than once a year.&lt;/li&gt;
&lt;/ul&gt;

	</content>
    <author>
      <name>Dan McKinley</name>
      <uri>https://mcfunley.com/</uri>
    </author>
  </entry>
  
  <entry>
    <title type="html">Fourteen Months with Clojure</title>
    <link href="https://mcfunley.com/fourteen-months-with-clojure" rel="alternate" type="text/html" title="Fourteen Months with Clojure" />
    <published>2017-03-30T00:00:00+00:00</published>
    <updated>2017-03-30T00:00:00+00:00</updated>
    
    <id>urn:uuid:7D1CEBFA-D4FF-43BA-A3D4-8B876B961DC6</id>
    <content type="html" xml:base="https://mcfunley.com/fourteen-months-with-clojure">
	  &lt;p&gt;&lt;a href=&quot;https://codahale.com/&quot;&gt;Coda&lt;/a&gt; and I have been using &lt;a href=&quot;https://clojure.org&quot;&gt;Clojure&lt;/a&gt; to build Skyliner for the last fourteen months or so. I thought it might be a good idea to write down some of our experiences with this, for the benefit of others considering it for practical work.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/skyliner-state-machine.png&quot; /&gt;
  &lt;figcaption class=&quot;text-center&quot;&gt;The beating heart of Skyliner, a deploy encoded as a finite state machine.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h5 id=&quot;learning-languages-is-easy-learning-the-idioms-is-less-easy&quot;&gt;Learning languages is easy, learning the idioms is less easy&lt;/h5&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cliki.net/CloserLookAtSyntax&quot;&gt;“Lisp has no syntax,”&lt;/a&gt; or so they say. It does have some, but significantly less than other languages. Clojure has a slightly larger pile of stuff that you could mistake for syntax, but, it’s still compact and simple. The tricky part isn’t the &lt;em&gt;language&lt;/em&gt; so much as it is the &lt;em&gt;slang&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;As a seasoned engineer who theoretically “knows” a few dozen languages, I got productive with Clojure pretty fast. Nevertheless I definitely emitted some crappy code in my first few months. Stuff like:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;every?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:status&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:state&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Which I’d write like this today:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:state&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;every?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://clojure.org/guides/threading_macros&quot;&gt;Threading macros&lt;/a&gt; and &lt;a href=&quot;https://clojure.org/reference/transducers&quot;&gt;transducers&lt;/a&gt; specifically took a few months to become second nature.&lt;/p&gt;

&lt;p&gt;This is the kind of thing that would matter to you if you were going to try to onboard a few new engineers a week. I never read a tutorial, because this is a startup, and I did not have time. You’d probably want to rectify that mistake and review their stuff for a while.&lt;/p&gt;

&lt;h5 id=&quot;when-the-going-gets-tough-the-tough-use-maps&quot;&gt;When the going gets tough, the tough use maps&lt;/h5&gt;
&lt;p&gt;If I were going to give you a quick summary of what our codebase is like, I’d say it’s &lt;strong&gt;procedural code that manipulates maps&lt;/strong&gt;. That is literally 90% of it. This is a lot less bad than it probably sounds if you’ve never written Clojure, because the entire language is oriented around manipulating maps and lists.&lt;/p&gt;

&lt;p&gt;We keep the wheels on a few ways.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Schemas for our maps are pretty handy, particularly when they’re of the user-supplied data variety. We’re using &lt;a href=&quot;https://github.com/plumatic/schema&quot;&gt;prismatic/schema&lt;/a&gt; for this, although if we were starting today we might use &lt;a href=&quot;https://clojure.org/about/spec&quot;&gt;clojure.spec&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Our codebase has better test coverage than nearly anything I’ve ever worked on.&lt;/li&gt;
  &lt;li&gt;We use &lt;a href=&quot;https://github.com/clj-commons/kibit&quot;&gt;Kibit&lt;/a&gt; and &lt;a href=&quot;https://github.com/jonase/eastwood&quot;&gt;Eastwood&lt;/a&gt; in our build pipeline for the sake of general cleanliness.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;bells-and-whistles-are-very-rare&quot;&gt;Bells and whistles are very rare&lt;/h5&gt;
&lt;p&gt;I kind of assumed writing Clojure professionally would involve communing with the grand harmony of the spheres, or something, but it really doesn’t. And this isn’t bad. It is actually extremely good.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/ancient-of-days.png&quot; /&gt;
  &lt;figcaption class=&quot;text-center&quot;&gt;So then like McCarthy’s student Russell noticed that EVAL could serve as an interpreter and *&lt;a href=&quot;https://twitter.com/dril/status/163500308469792768?lang=en&quot;&gt;goes limp &amp;amp; rolls down steep mountainside for 10 minutes or so, banging head on branches and rocks, surely dead&lt;/a&gt;.*
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;In fourteen months I count about six uses of &lt;code class=&quot;inline&quot;&gt;recur&lt;/code&gt;. I think I wrote some code using &lt;code class=&quot;inline&quot;&gt;trampoline&lt;/code&gt; once or twice and then decided against shipping it.&lt;/p&gt;

&lt;p&gt;We’ve written &lt;code class=&quot;inline&quot;&gt;defmacro&lt;/code&gt; ourselves less than ten times. Most of those are for logging, so that we can grab the caller’s value of &lt;code class=&quot;inline&quot;&gt;*ns*&lt;/code&gt;. Others are setting dynamically scoped variables for the sake of implementing feature flags. They’re all really simple macros.&lt;/p&gt;

&lt;p&gt;Types of any kind are rare to a degree that astonish me. We’ve written a handful of protocols, for example our &lt;code class=&quot;inline&quot;&gt;scm&lt;/code&gt; protocol is there to provide a uniform interface for both GitHub and private git repos. We have records representing different kinds of CloudFormation stacks that we create and manipulate. That is pretty much it.&lt;/p&gt;

&lt;h5 id=&quot;multimethods-are-less-rare&quot;&gt;Multimethods are less rare&lt;/h5&gt;
&lt;p&gt;One thing we do use more extensively are &lt;a href=&quot;https://clojure.org/about/runtime_polymorphism&quot;&gt;multimethods&lt;/a&gt;. We use this to dispatch asynchronous jobs in our workers, to fan out to different handlers from webhook endpoints, and to make transitions in our deploy finite state machine.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/clojure-multimethods.png&quot; /&gt;
  &lt;figcaption class=&quot;text-center&quot;&gt;Using a simple little multimethod to convert java types into primitives that are acceptable to our frontend templates.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;In other languages we’d probably want to use some object abstraction or other, but multimethods handle things like this cleanly.&lt;/p&gt;

&lt;h5 id=&quot;clojure-is-not-scala&quot;&gt;Clojure is not Scala&lt;/h5&gt;
&lt;p&gt;I had some anxiety when we were getting started with Clojure, and that was grounded in my years of experience with Scala. Scala has &lt;a href=&quot;https://codahale.com/downloads/email-to-donald.txt&quot;&gt;scarred&lt;/a&gt; both of us for a number of reasons. Scala &lt;a href=&quot;https://docs.scala-lang.org/overviews/reflection/typetags-manifests.html&quot;&gt;builds on JVM typing&lt;/a&gt; to erect additional complexity, and in my opinion the results are &lt;a href=&quot;https://docs.scala-lang.org/tour/implicit-parameters.html&quot;&gt;mixed&lt;/a&gt;.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/contravariance.png&quot; /&gt;
  &lt;figcaption class=&quot;text-center&quot;&gt;A cathedral of covariance and contravariance built on the soft sandy base layer of type erasure.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Clojure doesn’t ask you to type anything if you don’t want to. That has its pluses and minuses, but you can write most of your code without getting into any slapfights with the JVM. So as a higher-level abstraction over Java, it works.&lt;/p&gt;

&lt;p&gt;Building a server application with Clojure is a better experience than with many &lt;a href=&quot;https://clojure.org/reference/compilation&quot;&gt;compiled languages&lt;/a&gt;, because as with any Lisp, you can just hotpatch everything in the REPL as you build it.&lt;/p&gt;

&lt;p&gt;I’ll grant you that maybe Scala has answers to all of these problems now, as I haven’t had the pleasure of using it in several versions. Do not @ me to talk about this.&lt;/p&gt;

&lt;h5 id=&quot;nesting-sucks&quot;&gt;Nesting sucks&lt;/h5&gt;
&lt;p&gt;Although Common Lisp has &lt;a href=&quot;https://gigamonkeys.com/book/functions.html#function-return-values&quot;&gt;return-from&lt;/a&gt;, Clojure has no facility like &lt;code class=&quot;inline&quot;&gt;return&lt;/code&gt; or &lt;code class=&quot;inline&quot;&gt;goto&lt;/code&gt;. This isn’t something you miss writing idiomatic Clojure, but sometimes you find yourself boxed into writing non-idiomatic Clojure. A good example of such a situation is dealing with a morass of heterogenous functions that can return error codes.&lt;/p&gt;

&lt;p&gt;Let’s say that you have a list of steps that need to complete in a specific order, and may fail. Conceptually, in Python:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;baz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This can be elegantly handled if the methods in the pipeline all return &lt;code class=&quot;inline&quot;&gt;nil&lt;/code&gt; in the failure case, and we don’t care to do much else.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;some-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;baz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But things start to fall apart as the signatures of the functions in the pipeline vary, or if we want to instrument the pieces with logging.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;if-let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;if-let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;if-let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;goo&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;qux&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;it worked&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;goo failed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bar failed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;foo failed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We have a decent amount of old code that looks like this. It’s all well tested and in that sense it’s relatively safe, but it’s still craptacular and tricky to modify.&lt;/p&gt;

&lt;p&gt;Before a throng of enlightened individuals amble up to the mic stand in the aisle to tell us this, I should say that we are wonk as hell and therefore realized we were building a composition of &lt;a href=&quot;https://hackage.haskell.org/package/category-extras-0.52.0/docs/Control-Monad-Either.html&quot;&gt;either monads&lt;/a&gt;.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/profunctor-optics.png&quot; /&gt;
  &lt;figcaption class=&quot;text-center&quot;&gt;Could you not&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;But a highbrow-yet-idiomatic solution to that in a language otherwise devoid of category theory wasn’t immediately obvious. I messed around the idea of tackling this with specialized macros, but decided this was an unmaintainable tarpit.&lt;/p&gt;

&lt;p&gt;In the end we decided to just try using a category theory library, &lt;a href=&quot;https://github.com/funcool/cats&quot;&gt;cats&lt;/a&gt;. That lets you write something equivalent to the above like so:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cats.core&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:as&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cats.monad.either&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:as&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;either&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;m/mlet&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;if-let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;either/right&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;either/left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

          &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;if-let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;either/right&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;either/left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

          &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;if-let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;goo&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;either/right&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;either/left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;m/return&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;qux&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Which cuts out the nesting and makes a big difference in sufficiently complicated scenarios.&lt;/p&gt;

&lt;p&gt;It is unclear to me if the category theory would still be a win on a less experienced team. I have a long history of being skeptical of things like this, but it has improved our lives recently.&lt;/p&gt;

&lt;h5 id=&quot;thanks-for-reading&quot;&gt;Thanks for reading!&lt;/h5&gt;
&lt;p&gt;I hope this helps if you’re considering building something real with Clojure.&lt;/p&gt;

	</content>
    <author>
      <name>Dan McKinley</name>
      <uri>https://mcfunley.com/</uri>
    </author>
  </entry>
  
  <entry>
    <title type="html">You Can’t Have a Rollback Button</title>
    <link href="https://mcfunley.com/you-cant-have-a-rollback-button" rel="alternate" type="text/html" title="You Can&apos;t Have a Rollback Button" />
    <published>2017-02-28T00:00:00+00:00</published>
    <updated>2017-02-28T00:00:00+00:00</updated>
    
    <id>urn:uuid:0DFE5A8B-4AAA-4E66-919B-B2AF181A33F5</id>
    <content type="html" xml:base="https://mcfunley.com/you-cant-have-a-rollback-button">
	  &lt;p&gt;I’ve worked with deploy systems in the past that have a prominent “rollback” button, or a console incantation with the same effect. The presence of one of these is reassuring, in that you can imagine that if something goes wrong you can quickly get back to safety by undoing your last change.&lt;/p&gt;

&lt;p&gt;But the rollback button is a lie. You can’t have a rollback button that’s safe when you’re deploying a running system.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/images/no-rollback/buffalo.webp&quot; alt=&quot;A buffalo blocking the road in Yellowstone&quot; /&gt;
    &lt;figcaption&gt;
        The majestic bison is insouciant when monopolizing the push queue, stuck in a debug loop, to the annoyance of his colleagues.
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h5 id=&quot;the-old-version-does-not-exist&quot;&gt;The Old Version does not Exist&lt;/h5&gt;
&lt;p&gt;The fundamental problem with rolling back to an old version is that web applications are not self-contained, and therefore they do not have versions. They have a current state. The state consists of the application code and everything that it interacts with. Databases, caches, browsers, and concurrently-running copies of itself.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/images/no-rollback/wirth.webp&quot; alt=&quot;The cover of Niklaus Wirth&apos;s Algorithms + Data Structures = Programs&quot; /&gt;
    &lt;figcaption&gt;
        What they don’t tell you in school is the percentage of your life as a working programmer that will be spent dealing with the “plus” sign.
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;You can roll back the SHA the webservers are running, but you can’t roll back what they’ve inflicted on everything else in the system. Well, not without a time machine. If you have a time machine, please use the time machine. Otherwise, the remediation has to occur in the direction of the future.&lt;/p&gt;

&lt;h5 id=&quot;a-demonstration&quot;&gt;A Demonstration&lt;/h5&gt;
&lt;p&gt;Contriving an example of a fault that can’t be rolled back is trivial. We can do this by starting with a python script that emulates a simple read-through cache:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# version1.py
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pymemcache.client.base&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Client&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;localhost&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11211&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;a&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read_through&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# let’s pretend this reads from the database.
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;value: %d&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read_through&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;a&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can verify that this works fine:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python version1.py
value: 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now let’s consider the case of pushing some bad code over top of it. Here’s an updated version:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# version1.py
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pymemcache.client.base&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Client&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;localhost&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11211&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;a&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read_through&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# let’s pretend this reads from the database.
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;write_through&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# mess up the cache lol
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write_through&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;a&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;x&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;value: %d&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read_through&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;a&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That corrupts the cache, and promptly breaks:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python version2.py
ValueError: invalid literal for int() with base 10: ’x’
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At this point, red sirens are going off all over the office and support reps are sprinting in the direction of our desks. So we hit the rollback button, and:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python version1.py
ValueError: invalid literal for int() with base 10: b’x’
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Oh no! It’s still broken! We can’t resolve this problem by rolling back. We’re lucky that in this case, nothing has been made the worse. But that is also a possibility. There’s no guarantee that the path from v1 to v2 and then back to v1 isn’t actively destructive.&lt;/p&gt;

&lt;p&gt;A working website can eventually be resurrected by writing some new code to cope with the broken data.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read_through&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# let’s pretend this reads from the database.
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# n.b. we screwed up some of the cached values on $DATE,
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;# this remediates
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You might dispute the plausibility of a mistake as transparently daft as this. But in my career I’ve carried out conceptually similar acts of cache destruction many times. I’m not saying I’m a great programmer. But then again maybe you aren’t, either.&lt;/p&gt;

&lt;h5 id=&quot;a-sharp-knife-whose-handle-is-also-a-knife&quot;&gt;A Sharp Knife, Whose Handle is also a Knife&lt;/h5&gt;
&lt;p&gt;Adding a rollback button is not a neutral design choice. It affects the code that gets pushed. If developers incorrectly believe that their mistakes can be quickly reversed, they will tend to take more foolish risks. It might be hard to &lt;a href=&quot;https://medium.com/@mcfunley/mistakes-you-apparently-just-have-to-make-yourself-cc2dd2bfc25c&quot;&gt;talk them out of it&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mounting a rollback button within easy reach (as opposed to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git revert&lt;/code&gt;, which you &lt;a href=&quot;https://twitter.com/simonw/status/835975770740670464&quot;&gt;probably have to google&lt;/a&gt;) means that it’s more likely to be pressed carelessly in an emergency. &lt;em&gt;Panic buttons are for when you’re panicking.&lt;/em&gt;&lt;/p&gt;

&lt;h5 id=&quot;practice-small-corrections&quot;&gt;Practice Small Corrections&lt;/h5&gt;
&lt;p&gt;Pushbutton rollback is a bad idea. The only sensible thing to do is change the way we organize our code for deployment.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Push “dark” code&lt;/strong&gt;. You should be deploying code behind a disabled feature flag that will not be invoked. It’s relatively easy to &lt;a href=&quot;/ship-small-diffs&quot;&gt;visually inspect an if statement for correctness&lt;/a&gt; and check that a flag is disabled.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Ramp up invocations of new code&lt;/strong&gt;. Breaking requests without a quick rollback path is bad. But it’s much worse to break 100% of requests than it is to break 1% of requests. If we ramp up new code gradually, we can often contain the scope of the damage.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Maintain off switches&lt;/strong&gt;. In the event that a complicated remediation is required, we’re in a stronger position if we can disable broken features while we work on them in relative calm.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Roll forward&lt;/strong&gt;. Production pushes will include many commits, all of which need to be evaluated for reversibility when a complete rollback is proposed. Reverting smaller diffs as a roll-forward is &lt;a href=&quot;/ship-small-diffs&quot;&gt;more verifiable&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Complete deployment rollbacks are high-G maneuvers. The implications of initiating one given a nontrivial set of changes are impossible to reason about. You may decide that one is called for, but you should do this as a last resort.&lt;/p&gt;

	</content>
    <author>
      <name>Dan McKinley</name>
      <uri>https://mcfunley.com/</uri>
    </author>
  </entry>
  
  <entry>
    <title type="html">Ship Small Diffs</title>
    <link href="https://mcfunley.com/ship-small-diffs" rel="alternate" type="text/html" title="Ship Small Diffs" />
    <published>2017-02-09T00:00:00+00:00</published>
    <updated>2017-02-09T00:00:00+00:00</updated>
    
    <id>urn:uuid:2A742D25-3179-4DE2-B6C8-ABFA36FA2D50</id>
    <content type="html" xml:base="https://mcfunley.com/ship-small-diffs">
	  &lt;p&gt;Building a web application is a young and poorly-understood activity. Toolchains for building code in general are widely available, relatively older, and they also happen to be closest at hand when you’re getting started. The tendency, then, is to pick some command line tools and work forwards from their affordances.&lt;/p&gt;

&lt;p&gt;Git provides methods for coping with every merge problem conceivable. It also gives us support for arbitrarily complicated branching and tagging schemes. Many people reasonably conclude that it makes sense to use those features all the time.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/dante.jpg&quot; /&gt;
  &lt;figcaption class=&quot;text-center&quot;&gt;I found myself in a dark wood, where the straight way was lost. The good lord would not have given me this 25 ton hydraulic splitter if I weren’t meant to cut up some logs.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;This is a mistake. You should start from practices that work operationally, and follow the path backwards to what is done in development. Even &lt;a href=&quot;https://datadriven.club&quot;&gt;allowing for discardable MVP’s&lt;/a&gt;, ultimately in a working business &lt;a href=&quot;https://boringtechnology.club&quot;&gt;most of the cost of software is in operating it, not building it&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I’ll make the case for one practice that works very well operationally: deploying small units of code to production on a regular basis. I think that your deploys should be measured in dozens of lines of code rather than hundreds. You’ll find that taking this as a fixed point requires only relatively simple uses of revision control.&lt;/p&gt;

&lt;h5 id=&quot;ship-small-diffs-and-stand-a-snowballs-chance-of-inspecting-them-for-correctness&quot;&gt;Ship small diffs, and stand a snowball’s chance of inspecting them for correctness.&lt;/h5&gt;
&lt;p&gt;Your last chance to avoid broken code in production is just before you push it, and to that end many teams think it’s a good idea to have standard-ish code reviews. This isn’t wrong, but return on effort diminishes.&lt;/p&gt;

&lt;p&gt;Submitting hundreds of lines of code for review is a large commitment. It encourages sunk cost thinking and entrenchment. Reviews for large diffs are closed with a single “lgtm,” or miss big-picture problems for the weeds. Even the strongest cultures have reviews that devolve into Maoist struggle sessions about whitespace.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/there-are-four-lights.png&quot; /&gt;
  &lt;figcaption class=&quot;text-center&quot;&gt;Your tormentors will demand baffling, seemingly-trivial concessions.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Looking at a dozen lines for mistakes is the sort of activity that is reasonably effective without being a burden. This will not prevent all problems, or even fail to create any new ones. But as a process it is a mindful balance between the possible and the practical.&lt;/p&gt;

&lt;h5 id=&quot;ship-small-diffs-because-code-isnt-correct-until-its-running-production&quot;&gt;Ship small diffs, because code isn’t correct until it’s running production.&lt;/h5&gt;
&lt;p&gt;The senior developer’s conditioned emotional response to a large deploy diff is abject terror. This is an instinctive understanding of a simple relationship.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/poppies.jpg&quot; /&gt;
  &lt;figcaption class=&quot;text-center&quot;&gt;Quick, find the red one&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Every line of code has some probability of having an undetected flaw that will be seen in production. Process can affect that probability, but it cannot make it zero. Large diffs contain many lines, and therefore have a high probability of breaking when given real data and real traffic.&lt;/p&gt;

&lt;p&gt;In online systems, you have to ship code to prove that it works.&lt;/p&gt;

&lt;h5 id=&quot;ship-small-diffs-because-the-last-thing-you-changed-is-probably-setting-those-fires&quot;&gt;Ship small diffs, because the last thing you changed is probably setting those fires.&lt;/h5&gt;
&lt;p&gt;We cannot prevent all production problems. They will happen. And when they do, we’re better off when we’ve been pushing small changesets.&lt;/p&gt;

&lt;p&gt;Many serious production bugs will make themselves evident &lt;a href=&quot;https://github.com/danluu/post-mortems#config-errors&quot;&gt;as soon as they’re pushed out&lt;/a&gt;. If a new database query on your biggest page is missing an index, you will probably be alerted quickly. When this happens, it is reasonable to assume that the last deploy contains the flaw.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/oops.png&quot; /&gt;
  &lt;figcaption class=&quot;text-center&quot;&gt;Oops&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;At other times, you’ll want to debug a small but persistent problem that’s been going on for a while. The key pieces of information useful to solving such a mystery are when the problem first appeared, and what was changed around that time.&lt;/p&gt;

&lt;p&gt;In both of these scenarios, the debugger is presented with a diff. Finding the problem in the diff is similar to code review, but worse. It’s a code review performed under duress. So the time to recover from problems in production will tend to be proportional to the size of the diffs that you’re releasing.&lt;/p&gt;

&lt;h5 id=&quot;taking-small-diffs-seriously&quot;&gt;Taking Small Diffs Seriously&lt;/h5&gt;
&lt;p&gt;Human frailty limits the efficacy of code review for prophylactic purposes. Problems in releases are inevitable, and scale with the amount of code released. The time to debug problems is a function of (among other things) the volume of stuff to debug.&lt;/p&gt;

&lt;p&gt;This isn’t a complicated list of precepts. But taking them to heart leads you to some interesting conclusions.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Branches have inertia, and this is bad&lt;/strong&gt;. I tell people that it’s fine with me if working in a branch helps them, as long as I’m not ever able to tell for sure that they’re doing it. It’s easier to double down on a branch than it is to merge and deploy, and developers fall into this tiger trap all the time.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Lightweight manipulation of source code &lt;em&gt;is fine&lt;/em&gt;&lt;/strong&gt;. PR’s of GitHub branches are great. But &lt;code class=&quot;inline&quot;&gt;git diff | gist -optdiff&lt;/code&gt; also works reasonably if we are talking about a dozen lines of code.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;You don’t need elaborate Git release rituals&lt;/strong&gt;. Ceremony such as tagging releases gets to feel like a waste of time once you are releasing many times per day.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Your real problem is releasing frequently&lt;/strong&gt;. Limiting the amount of code you push is going to block progress, unless you can simultaneously increase the rate of pushing code. This is not as easy as it sounds, and it will shift the focus of your developer tooling budget in the direction of software built with this goal in mind.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That is not an exhaustive list. Starting from operations and working backwards has lead us to critically examine what we do in development, and this is a good thing.&lt;/p&gt;

	</content>
    <author>
      <name>Dan McKinley</name>
      <uri>https://mcfunley.com/</uri>
    </author>
  </entry>
  
  <entry>
    <title type="html">No Way Out But Through</title>
    <link href="https://mcfunley.com/no-way-out-but-through" rel="alternate" type="text/html" title="No Way Out But Through" />
    <published>2016-08-25T00:00:00+00:00</published>
    <updated>2016-08-25T00:00:00+00:00</updated>
    
    <id>urn:uuid:23F1A7A3-7E3B-40CC-B9F5-296BD4E95129</id>
    <content type="html" xml:base="https://mcfunley.com/no-way-out-but-through">
	  &lt;p&gt;&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;: This was a post for Skyliner, which was a startup I co-founded in 2016. The post is recreated here since it makes some good points and was reasonably popular. But be advised the startup it describes is now defunct (we sold ourselves to Mailchimp in 2017).&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I’ve been around long enough to see production releases done a few different ways.&lt;/p&gt;

&lt;p&gt;My first tech job began back when delivering software over the internet wasn’t quite normal, yet. Deployments happened roughly every 12 to 18 months, and they were unmitigated disasters that stretched out for weeks.&lt;/p&gt;

&lt;p&gt;When I got to &lt;a href=&quot;https://etsy.com&quot;&gt;Etsy&lt;/a&gt; in 2007, deploys happened a bit more often. But they were still arcane and high-stress affairs. An empowered employee typing commands manually pushed weeks of other people’s work, and often it &lt;em&gt;Did Not Go Well&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;But by the time I left Etsy in 2014, we were pushing code live to production &lt;a href=&quot;https://www.youtube.com/watch?v=AwOG65UGAH4&quot;&gt;dozens of times per day, with minimal drama&lt;/a&gt;. This experience has convinced me of a few things.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Changing code is risky.&lt;/li&gt;
  &lt;li&gt;Unfortunately, achieving business goals generally involves changing code.&lt;/li&gt;
  &lt;li&gt;The best coping strategy I’m aware of is to change code as frequently as possible.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I believe deploys should be &lt;em&gt;routine, cheap, and safe&lt;/em&gt;. That is the philosophy we’ve used to build Skyliner, and we built Skyliner with the intent of sharing this philosophy with other teams.&lt;/p&gt;

&lt;h5 id=&quot;routine&quot;&gt;Routine&lt;/h5&gt;
&lt;p&gt;In deployment, the &lt;a href=&quot;https://frequentdeploys.club&quot;&gt;path of least resistance should also be the right way to do it&lt;/a&gt;. It should be easier and quicker to deploy the right way than to circumvent the process. Making “proper” deploys more complex, slower, or riddled with manual steps backfires. Human nature will lead to chaotic evil, like hand-edited files on production machines.&lt;/p&gt;

&lt;p&gt;I’ve been there. I have debugged more than one outage precipitated by live edits to php.ini. Our team worked hard in the years following those incidents to build a deployment system that was too easy and joyful to evade.&lt;/p&gt;

&lt;h5 id=&quot;cheap&quot;&gt;Cheap&lt;/h5&gt;
&lt;p&gt;Deploys can only be routine if they’re relatively quick. If it takes you hours to deploy your code, obviously this imposes a natural limit on how often deploys can be done. But the secondary effects of the latency are worse.&lt;/p&gt;

&lt;p&gt;Rare, expensive deploys bundle many changes; quick, cheap deploys can bundle just a few. This becomes important when things don’t go as planned. The most plausible answer to “what went wrong” is usually “the last thing we changed.” So when debugging a problem in production, it matters a great deal whether the release diff is a handful of lines or thousands.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/images/noway/forum-posts.webp&quot; alt=&quot;A graph of forum posts spiking up after a deploy, which is indicated on the graph with a vertical red line&quot; /&gt;
    &lt;figcaption&gt;
        Many interesting things in the field of web operations immediately follow a code deploy. Here’s the record of me causing mass hysteria with several pushes, &lt;a href=&quot;https://www.etsy.com/codeascraft/track-every-release/&quot;&gt;back in 2010&lt;/a&gt;.
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Infrequent deploys also create natural deadlines. Engineers will tend to rush to get their changes in for a weekly push, and rushing leads to mistakes. If pushes happen hourly, the penalty for waiting for the next one to write a few more unit tests is much less severe.&lt;/p&gt;

&lt;h5 id=&quot;safe&quot;&gt;Safe&lt;/h5&gt;
&lt;p&gt;Total safety in deploying code is not possible, and the deployment engine is only one part of the operational puzzle. Striving for a purely technical solution to deploy-driven outages is bound to lead to complexity that will have the opposite effect. As I’ve explained, I think that routine and cheap deploys are inherently safer, and these are cultural choices as much as they are a set of technical solutions.&lt;/p&gt;

&lt;p&gt;But, mechanics are still important. Early versions of &lt;a href=&quot;https://github.com/etsy/deployinator&quot;&gt;Etsy’s Deployinator&lt;/a&gt; stopped pushing code if the browser of the person performing the deploy disconnected. That was a bad choice, and that became evident immediately the first time I tried to deploy from an airplane somewhere over Kansas. That’s ridiculous, but many teams use a single machine to orchestrate deployments and just hope that it never dies in the act.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/images/noway/deployinator.webp&quot; alt=&quot;Screenshot of Etsy&apos;s deployinator tool&quot; /&gt;
    &lt;figcaption&gt;
        Etsy&apos;s Deployinator, an inspiration for much of the Skyliner deployment experience.
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;It is also nontrivial to replace code as it’s running. In the bad old days we’d just do deploys during maintenance windows, but that’s become untenable. In the 21st century we have to make changes to sites while they’re live, and getting this right is a challenge.&lt;/p&gt;

&lt;h5 id=&quot;baking-hard-lessons-into-skyliner&quot;&gt;Baking Hard Lessons Into Skyliner&lt;/h5&gt;
&lt;p&gt;Skyliner deploys are easy to use: you just wait for the build to finish and press the button. They’re all logged and recorded, and it’d take significantly more effort to do anything less safe.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/images/noway/skyliner.webp&quot; alt=&quot;Screenshot of an application in Skyliner (RIP)&quot; /&gt;
    &lt;figcaption&gt;
        The deployment view in a Skyliner application.
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;We value simplicity, and are believers in &lt;a href=&quot;http://www.paulhammond.org/2010/06/trunk/&quot;&gt;Paul Hammond’s advice that you should always ship trunk&lt;/a&gt;. Skyliner affords you a single deployment branch. You’re free to act out baroque git contortions if you wish, but we suggest that you keep your release process simple and just deploy a master branch.&lt;/p&gt;

&lt;p&gt;We’ve worked hard to make Skyliner deploys as fast as possible. The speed of deploys is decoupled from the instance count, so pushes to small clusters as well as large clusters can both be expected to finish in two or three minutes.&lt;/p&gt;

&lt;p&gt;That’s not quite as fast as might be possible with a system that just copied files, but Skyliner deploys are much more than this. We think that the benefits are worth a minor amount of extra waiting.&lt;/p&gt;

&lt;p&gt;Our engine models each deploy as a finite state machine. Workers cooperate to complete (idempotent) tasks to advance the deploy state, which means that our instances can die without breaking running deploys.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/images/noway/skyliner-arch.webp&quot; alt=&quot;Skyliner (RIP) deployment architecture diagram&quot; /&gt;
    &lt;figcaption&gt;
        The coordination of Skyliner deploys is distributed. Deploy workers advance a finite state machine, and can safely be killed without breaking a running deploy.
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Every Skyliner deploy is a &lt;a href=&quot;http://martinfowler.com/bliki/BlueGreenDeployment.html&quot;&gt;blue/green deploy&lt;/a&gt;. We spin up an entirely new cluster with the new code, make sure it’s healthy, and then make it live as an atomic switch at the load balancer level. This has a few notable advantages to deploying files in place:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Given a sufficiently good healthcheck, the system never makes a totally-broken version live. (Application bugs, regrettably, are still possible.)&lt;/li&gt;
  &lt;li&gt;By routinely destroying the entire cluster, we eliminate the possibility that the &lt;a href=&quot;http://techblog.netflix.com/2012/07/chaos-monkey-released-into-wild.html&quot;&gt;application has inadvertently become reliant upon local machine state&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;my-gray-hairs-grown-for-you&quot;&gt;My Gray Hairs, Grown For You&lt;/h5&gt;
&lt;p&gt;Deployment is tricky business. We wanted to give Skyliner users a system informed by several decades of our own mistakes. “Well, that sucked,” I said to myself, “but there’s no reason that the rest of the world needs to trip over the same cord.”&lt;/p&gt;

	</content>
    <author>
      <name>Dan McKinley</name>
      <uri>https://mcfunley.com/</uri>
    </author>
  </entry>
  
  <entry>
    <title type="html">The Unreasonable Effectiveness of Mathematics in Planning</title>
    <link href="https://mcfunley.com/the-unreasonable-effectiveness-of-mathematics-in-planning" rel="alternate" type="text/html" title="The Unreasonable Effectiveness of Mathematics in Planning" />
    <published>2016-02-03T00:00:00+00:00</published>
    <updated>2016-02-03T00:00:00+00:00</updated>
    
    <id>urn:uuid:0db0d98a-fb9b-cc6a-94a8-c4506f128ce4</id>
    <content type="html" xml:base="https://mcfunley.com/the-unreasonable-effectiveness-of-mathematics-in-planning">
	  &lt;p&gt;I was speaking on a panel the other day that was handed the topic, “the challenges of balancing data-light product bets vs purely data driven incremental improvements.” &lt;a href=&quot;https://twitter.com/skamille&quot;&gt;Camille Fournier&lt;/a&gt; was also a panelist and wrote up her thoughts &lt;a href=&quot;http://whilefalse.blogspot.com/2016/01/qualitative-or-quantitative-but-always.html&quot;&gt;here&lt;/a&gt;. Camille’s take (which I think is right) is that even if you don’t have data to work from, you can still approach projects analytically.&lt;/p&gt;

&lt;p&gt;For me, the process of behaving analytically incorporates mathematical reasoning but not necessarily &lt;em&gt;data&lt;/em&gt;. And I think this kind of spitballing is a useful activity, even if the numbers are made up. The reason for this is that human brains were forged on the African savanna where nothing is very fast, very large, or very small, cosmically speaking, and we are laughably equipped for coping with orders of magnitude.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;http://i.imgur.com/bIMKyZl.jpg&quot; /&gt;
  &lt;figcaption&gt;That is also why you think this looks awesome, but don&apos;t let that spoil it for you.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The kind of thinking I’m describing works like this: &lt;em&gt;“ok that’s a thing measured in thousands multiplied by a thing measured in tens of thousands, and then filtered through a rate of a few percent, are we even close?”&lt;/em&gt;. When permitted to skip this check on deficient intuition, most humans will sense their way to the wrong answers.&lt;/p&gt;

&lt;p&gt;But on the panel and in subsequent discussions, it’s been easy to run with the dichotomy that you’ve either got data to work from, or you’ve got nothing at all. The temptation is to jump into philosophical takes given examples of products or entire markets that could not have been calculated with forsight before they existed. While that’s valid, I think it doesn’t describe most of the situations that you encounter in the wild.&lt;/p&gt;

&lt;h5 id=&quot;data-exists-and-we-dont-want-to-look&quot;&gt;Data Exists, and We Don’t Want to Look&lt;/h5&gt;

&lt;p&gt;The daily grind at a company consists of building in proximity to a thing that’s satisfying some definition of “working.” Yes, there’s always the innovator’s dilemma to worry about and the prospect of weird new platforms that will enable use cases you don’t understand yet. But the degree to which we’re striking out into the &lt;em&gt;undiscovered country&lt;/em&gt; is overstated.&lt;/p&gt;

&lt;p&gt;Companies release products that you’d figure shouldn’t have survived opportunity analysis all the time. They just don’t pitch them that way:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This feature notifies pairs of individuals that have arranged an unlikely relationship on the internet beforehand. The notifications are delivered two or three times a year, and only if the parties are in close geographic proximity. And they both have an optional iOS app installed. And in this scenario one of the people is known to be in a cohort that tends to not have that iOS app installed. And then at the end of this funnel we’re hoping that some small percentage of these folks will wind up showing up online and buying a thing. &lt;em&gt;Later.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I have a real launch in mind with that, but I’ve rendered it unrecognizable and absurd by describing it accurately. This isn’t a situation where the volume couldn’t be estimated. If it were, I’d have a harder time lampooning it. This is the neglected scenario: we have all the data we need, but instead of deploying it we shipped something doomed.&lt;/p&gt;

&lt;p&gt;When you hear people speak in defense of such things, they act out the same misdirection and head straight for the words we use when we’re discussing the iPod. &lt;em&gt;You can’t, like, quantify vision, man.&lt;/em&gt; What they’re really espousing is the idea that product success obeys an uncertainty principle. If we look at things too closely, the magic disappears. And of course the good vibes would sublimate in this case, because the magic is nonsense.&lt;/p&gt;

&lt;h5 id=&quot;the-hazards-of-narrative-arc&quot;&gt;The Hazards of Narrative Arc&lt;/h5&gt;

&lt;p&gt;Of course, this is not what anyone is actually thinking. Nobody sets out to ignore data on purpose, hoping to improve their chances of failing. You just watched me retcon an ethos onto feral behavior. And in doing so, I am part of the problem.&lt;/p&gt;

&lt;p&gt;Everyone’s the hero of the novel they’re writing in their heads. That is the human condition. And having &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_artistic_depictions_of_Steve_Jobs&quot;&gt;saved a company by inventing a new market&lt;/a&gt; is a great narrative arc, which is why we reach for it when we’re actually engaged in something mundane. &lt;a href=&quot;/effective-web-experimentation-as-a-homo-narrans&quot;&gt;We just systematically find stories too compelling&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It is rarely the case that vision can’t be at least sketched using arithmetic. Mathematics is the language we use to describe reality, and vision is generally assumed to have effects &lt;em&gt;in reality.&lt;/em&gt; That’s what makes numeric methods more powerful than they should reasonably be. We’re constantly engaged in the art of self-deception, and they force you to snap out of it.&lt;/p&gt;

	</content>
    <author>
      <name>Dan McKinley</name>
      <uri>https://mcfunley.com/</uri>
    </author>
  </entry>
  
  <entry>
    <title type="html">Do You Work at Amazon?</title>
    <link href="https://mcfunley.com/do-you-work-at-amazon" rel="alternate" type="text/html" title="Do You Work at Amazon?" />
    <published>2016-01-26T00:00:00+00:00</published>
    <updated>2016-01-26T00:00:00+00:00</updated>
    
    <id>urn:uuid:95ebbab7-0de7-4d46-f064-940561c3ec29</id>
    <content type="html" xml:base="https://mcfunley.com/do-you-work-at-amazon">
	  &lt;p&gt;&lt;span class=&quot;coauthor&quot;&gt;Please note that &lt;a href=&quot;http://twitter.com/paradosso&quot;&gt;Roberto Medri&lt;/a&gt; is a coauthor on this post.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://continuations.com&quot;&gt;Albert Wenger&lt;/a&gt; has been one of the VC’s I most admire for a long time. He was very present in the early days at Etsy, and sat in giving counsel on some, uh, &lt;em&gt;significantly astray&lt;/em&gt; engineering team meetings.  Albert is a smart, data-driven guy whose values roughly align with my own.&lt;/p&gt;

&lt;p&gt;That said, I have an axe to grind with his latest post, &lt;a href=&quot;http://continuations.com/post/138017572565/dont-mind-the-share-price-hint-it-fluctuates&quot;&gt;Don’t Mind the Share Price&lt;/a&gt;. In it, Albert deploys the story of Amazon as a warning against focusing too much on how the market values a company. This is the story of Amazon:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/PdcjSCu.png&quot; alt=&quot;Amazon&apos;s historical stock price&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Amazon was riding high in the late 90s, then felt the DotCom burst roughly along with the rest of the tech sector. Albert points out that history has shamed anyone that might’ve judged Amazon on its share price fifteen years ago, since it’s returned north of 2000% in the years since.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;So whether you are running a tech company, working for one, or investing in one I highly recommend not reading too much into changes in share price. Focus instead on whether your company is making real progress.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Albert is careful to stress that you should focus on fundamentals over fluctuations in the price, which is generally good advice. But I think the subtext is clear: &lt;em&gt;don’t be discouraged by even large declines in price, because you might be working at the next Amazon.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is a premise that we can investigate quantitatively.&lt;/p&gt;

&lt;h5 id=&quot;the-odds-of-being-an-amazon&quot;&gt;The Odds of Being an Amazon&lt;/h5&gt;

&lt;p&gt;Suppose that we’re working at a public company that’s experienced a decline in its share price of at least 50%, relative to a recent high price. We’d like to approximate the odds that this company is going to recover &lt;a ref=&quot;#f1&quot; href=&quot;#f1&quot; class=&quot;footnote&quot;&gt;[1]&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It turns out that since 2002, there have been &lt;a href=&quot;https://github.com/mcfunley/shaken-stocks/blob/master/shaken-stocks.csv&quot;&gt;2,132 companies traded on the NASDAQ&lt;/a&gt; that fit this description. One of these is indeed Amazon. But how many others are like it?&lt;/p&gt;

&lt;p&gt;We can take this set of companies and categorize them. Let’s identify companies that wound up being completely wiped out—losing 90% of their remaining value or more—and then all other companies that declined in value. For companies that increased in value, we’ll differentiate those that beat the market (defined as the S&amp;amp;P 500 Index) from those that didn’t. The idea being that you would have been better off just buying an index fund with your cash surplus from working for Google in a parallel universe. And finally, we’ll identify the &lt;a href=&quot;https://www.youtube.com/watch?v=zbQTXFJL8lo&quot;&gt;miraculous&lt;/a&gt;: those companies that return 1000% or more, of which Amazon is one example.&lt;/p&gt;

&lt;p&gt;If we do that, it looks like this:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Category&lt;/th&gt;
      &lt;th&gt;Count&lt;/th&gt;
      &lt;th&gt;Percent&lt;/th&gt;
      &lt;th&gt;Cumulative Percent&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tr class=&quot;negative&quot;&gt;
    &lt;td&gt;&lt;strong&gt;Wiped Out&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;239&lt;/td&gt;
    &lt;td&gt;11.21%&lt;/td&gt;
    &lt;td&gt;11.21%&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&quot;negative&quot;&gt;
    &lt;td&gt;&lt;strong&gt;Declined&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;794&lt;/td&gt;
    &lt;td&gt;37.24%&lt;/td&gt;
    &lt;td&gt;48.45%&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&quot;negative&quot;&gt;
    &lt;td&gt;&lt;strong&gt;Beaten by Market&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;344&lt;/td&gt;
    &lt;td&gt;16.14%&lt;/td&gt;
    &lt;td&gt;64.59%&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&quot;positive&quot;&gt;
    &lt;td&gt;&lt;strong&gt;Beat Market&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;661&lt;/td&gt;
    &lt;td&gt;31.00%&lt;/td&gt;
    &lt;td&gt;95.59%&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&quot;positive&quot;&gt;
    &lt;td&gt;&lt;strong&gt;Miracle&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;94&lt;/td&gt;
    &lt;td&gt;4.41%&lt;/td&gt;
    &lt;td&gt;100.00%&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;Here we can see that about 65% percent of public companies that find themselves in this situation don’t recover. But 35% of companies do. These are tough odds, but definitely not impossible odds, right?&lt;/p&gt;

&lt;h5 id=&quot;recovery-is-not-good-enough&quot;&gt;Recovery is not Good Enough&lt;/h5&gt;

&lt;p&gt;Albert asks us to consider investors, officers, and employees of the company as having roughly identical situations. This is a mistake. Things are significantly worse in the case of employees &lt;a ref=&quot;#f2&quot; href=&quot;#f2&quot; class=&quot;footnote&quot;&gt;[2]&lt;/a&gt; at a public company that have been issued options. In these cases, the company may very well recover, but we have to contemplate several other horrifying possibilities.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Employees may have already exercised options at a strike price higher than the current market price. If so, they’re screwed if the company never recovers above that price. Even if the company beats the market from here out.&lt;/li&gt;
  &lt;li&gt;The strike price may be below the current market price, meaning that the options are worth something. But employees may owe taxes (or AMT), forcing them to sell before the recovery.&lt;/li&gt;
  &lt;li&gt;Options may be underwater and worthless. At least in this scenario, there is clarity.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From these situations we can see that as an employee &lt;a ref=&quot;#f3&quot; href=&quot;#f3&quot; class=&quot;footnote&quot;&gt;[3]&lt;/a&gt;, it makes sense to consider the odds that the company will not just recover, but will ultimately get back to where it was. That looks like this:&lt;/p&gt;

&lt;table class=&quot;table table-striped&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Category&lt;/th&gt;
      &lt;th&gt;Count&lt;/th&gt;
      &lt;th&gt;Percent&lt;/th&gt;
      &lt;th&gt;Cumulative Percent&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tr class=&quot;negative&quot;&gt;
    &lt;td&gt;&lt;strong&gt;Wiped Out&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;239&lt;/td&gt;
    &lt;td&gt;11.21%&lt;/td&gt;
    &lt;td&gt;11.21%&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&quot;negative&quot;&gt;
    &lt;td&gt;&lt;strong&gt;Declined&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;794&lt;/td&gt;
    &lt;td&gt;37.24%&lt;/td&gt;
    &lt;td&gt;48.45%&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&quot;negative&quot;&gt;
    &lt;td&gt;&lt;strong&gt;Beaten by Market&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;344&lt;/td&gt;
    &lt;td&gt;16.14%&lt;/td&gt;
    &lt;td&gt;64.59%&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&quot;negative&quot;&gt;
    &lt;td&gt;&lt;strong&gt;Recovered Below High Price&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;210&lt;/td&gt;
    &lt;td&gt;9.84%&lt;/td&gt;
    &lt;td&gt;75.04%&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&quot;positive&quot;&gt;
    &lt;td&gt;&lt;strong&gt;Beat Market&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;441&lt;/td&gt;
    &lt;td&gt;20.66%&lt;/td&gt;
    &lt;td&gt;95.69%&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&quot;positive&quot;&gt;
    &lt;td&gt;&lt;strong&gt;Miracle&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;92&lt;/td&gt;
    &lt;td&gt;4.31%&lt;/td&gt;
    &lt;td&gt;100.00%&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;This makes it worse: &lt;strong&gt;75% of companies won’t recover using this definition&lt;/strong&gt;. And only about 4% will make miraculous comebacks of Amazon’s order of magnitude.&lt;/p&gt;

&lt;h5 id=&quot;are-you-making-progress&quot;&gt;Are You Making Progress?&lt;/h5&gt;

&lt;p&gt;Remember that Albert provides us with an important caveat: we should “[f]ocus … on whether the company is making real progress.” But this can be tricky to surmise as an employee, for several reasons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You are in unavoidably close proximity to a coordinated propaganda campaign. It’s called &lt;em&gt;the company’s internal communications and morale efforts.&lt;/em&gt; You may find yourself thinking unreasonably positively about these things.&lt;/li&gt;
  &lt;li&gt;You are putting in hours at this company, and human nature compels us to confuse effort with progress.&lt;/li&gt;
  &lt;li&gt;Remember that we’re talking about a public company. So unless you’re an officer, you’ll have a difficult time of getting detailed information about how much progress the company is really making. And of course timing trades on such information would be &lt;em&gt;illegal&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We should agree that the outlook here is going to be hazy at best, and self-deception is a hazard.&lt;/p&gt;

&lt;h5&gt;The Base Rate Fallacy&amp;rsquo;s Perverse Tyranny Over the American &lt;a ref=&quot;#f4&quot; href=&quot;#f4&quot; class=&quot;footnote&quot;&gt;[4]&lt;/a&gt; Mind&lt;/h5&gt;

&lt;p&gt;If there is any line of reasoning that really drives me crazy, it’s the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A series of cosmically unlikely events has unfolded.&lt;/li&gt;
  &lt;li&gt;This is submitted as evidence that &lt;em&gt;it can happen to anyone.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Examples of this are everywhere. Someone is going to win powerball, therefore it makes sense to buy tickets. Barack Obama was elected president, therefore systematic racism is toothless. Mark Zuckerberg struck it rich, so you’ve just gotta have faith.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;http://i.imgur.com/0Jb88Db.png&quot; alt=&quot;By the way this guy also thinks that picking your own numbers gives you a higher chance of winning.&quot; /&gt;
  &lt;figcaption&gt;By the way this guy also thinks that picking your own numbers gives you a higher chance of winning.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;In looking to Amazon (or Google, Facebook, Netflix, or dear god &lt;em&gt;Apple&lt;/em&gt;) as consolation in the event that a company has experienced a decline in share price, we make the following mistake. &lt;strong&gt;The probability that successful companies have stumbled in their past is not the probability that a company will succeed, having stumbled.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This isn’t a call for nihilism if you find yourself in such a situation. Far from it—it’s a call to realize that the odds are now against you, and to behave proactively.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;The code and data for this article is available &lt;a href=&quot;https://github.com/mcfunley/shaken-stocks&quot;&gt;here, on Github&lt;/a&gt;. It’s a bit sloppy and hastily written, sorry. We started from a dataset of companies traded on the NASDAQ that experienced a decline of 50% or more off of a previous high. our dataset started around the year 2000.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ol class=&quot;foot-note-list&quot;&gt;
    &lt;li&gt;
      &lt;a name=&quot;f1&quot;&gt;&lt;/a&gt;
      You may notice that I&apos;ve switched questions, from &quot;are you working at Amazon&quot; to &quot;is the company Amazon.&quot; Calculating the odds that you are working at Amazon would of course require a richer dataset that includes company headcounts, and I am a lazy man.
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a name=&quot;f2&quot;&gt;&lt;/a&gt;
      Investors can more easily scale their commitment to the company by having a diverse portfolio. Employees and officers, however, give 100% of their labor to the company. And in the event that things go well, a large percentage of their net worth derives from the value of the company. Officers have a high floor on their returns, via guaranteed bonuses, parachute provisions, accelerated vesting schedules in the event of termination, and so on. Employees on the other hand are screwed.
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a name=&quot;f3&quot;&gt;&lt;/a&gt;
      This refinement doesn&apos;t apply to all employees. Early employees probably have strike prices that are very low, and can make money despite a large drop in the share price. But at a newly-minted public company, &lt;em&gt;most&lt;/em&gt; employees are probably new, and &lt;em&gt;most&lt;/em&gt; employees are therefore affected.
    &lt;/li&gt;
    &lt;li&gt;&lt;a name=&quot;f4&quot;&gt;&lt;/a&gt;I know that Albert Wenger is German.&lt;/li&gt;
&lt;/ol&gt;

	</content>
    <author>
      <name>Dan McKinley</name>
      <uri>https://mcfunley.com/</uri>
    </author>
  </entry>
  
  <entry>
    <title type="html">Are My Push Notifications Driving Users Away?</title>
    <link href="https://mcfunley.com/are-my-push-notifications-driving-users-away" rel="alternate" type="text/html" title="Are My Push Notifications Driving Users Away?" />
    <published>2015-11-24T00:00:00+00:00</published>
    <updated>2015-11-24T00:00:00+00:00</updated>
    
    <id>urn:uuid:a59ff9ac-0706-8ec9-179c-c94d942094ad</id>
    <content type="html" xml:base="https://mcfunley.com/are-my-push-notifications-driving-users-away">
	  &lt;p&gt;In response to &lt;a href=&quot;https://twitter.com/kellan&quot;&gt;Kellan’s&lt;/a&gt; musing about push notifications on twitter, &lt;a href=&quot;http://twitter.com/mccue&quot;&gt;Adam McCue&lt;/a&gt; asked an interesting question:&lt;/p&gt;
&lt;blockquote align=&quot;center&quot; class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/kellan&quot;&gt;@kellan&lt;/a&gt; &lt;a href=&quot;https://twitter.com/mcfunley&quot;&gt;@mcfunley&lt;/a&gt; what&apos;s the best way to do this?&lt;/p&gt;&amp;mdash; Adam McCue (@mccue) &lt;a href=&quot;https://twitter.com/mccue/status/669386580059099136&quot;&gt;November 25, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;I quickly realized that fitting an answer into tweets was hopeless, so here’s a stab at it in longform.&lt;/p&gt;

&lt;h5 id=&quot;how-would-we-do-this&quot;&gt;How would we do this?&lt;/h5&gt;

&lt;p&gt;Let’s come up with a really simple way to figure this out for the case of a single irritating notification. This is limited, but the procedure described ought to be possible for anyone with a web-enabled mobile app. We need:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A way to divide the user population into two groups: a treatment group that will see the ad notification, and a control group that won’t.&lt;/li&gt;
  &lt;li&gt;A way to decide if users have disappeared or not.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To make the stats as simple as possible, we need (1) to be random and we need (2) to be a &lt;a href=&quot;http://homepages.wmich.edu/~bwagner/StatReview/Binomial/binomial%20probabilities.htm&quot;&gt;binomial measure&lt;/a&gt; (i.e. “yes or no,” “true or false,” “heads or tails,” etc).&lt;/p&gt;

&lt;p&gt;To do valid (simple) stats, we also want our trials to be &lt;em&gt;independent&lt;/em&gt; of each other. If we send the same users the notifications over and over, we can’t consider each of those to be independent trials. It’s easy to intuit why that might be: I’m more likely to uninstall your app after the fifth time you’ve bugged me &lt;a href=&quot;#f0&quot; ref=&quot;#f0&quot; class=&quot;footnote&quot;&gt;[1]&lt;/a&gt;. So we need to consider disjoint sets of users on every day of the experiment.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;http://i.imgur.com/Dy6loZn.png&quot; /&gt;
  &lt;figcaption&gt;Does this hurt us or help us? &lt;a href=&quot;http://store-xkcd-com.myshopify.com/products/try-science&quot;&gt;Let&apos;s try science.&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;How to randomly select users to receive the treatment under these conditions is up to you, but one simple way that should be broadly applicable is just hashing the user ID. Say we need 100 groups of users: both a treatment and control group for 50 days. We can hash the space of all user ID’s down to 100 buckets &lt;a ref=&quot;#f1&quot; href=&quot;#f1&quot; class=&quot;footnote&quot;&gt;[2]&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So how do we decide if users have disappeared? Well, most mobile apps make http requests to a server somewhere. Let’s say that we’ll consider a user to be “bounced” if they don’t make a request to us again within some interval.&lt;/p&gt;

&lt;p&gt;Some people will probably look at the notification we sent (resulting in a request or two), but be annoyed and subsequently uninstall. We wouldn’t want to count such a user as happy. So let’s say we’ll look for usage between one day after the notification and six days after the notification. Users that send us a request during that interval will be considered “retained.”&lt;/p&gt;

&lt;figure&gt;
  &lt;img class=&quot;max-width-75 mb-max-width-100&quot; src=&quot;http://i.imgur.com/b7Nl6Ve.png&quot; /&gt;
  &lt;figcaption&gt;Some examples of our binomial model. We&apos;ll call a user retained if they request data from us on any of days two through seven counting from the time of the notification. User 4 in this example is not retained because (s)he only requests data on the day the notification was sent.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;To run the experiment properly you need to know how long to run it. That depends a lot on your personal details: how many people use your app, how often they use it, how valuable the ad notification is, and how severe uninstalls are for you. For the sake of argument, let’s say:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We can find disjoint sets of 10,000 users making requests to us on any given day, daily, for a long time.&lt;/li&gt;
  &lt;li&gt;(As discussed) we’ll put 50% of them in the treatment group.&lt;/li&gt;
  &lt;li&gt;60% of people active on a given day currently will be active between one and six days after that.&lt;/li&gt;
  &lt;li&gt;We want to be 80% sure that if we move that figure by plus or minus 1%, we’ll know about it.&lt;/li&gt;
  &lt;li&gt;We want to be 95% sure that if we measure a deviation in plus or minus 1% that it’s for real.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://www.experimentcalculator.com/#lift=1&amp;amp;conversion=60&amp;amp;visits=10000&amp;amp;percentage=50&quot;&gt;If you plug all of that into experiment calculator&lt;/a&gt; &lt;a href=&quot;#f2&quot; ref=&quot;#f2&quot; class=&quot;footnote&quot;&gt;[3]&lt;/a&gt; it will tell you that you need 21 days of data to satisfy those conditions. But since we use a trailing time interval in our measurement, we need to wait 28 days.&lt;/p&gt;

&lt;h5 id=&quot;an-example-result&quot;&gt;An example result&lt;/h5&gt;

&lt;p&gt;Ok, so let’s say we’ve run that experiment and we have some results. And suppose that they look like this:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Group&lt;/th&gt;
      &lt;th&gt;Users&lt;/th&gt;
      &lt;th&gt;Retained users&lt;/th&gt;
      &lt;th&gt;Bounced users&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tr&gt;
    &lt;td&gt;Treatment&lt;/td&gt;
    &lt;td&gt;210,000&lt;/td&gt;
    &lt;td&gt;110,144&lt;/td&gt;
    &lt;td&gt;99,856&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Control&lt;/td&gt;
    &lt;td&gt;210,000&lt;/td&gt;
    &lt;td&gt;126,033&lt;/td&gt;
    &lt;td&gt;83,967&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;Using these figures we can see that we’ve apparently decreased retention by 12.6%, and a &lt;a href=&quot;https://gist.github.com/mcfunley/b7b9320e7f0bafcbaab2&quot;&gt;test of proportions&lt;/a&gt; confirms that this difference is statistically significant. Oops!&lt;/p&gt;

&lt;h5 id=&quot;ive-run-the-experiment-now-what&quot;&gt;I’ve run the experiment, now what?&lt;/h5&gt;
&lt;p&gt;You most likely have created the ad notification because you had some positive goal in mind. Maybe the intent was to get people to buy something. If that’s the case, then you should do an additional computation to see if what you gained in positive engagement outweighs what you’ve lost in users.&lt;/p&gt;

&lt;h5 id=&quot;i-dont-think-i-have-enough-data&quot;&gt;I don’t think I have enough data.&lt;/h5&gt;
&lt;p&gt;You might not have 420,000 users to play with, but that doesn’t mean that the experiment is necessarily pointless. In our example we were trying to detect changes of &lt;em&gt;plus or minus one percent.&lt;/em&gt; You can detect more dramatic changes in behavior with smaller sets of users. Good luck!&lt;/p&gt;

&lt;h5 id=&quot;im-sending-reactivation-notifications-to-inactive-users-can-i-still-measure-uninstalls&quot;&gt;I’m sending reactivation notifications to inactive users. Can I still measure uninstalls?&lt;/h5&gt;
&lt;p&gt;In our thought experiment, we took it as a given that users were likely to use your app. Then we considered the effect of push notifications on that behavior. But one reason you might be contemplating sending the notifications is that they’re &lt;em&gt;not&lt;/em&gt; using it, and you are trying to reactivate them.&lt;/p&gt;

&lt;p&gt;If that’s the case, you might want to just measure reactivations instead. After all, the difference between a user who has your app installed but never opens it and a user that has uninstalled your app is mostly philosophical. But you may also be able to design an experiment to detect uninstalls. And that might be sensible if very, very infrequent use of your app can still be valuable.&lt;/p&gt;

&lt;p&gt;A procedure that might work for you here is to send two notifications. You could then use delivery failures of secondary notifications as a proxy metric for uninstalls.&lt;/p&gt;

&lt;h5 id=&quot;i-want-to-learn-more-about-this-stuff&quot;&gt;I want to learn more about this stuff.&lt;/h5&gt;
&lt;p&gt;As it happens, I recorded &lt;a href=&quot;http://shop.oreilly.com/product/0636920040149.do&quot;&gt;a video with O’Reilly&lt;/a&gt; that covers things like this in more detail. You might also like &lt;a href=&quot;http://www.evanmiller.org/&quot;&gt;Evan Miller’s blog&lt;/a&gt; and &lt;a href=&quot;http://ai.stanford.edu/~ronnyk/ronnyk-bib.html&quot;&gt;Ron Kohavi’s publications&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;ol class=&quot;footnote-list&quot;&gt;
  &lt;li&gt;&lt;a name=&quot;f0&quot;&gt;&lt;/a&gt;&lt;em&gt;&quot;How many notifications are too many?&quot;&lt;/em&gt; is a separate question, not considered here.&lt;/li&gt;
  &lt;li&gt;&lt;a name=&quot;f1&quot;&gt;&lt;/a&gt;If you do many experiments, you want to avoid using the _same_ sets of people as control and treatment. So include something based on the name of the experiment in the hash. So if user 12345 is in the treatment for 50/50 experiment X, she should be only 50% likely (not 100% likely) to be in the treatment for some other 50/50 experiment Y.&lt;/li&gt;
  &lt;li&gt;&lt;a name=&quot;f2&quot;&gt;&lt;/a&gt;The labeling on the tool is for experiments on a website. The math is the same though.&lt;/li&gt;
&lt;/ol&gt;

	</content>
    <author>
      <name>Dan McKinley</name>
      <uri>https://mcfunley.com/</uri>
    </author>
  </entry>
  
  <entry>
    <title type="html">Choose Boring Technology (Expanded, Slide-Based Edition)</title>
    <link href="https://mcfunley.com/choose-boring-technology-slides" rel="alternate" type="text/html" title="Choose Boring Technology (Expanded, Slide-Based Edition)" />
    <published>2015-07-27T00:00:00+00:00</published>
    <updated>2015-07-27T00:00:00+00:00</updated>
    
    <id>urn:uuid:1432e359-01f1-977f-dd5a-0da6a2c55d5c</id>
    <content type="html" xml:base="https://mcfunley.com/choose-boring-technology-slides">
	  &lt;p&gt;I gave a spoken word version of &lt;a href=&quot;/choose-boring-technology&quot;&gt;Choose Boring Technology&lt;/a&gt; at OSCON in Portland last week. Here are the slides:&lt;/p&gt;

&lt;div class=&quot;speakerdeck-container&quot;&gt;
	&lt;div class=&quot;speakerdeck-loading&quot;&gt;&lt;/div&gt;
	&lt;script id=&quot;choose-boring-technology-deck&quot; async=&quot;&quot; class=&quot;speakerdeck-embed&quot; data-id=&quot;454e3843ac184d3f8bcb0e4a50d3811a&quot; data-ratio=&quot;1.31113956466069&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;
	&lt;script&gt;$(&apos;#choose-boring-technology-deck&apos;).speakerdeck();&lt;/script&gt;
&lt;/div&gt;

	</content>
    <author>
      <name>Dan McKinley</name>
      <uri>https://mcfunley.com/</uri>
    </author>
  </entry>
  
  <entry>
    <title type="html">Choose Boring Technology</title>
    <link href="https://mcfunley.com/choose-boring-technology" rel="alternate" type="text/html" title="Choose Boring Technology" />
    <published>2015-03-30T00:00:00+00:00</published>
    <updated>2015-03-30T00:00:00+00:00</updated>
    
    <id>urn:uuid:d62993ee-047e-c4a5-1b11-e986b22566b8</id>
    <content type="html" xml:base="https://mcfunley.com/choose-boring-technology">
	  &lt;p&gt;Probably the single best thing to happen to me in my career was having had &lt;a href=&quot;http://laughingmeme.org/&quot;&gt;Kellan&lt;/a&gt; placed in charge of me. I stuck around long enough to see Kellan’s technical decisionmaking start to bear fruit. I learned a great deal &lt;em&gt;from&lt;/em&gt; this, but I also learned a great deal as a &lt;em&gt;result&lt;/em&gt; of this. I would not have been free to become the engineer that wrote &lt;a href=&quot;/data-driven-products-lean-startup-2014&quot;&gt;Data Driven Products Now!&lt;/a&gt; if Kellan had not been there to so thoroughly stick the landing on technology choices.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;http://i.imgur.com/FRQKLCy.jpg&quot; /&gt;
  &lt;figcaption&gt;Being inspirational as always.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;In the year since leaving Etsy, I’ve resurrected my ability to care about technology. And my thoughts have crystallized to the point where I can write them down coherently. What follows is a distillation of the Kellan gestalt, which will hopefully serve to horrify him only slightly.&lt;/p&gt;

&lt;h5 id=&quot;embrace-boredom&quot;&gt;Embrace Boredom.&lt;/h5&gt;
&lt;p&gt;Let’s say every company gets about three innovation tokens. You can spend these however you want, but the supply is fixed for a long while. You might get a few more &lt;em&gt;after&lt;/em&gt; you achieve a &lt;a href=&quot;http://rc3.org/2015/03/24/the-pleasure-of-building-big-things/&quot;&gt;certain level of stability and maturity&lt;/a&gt;, but the general tendency is to overestimate the contents of your wallet. Clearly this model is approximate, but I think it helps.&lt;/p&gt;

&lt;p&gt;If you choose to write your website in NodeJS, you just spent one of your innovation tokens. If you choose to use &lt;a href=&quot;/why-mongodb-never-worked-out-at-etsy&quot;&gt;MongoDB&lt;/a&gt;, you just spent one of your innovation tokens. If you choose to use &lt;a href=&quot;https://consul.io/&quot;&gt;service discovery tech that’s existed for a year or less&lt;/a&gt;, you just spent one of your innovation tokens. If you choose to write your own database, oh god, you’re in trouble.&lt;/p&gt;

&lt;p&gt;Any of those choices might be sensible if you’re a javascript consultancy, or a database company. But you’re probably not. You’re probably working for a company that is at least ostensibly &lt;a href=&quot;https://www.etsy.com&quot;&gt;rethinking global commerce&lt;/a&gt; or &lt;a href=&quot;https://stripe.com&quot;&gt;reinventing payments on the web&lt;/a&gt; or pursuing some other suitably epic mission. In that context, devoting any of your limited attention to innovating ssh is an excellent way to fail. Or at best, delay success &lt;a ref=&quot;#f1&quot; href=&quot;#f1&quot; class=&quot;footnote&quot;&gt;[1]&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What counts as boring? That’s a little tricky. “Boring” should not be conflated with “bad.” There is technology out there that is both boring and bad &lt;a ref=&quot;#f2&quot; href=&quot;#f2&quot;&gt;[2]&lt;/a&gt;. You should not use any of that. But there are many choices of technology that are boring and good, or at least good enough. MySQL is boring. Postgres is boring. PHP is boring. Python is boring. Memcached is boring. Squid is boring. Cron is boring.&lt;/p&gt;

&lt;p&gt;The nice thing about boringness (so constrained) is that the capabilities of these things are well understood. But more importantly, their failure modes are well understood. Anyone who knows me well will understand that it’s only with a overwhelming sense of malaise that I now invoke the spectre of Don Rumsfeld, but I must.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;http://i.imgur.com/n8ElWr3.jpg&quot; /&gt;
  &lt;figcaption&gt;To be clear, fuck this guy.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;When choosing technology, you have both known unknowns and unknown unknowns &lt;a ref=&quot;#f3&quot; href=&quot;#f3&quot; class=&quot;footnote&quot;&gt;[3]&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A known unknown is something like: &lt;em&gt;we don’t know what happens when this database hits 100% CPU.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;An unknown unknown is something like: &lt;em&gt;geez it didn’t even occur to us that &lt;a href=&quot;http://www.evanjones.ca/jvm-mmap-pause.html&quot;&gt;writing stats would cause GC pauses&lt;/a&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both sets are typically non-empty, even for tech that’s existed for decades. But for shiny new technology the magnitude of unknown unknowns is significantly larger, and this is important.&lt;/p&gt;

&lt;h5 id=&quot;optimize-globally&quot;&gt;Optimize Globally.&lt;/h5&gt;

&lt;p&gt;I unapologetically think a bias in favor of boring technology is a good thing, but it’s not the only factor that needs to be considered. Technology choices don’t happen in isolation. They have a scope that touches your entire team, organization, and the system that emerges from the sum total of your choices.&lt;/p&gt;

&lt;p&gt;Adding technology to your company comes with a cost. As an abstract statement this is obvious: if we’re already using Ruby, adding Python to the mix doesn’t feel sensible because the resulting complexity would outweigh Python’s marginal utility. But somehow when we’re talking about Python and Scala or MySQL and Redis people &lt;a href=&quot;http://martinfowler.com/bliki/PolyglotPersistence.html&quot;&gt;lose their minds&lt;/a&gt;, discard all constraints, and start raving about using the best tool for the job.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/coda/status/580531932393504768&quot;&gt;Your function in a nutshell&lt;/a&gt; is to map business problems onto a solution space that involves choices of software. If the choices of software were truly without baggage, you could indeed pick a whole mess of locally-the-best tools for your assortment of problems.&lt;/p&gt;

&lt;figure&gt;
&lt;svg width=&quot;423px&quot; height=&quot;420px&quot; viewBox=&quot;0 0 423 420&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:sketch=&quot;http://www.bohemiancoding.com/sketch/ns&quot;&gt;
    &lt;!-- Generator: Sketch 3.2.2 (9983) - http://www.bohemiancoding.com/sketch --&gt;
    &lt;title&gt;Crazy&lt;/title&gt;
    &lt;desc&gt;Created with Sketch.&lt;/desc&gt;
    &lt;defs&gt;&lt;/defs&gt;
    &lt;g id=&quot;Page-1&quot; stroke=&quot;none&quot; stroke-width=&quot;1&quot; fill=&quot;none&quot; fill-rule=&quot;evenodd&quot; sketch:type=&quot;MSPage&quot;&gt;
        &lt;g id=&quot;Crazy&quot; sketch:type=&quot;MSLayerGroup&quot; transform=&quot;translate(1.000000, -4.000000)&quot;&gt;
            &lt;ellipse id=&quot;Solutions&quot; stroke=&quot;#979797&quot; sketch:type=&quot;MSShapeGroup&quot; cx=&quot;341.5&quot; cy=&quot;229.5&quot; rx=&quot;79.5&quot; ry=&quot;193.5&quot;&gt;&lt;/ellipse&gt;
            &lt;ellipse id=&quot;Problems&quot; stroke=&quot;#979797&quot; sketch:type=&quot;MSShapeGroup&quot; cx=&quot;79.5&quot; cy=&quot;229.5&quot; rx=&quot;79.5&quot; ry=&quot;193.5&quot;&gt;&lt;/ellipse&gt;
            &lt;g id=&quot;arrows&quot; transform=&quot;translate(45.000000, 77.000000)&quot; stroke=&quot;#D0011B&quot; stroke-width=&quot;3&quot; fill=&quot;#D0011B&quot; stroke-linecap=&quot;square&quot;&gt;
                &lt;path d=&quot;M19.5,26.5 L255.502121,26.5&quot; id=&quot;Line&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-decoration-1&quot; d=&quot;M255.5,26.5 C251.72,25.45 248.48,24.55 244.7,23.5 C244.7,25.6 244.7,27.4 244.7,29.5 C248.48,28.45 251.72,27.55 255.5,26.5 C255.5,26.5 255.5,26.5 255.5,26.5 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M19.5,26.5 L245.5,84.5&quot; id=&quot;Line-2&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-2-decoration-1&quot; d=&quot;M245.186355,84.419507 C241.786016,82.4628271 238.87144,80.7856729 235.471101,78.8289931 C234.94908,80.8630761 234.501633,82.6065758 233.979612,84.6406589 C237.901972,84.5632557 241.263995,84.4969101 245.186355,84.419507 C245.186355,84.419507 245.186355,84.419507 245.186355,84.419507 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M19.5,26.5 L299.5,0.5&quot; id=&quot;Line-3&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-3-decoration-1&quot; d=&quot;M299.296324,0.518912741 C295.435434,-0.177093062 292.126099,-0.773669465 288.265208,-1.46967527 C288.459373,0.621329291 288.6258,2.41361891 288.819965,4.50462347 C292.486691,3.10962472 295.629598,1.9139115 299.296324,0.518912741 C299.296324,0.518912741 299.296324,0.518912741 299.296324,0.518912741 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M19.5,26.5 L255.502121,26.5&quot; id=&quot;Line-4&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-4-decoration-1&quot; d=&quot;M255.5,26.5 C251.72,25.45 248.48,24.55 244.7,23.5 C244.7,25.6 244.7,27.4 244.7,29.5 C248.48,28.45 251.72,27.55 255.5,26.5 C255.5,26.5 255.5,26.5 255.5,26.5 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M63.5,79.5 L256.5,34.5&quot; id=&quot;Line-5&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-5-decoration-1&quot; d=&quot;M256.327927,34.5401208 C252.408243,34.3758734 249.048513,34.2350899 245.128829,34.0708426 C245.605677,36.1159872 246.014403,37.8689684 246.49125,39.9141131 C249.934087,38.0332157 252.88509,36.4210181 256.327927,34.5401208 C256.327927,34.5401208 256.327927,34.5401208 256.327927,34.5401208 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M63.5,79.5 L301.5,116.5&quot; id=&quot;Line-6&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-6-decoration-1&quot; d=&quot;M300.651315,116.368062 C297.077479,114.749853 294.014192,113.362816 290.440356,111.744607 C290.117761,113.819681 289.84125,115.598316 289.518655,117.67339 C293.415086,117.216525 296.754884,116.824927 300.651315,116.368062 C300.651315,116.368062 300.651315,116.368062 300.651315,116.368062 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M63.5,79.5 L254.5,209.5&quot; id=&quot;Line-7&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-7-decoration-1&quot; d=&quot;M254.464216,209.475644 C251.930146,206.480751 249.758085,203.9137 247.224014,200.918806 C246.042418,202.654845 245.02962,204.142878 243.848024,205.878916 C247.563691,207.137771 250.748549,208.216789 254.464216,209.475644 C254.464216,209.475644 254.464216,209.475644 254.464216,209.475644 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M0.5,115.5 L251.5,216.5&quot; id=&quot;Line-8&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-8-decoration-1&quot; d=&quot;M250.981706,216.291443 C247.866929,213.906268 245.19712,211.861831 242.082342,209.476656 C241.298409,211.424847 240.626466,213.094725 239.842533,215.042916 C243.741243,215.4799 247.082995,215.854459 250.981706,216.291443 C250.981706,216.291443 250.981706,216.291443 250.981706,216.291443 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M54.5,176.5 L300.5,193.5&quot; id=&quot;Line-10&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-10-decoration-1&quot; d=&quot;M299.914697,193.459552 C296.216079,192.151452 293.045835,191.030224 289.347217,189.722124 C289.202441,191.817128 289.078346,193.612845 288.93357,195.707849 C292.776964,194.920945 296.071303,194.246456 299.914697,193.459552 C299.914697,193.459552 299.914697,193.459552 299.914697,193.459552 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M54.5,176.5 L288.5,273.5&quot; id=&quot;Line-11&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-11-decoration-1&quot; d=&quot;M288.215373,273.382013 C285.125578,270.964562 282.477183,268.892461 279.387389,266.47501 C278.58323,268.41494 277.89395,270.077737 277.089791,272.017667 C280.983745,272.495188 284.321419,272.904492 288.215373,273.382013 C288.215373,273.382013 288.215373,273.382013 288.215373,273.382013 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M11.5,231.5 L287.5,283.5&quot; id=&quot;Line-12&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-12-decoration-1&quot; d=&quot;M286.658962,283.341544 C283.138722,281.609837 280.121373,280.125516 276.601133,278.393809 C276.212321,280.457502 275.879054,282.226381 275.490243,284.290073 C279.399294,283.958088 282.74991,283.673529 286.658962,283.341544 C286.658962,283.341544 286.658962,283.341544 286.658962,283.341544 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M11.5,231.5 L249.5,223.5&quot; id=&quot;Line-13&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-13-decoration-1&quot; d=&quot;M249.36566,223.504516 C245.552519,222.582095 242.284113,221.79145 238.470973,220.869029 C238.541521,222.967844 238.601991,224.766828 238.67254,226.865643 C242.415132,225.689248 245.623068,224.68091 249.36566,223.504516 C249.36566,223.504516 249.36566,223.504516 249.36566,223.504516 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M0.5,115.5 L248.5,156.5&quot; id=&quot;Line-9&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-9-decoration-1&quot; d=&quot;M248.138638,156.440259 C244.580524,154.78777 241.530711,153.371351 237.972596,151.718862 C237.630068,153.790739 237.336473,155.566633 236.993945,157.63851 C240.894588,157.219122 244.237996,156.859647 248.138638,156.440259 C248.138638,156.440259 248.138638,156.440259 248.138638,156.440259 Z&quot;&gt;&lt;/path&gt;
            &lt;/g&gt;
            &lt;g id=&quot;problems&quot; transform=&quot;translate(33.000000, 91.000000)&quot; stroke=&quot;#979797&quot; fill=&quot;#4990E2&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;
                &lt;circle id=&quot;Oval-3&quot; cx=&quot;30&quot; cy=&quot;14&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-4&quot; cx=&quot;74&quot; cy=&quot;66&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-5&quot; cx=&quot;14&quot; cy=&quot;103&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-6&quot; cx=&quot;64&quot; cy=&quot;163&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-7&quot; cx=&quot;23&quot; cy=&quot;219&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
            &lt;/g&gt;
            &lt;g id=&quot;Solutions&quot; transform=&quot;translate(293.000000, 68.000000)&quot; stroke=&quot;#979797&quot; fill=&quot;#7ED321&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;
                &lt;circle id=&quot;Oval-8&quot; cx=&quot;26&quot; cy=&quot;37&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-9&quot; cx=&quot;74&quot; cy=&quot;69&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-10&quot; cx=&quot;14&quot; cy=&quot;99&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-11&quot; cx=&quot;71&quot; cy=&quot;129&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-12&quot; cx=&quot;18&quot; cy=&quot;168&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-13&quot; cx=&quot;71&quot; cy=&quot;205&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-14&quot; cx=&quot;22&quot; cy=&quot;229&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-15&quot; cx=&quot;66&quot; cy=&quot;14&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-16&quot; cx=&quot;58&quot; cy=&quot;289&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
            &lt;/g&gt;
            &lt;text id=&quot;Problems&quot; sketch:type=&quot;MSTextLayer&quot; font-family=&quot;Lato&quot; font-size=&quot;18&quot; font-weight=&quot;normal&quot; fill=&quot;#000000&quot;&gt;
                &lt;tspan x=&quot;43&quot; y=&quot;18&quot;&gt;Problems&lt;/tspan&gt;
            &lt;/text&gt;
            &lt;text id=&quot;Technical-Solutions&quot; sketch:type=&quot;MSTextLayer&quot; font-family=&quot;Lato&quot; font-size=&quot;18&quot; font-weight=&quot;normal&quot; fill=&quot;#000000&quot;&gt;
                &lt;tspan x=&quot;262&quot; y=&quot;18&quot;&gt;Technical Solutions&lt;/tspan&gt;
            &lt;/text&gt;
        &lt;/g&gt;
    &lt;/g&gt;
&lt;/svg&gt;
  &lt;figcaption class=&quot;text-center&quot;&gt;The way you might choose technology in a world where choices are cheap: &quot;pick the right tool for the job.&quot;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;But of course, the baggage exists. We call the baggage “operations” and to a lesser extent “cognitive overhead.” You have to monitor the thing. You have to figure out unit tests. You need to know the first thing about it to hack on it. You need an init script. I could go on for days here, and all of this adds up fast.&lt;/p&gt;

&lt;figure&gt;
&lt;svg width=&quot;423px&quot; height=&quot;420px&quot; viewBox=&quot;0 0 423 420&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:sketch=&quot;http://www.bohemiancoding.com/sketch/ns&quot;&gt;
    &lt;!-- Generator: Sketch 3.2.2 (9983) - http://www.bohemiancoding.com/sketch --&gt;
    &lt;title&gt;Sane&lt;/title&gt;
    &lt;desc&gt;Created with Sketch.&lt;/desc&gt;
    &lt;defs&gt;&lt;/defs&gt;
    &lt;g id=&quot;Page-1&quot; stroke=&quot;none&quot; stroke-width=&quot;1&quot; fill=&quot;none&quot; fill-rule=&quot;evenodd&quot; sketch:type=&quot;MSPage&quot;&gt;
        &lt;g id=&quot;Sane&quot; sketch:type=&quot;MSLayerGroup&quot; transform=&quot;translate(1.000000, -4.000000)&quot;&gt;
            &lt;ellipse id=&quot;Solutions-3&quot; stroke=&quot;#979797&quot; sketch:type=&quot;MSShapeGroup&quot; cx=&quot;341.5&quot; cy=&quot;229.5&quot; rx=&quot;79.5&quot; ry=&quot;193.5&quot;&gt;&lt;/ellipse&gt;
            &lt;ellipse id=&quot;Problems-2&quot; stroke=&quot;#979797&quot; sketch:type=&quot;MSShapeGroup&quot; cx=&quot;79.5&quot; cy=&quot;229.5&quot; rx=&quot;79.5&quot; ry=&quot;193.5&quot;&gt;&lt;/ellipse&gt;
            &lt;g id=&quot;arrows&quot; transform=&quot;translate(51.000000, 102.000000)&quot; stroke=&quot;#D0011B&quot; stroke-width=&quot;3&quot; fill=&quot;#D0011B&quot; stroke-linecap=&quot;square&quot;&gt;
                &lt;path d=&quot;M13.5,1.5 L249.5,1.5&quot; id=&quot;Line-14&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-14-decoration-1&quot; d=&quot;M249.5,1.5 C245.72,0.45 242.48,-0.45 238.7,-1.5 C238.7,0.6 238.7,2.4 238.7,4.5 C242.48,3.45 245.72,2.55 249.5,1.5 C249.5,1.5 249.5,1.5 249.5,1.5 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M13.5,1.5 L248.5,120.5&quot; id=&quot;Line-15&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-15-decoration-1&quot; d=&quot;M248.132239,120.313772 C245.23431,117.669362 242.75037,115.402724 239.852441,112.758314 C238.903738,114.631803 238.090564,116.237651 237.141861,118.111141 C240.988493,118.882062 244.285607,119.542851 248.132239,120.313772 C248.132239,120.313772 248.132239,120.313772 248.132239,120.313772 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M57.5,54.5 L249.5,8.5&quot; id=&quot;Line-17&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-17-decoration-1&quot; d=&quot;M249.078398,8.6010088 C245.157787,8.46060711 241.797264,8.34026282 237.876654,8.19986114 C238.365932,10.2420674 238.785314,11.9925299 239.274592,14.0347362 C242.705924,12.1329316 245.647066,10.5028134 249.078398,8.6010088 C249.078398,8.6010088 249.078398,8.6010088 249.078398,8.6010088 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M0.5,92.5 L240.5,137.5&quot; id=&quot;Line-20&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-20-decoration-1&quot; d=&quot;M240.320814,137.466403 C236.79906,135.737776 233.780414,134.256096 230.25866,132.52747 C229.871654,134.591501 229.539934,136.360671 229.152928,138.424703 C233.061688,138.089298 236.412054,137.801808 240.320814,137.466403 C240.320814,137.466403 240.320814,137.466403 240.320814,137.466403 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M57.5,52.5 L242.5,129.5&quot; id=&quot;Line-18&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-18-decoration-1&quot; d=&quot;M242.1449,129.352202 C239.058585,126.930309 236.413173,124.854402 233.326858,122.432509 C232.51991,124.371281 231.828241,126.033085 231.021292,127.971856 C234.914555,128.454977 238.251637,128.869081 242.1449,129.352202 C242.1449,129.352202 242.1449,129.352202 242.1449,129.352202 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M13.5,1.5 L248.5,183.5&quot; id=&quot;Line-16&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-16-decoration-1&quot; d=&quot;M248.313733,183.355742 C245.968119,180.211065 243.957592,177.515627 241.611978,174.37095 C240.32613,176.031249 239.223974,177.454363 237.938125,179.114662 C241.569588,180.59904 244.68227,181.871364 248.313733,183.355742 C248.313733,183.355742 248.313733,183.355742 248.313733,183.355742 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M0.5,92.5 L253.5,15.5&quot; id=&quot;Line-19&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-19-decoration-1&quot; d=&quot;M253.061904,15.6333334 C249.139957,15.7294168 245.778289,15.8117739 241.856342,15.9078572 C242.467781,17.9168724 242.991872,19.6388854 243.603311,21.6479005 C246.913819,19.542802 249.751397,17.7384319 253.061904,15.6333334 C253.061904,15.6333334 253.061904,15.6333334 253.061904,15.6333334 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M0.5,92.5 L244.5,191.5&quot; id=&quot;Line-21&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-21-decoration-1&quot; d=&quot;M244.204221,191.379991 C241.09632,188.985863 238.432405,186.933753 235.324504,184.539624 C234.534968,186.485551 233.858223,188.153489 233.068687,190.099416 C236.966124,190.547618 240.306784,190.93179 244.204221,191.379991 C244.204221,191.379991 244.204221,191.379991 244.204221,191.379991 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M49.5,150.5 L258.5,19.5&quot; id=&quot;Line-22&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-22-decoration-1&quot; d=&quot;M257.939322,19.8514296 C254.178828,20.9692764 250.955547,21.9274308 247.195052,23.0452775 C248.310345,24.8246376 249.26631,26.3498034 250.381603,28.1291635 C253.026805,25.2319566 255.29412,22.7486365 257.939322,19.8514296 C257.939322,19.8514296 257.939322,19.8514296 257.939322,19.8514296 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M3.5,207.5 L265.5,22.5&quot; id=&quot;Line-23&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-23-decoration-1&quot; d=&quot;M264.902063,22.9222075 C261.208605,24.2448071 258.042784,25.378464 254.349327,26.7010636 C255.560618,28.4165147 256.598868,29.8869013 257.81016,31.6023523 C260.292326,28.5643016 262.419897,25.9602582 264.902063,22.9222075 C264.902063,22.9222075 264.902063,22.9222075 264.902063,22.9222075 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M3.5,207.5 L243.5,147.5&quot; id=&quot;Line-24&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-24-decoration-1&quot; d=&quot;M243.125198,147.593701 C239.203396,147.491836 235.841853,147.404523 231.920052,147.302658 C232.429376,149.339957 232.865941,151.086214 233.375265,153.123513 C236.787742,151.188079 239.712721,149.529135 243.125198,147.593701 C243.125198,147.593701 243.125198,147.593701 243.125198,147.593701 Z&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M3.5,207.5 L244.5,201.5&quot; id=&quot;Line-25&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;&lt;/path&gt;
                &lt;path id=&quot;Line-25-decoration-1&quot; d=&quot;M244.425346,201.501859 C240.620384,200.546263 237.358988,199.72718 233.554026,198.771584 C233.606292,200.870934 233.651091,202.670376 233.703357,204.769726 C237.456053,203.625972 240.67265,202.645612 244.425346,201.501859 C244.425346,201.501859 244.425346,201.501859 244.425346,201.501859 Z&quot;&gt;&lt;/path&gt;
            &lt;/g&gt;
            &lt;g id=&quot;problems-2&quot; transform=&quot;translate(33.000000, 91.000000)&quot; stroke=&quot;#979797&quot; fill=&quot;#4990E2&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;
                &lt;circle id=&quot;Oval-3&quot; cx=&quot;30&quot; cy=&quot;14&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-4&quot; cx=&quot;74&quot; cy=&quot;66&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-5&quot; cx=&quot;14&quot; cy=&quot;103&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-6&quot; cx=&quot;64&quot; cy=&quot;163&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-7&quot; cx=&quot;23&quot; cy=&quot;219&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
            &lt;/g&gt;
            &lt;g id=&quot;Solutions-2&quot; transform=&quot;translate(293.000000, 68.000000)&quot; stroke=&quot;#979797&quot; fill=&quot;#7ED321&quot; sketch:type=&quot;MSShapeGroup&quot;&gt;
                &lt;circle id=&quot;Oval-8&quot; cx=&quot;26&quot; cy=&quot;37&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-9&quot; cx=&quot;74&quot; cy=&quot;69&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-10&quot; cx=&quot;14&quot; cy=&quot;99&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-11&quot; cx=&quot;71&quot; cy=&quot;129&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-12&quot; cx=&quot;18&quot; cy=&quot;168&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-13&quot; cx=&quot;71&quot; cy=&quot;205&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-14&quot; cx=&quot;22&quot; cy=&quot;229&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-15&quot; cx=&quot;66&quot; cy=&quot;14&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-16&quot; cx=&quot;58&quot; cy=&quot;289&quot; r=&quot;14&quot;&gt;&lt;/circle&gt;
            &lt;/g&gt;
            &lt;text id=&quot;Problems-3&quot; sketch:type=&quot;MSTextLayer&quot; font-family=&quot;Lato&quot; font-size=&quot;18&quot; font-weight=&quot;normal&quot; fill=&quot;#000000&quot;&gt;
                &lt;tspan x=&quot;43&quot; y=&quot;18&quot;&gt;Problems&lt;/tspan&gt;
            &lt;/text&gt;
            &lt;text id=&quot;Technical-Solutions-2&quot; sketch:type=&quot;MSTextLayer&quot; font-family=&quot;Lato&quot; font-size=&quot;18&quot; font-weight=&quot;normal&quot; fill=&quot;#000000&quot;&gt;
                &lt;tspan x=&quot;262&quot; y=&quot;18&quot;&gt;Technical Solutions&lt;/tspan&gt;
            &lt;/text&gt;
        &lt;/g&gt;
    &lt;/g&gt;
&lt;/svg&gt;
&lt;figcaption class=&quot;text-center&quot;&gt;The way you choose technology in the world where operations are a serious concern (i.e., &quot;reality&quot;). &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The problem with “best tool for the job” thinking is that it takes a myopic view of the words “best” and “job.” Your job is keeping the company in business, god damn it. And the “best” tool is the one that occupies the “least worst” position for as many of your problems as possible.&lt;/p&gt;

&lt;p&gt;It is basically always the case that the long-term costs of keeping a system working reliably vastly exceed any inconveniences you encounter while building it. Mature and productive developers understand this.&lt;/p&gt;

&lt;h5 id=&quot;choose-new-technology-sometimes&quot;&gt;Choose New Technology, Sometimes.&lt;/h5&gt;
&lt;p&gt;Taking this reasoning to its &lt;em&gt;reductio ad absurdum&lt;/em&gt; would mean picking Java, and then trying to implement a website without using anything else at all. And that would be crazy. You need some means to add things to your toolbox.&lt;/p&gt;

&lt;p&gt;An important first step is to acknowledge that this is a process, and a conversation. New tech eventually has company-wide effects, so adding tech is a decision that requires company-wide visibility. Your organizational specifics may force the conversation, or &lt;a href=&quot;https://twitter.com/mcfunley/status/578603932949164032&quot;&gt;they may facilitate developers adding new databases and queues without talking to anyone&lt;/a&gt;. One way or another you have to set cultural expectations that &lt;strong&gt;this is something we all talk about&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;One of the most worthwhile exercises I recommend here is to &lt;strong&gt;consider how you would solve your immediate problem without adding anything new&lt;/strong&gt;. First, posing this question should detect the situation where the “problem” is that someone really wants to use the technology. If that is the case, you should immediately abort.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;http://i.imgur.com/rmdSx.gif&quot; /&gt;
  &lt;figcaption&gt;I just watched a webinar about this graph database, we should try it out.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;It can be amazing how far a small set of technology choices can go. The answer to this question in practice is almost never “we can’t do it,” it’s usually just somewhere on the spectrum of “well, we could do it, but it would be too hard” &lt;a ref=&quot;#f4&quot; href=&quot;#f4&quot; class=&quot;footnote&quot;&gt;[4]&lt;/a&gt;. If you think you can’t accomplish your goals with what you’ve got now, you are probably just not thinking creatively enough.&lt;/p&gt;

&lt;p&gt;It’s helpful to &lt;strong&gt;write down exactly what it is about the current stack that makes solving the problem prohibitively expensive and difficult.&lt;/strong&gt; This is related to the previous exercise, but it’s subtly different.&lt;/p&gt;

&lt;p&gt;New technology choices might be purely additive (for example: “we don’t have caching yet, so let’s add memcached”). But they might also overlap or replace things you are already using. If that’s the case, you should &lt;strong&gt;set clear expectations about migrating old functionality to the new system.&lt;/strong&gt; The policy should typically be “we’re committed to migrating,” with a proposed timeline. The intention of this step is to keep wreckage at manageable levels, and to avoid proliferating locally-optimal solutions.&lt;/p&gt;

&lt;p&gt;This process is not daunting, and it’s not much of a hassle. It’s a handful of questions to fill out as homework, followed by a meeting to talk about it. I think that if a new technology (or a new service to be created on your infrastructure) can pass through this gauntlet unscathed, adding it is fine.&lt;/p&gt;

&lt;h5 id=&quot;just-ship&quot;&gt;Just Ship.&lt;/h5&gt;
&lt;p&gt;Polyglot programming is sold with the promise that letting developers choose their own tools with complete freedom will make them more effective at solving problems. This is a naive definition of the problems at best, and motivated reasoning at worst. The weight of day-to-day operational &lt;a href=&quot;https://twitter.com/handler&quot;&gt;toil&lt;/a&gt; this creates crushes you to death.&lt;/p&gt;

&lt;p&gt;Mindful choice of technology gives engineering minds real freedom: the freedom to &lt;a href=&quot;/effective-web-experimentation-as-a-homo-narrans&quot;&gt;contemplate bigger questions&lt;/a&gt;. Technology for its own sake is snake oil.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Update, July 27th 2015: I wrote a talk based on this article. You can see it &lt;a href=&quot;http://boringtechnology.club&quot;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ol class=&quot;footnote-list&quot;&gt;
    &lt;li&gt;
      &lt;a name=&quot;f1&quot;&gt;&lt;/a&gt;
      Etsy in its early years suffered from this pretty badly. We hired a bunch of Python
      programmers and decided that we needed to find something for them to do in Python,
      and the only thing that came to mind was creating a pointless middle layer that
      &lt;a href=&quot;https://www.youtube.com/watch?v=eenrfm50mXw&quot;&gt;required years of effort to amputate&lt;/a&gt;.
      Meanwhile, the 90th percentile search latency was about two minutes.
      &lt;a href=&quot;http://www.sec.gov/Archives/edgar/data/1370637/000119312515077045/d806992ds1.htm&quot;&gt;Etsy didn&apos;t fail&lt;/a&gt;,
      but it went several years without shipping anything at all. So it took longer to succeed than it needed to.
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a name=&quot;f2&quot;&gt;&lt;/a&gt;
      We often casually refer to the boring/bad intersection of doom as
      &amp;ldquo;enterprise software,&amp;rdquo; but that terminology may be imprecise.
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a name=&quot;f3&quot;&gt;&lt;/a&gt;
      In saying this Rumsfeld was either intentionally or unintentionally
      alluding to &lt;a href=&quot;http://en.wikipedia.org/wiki/I_know_that_I_know_nothing&quot;&gt;the Socratic Paradox&lt;/a&gt;.
      Socrates was by all accounts a thoughtful individual in a number of ways that Rumsfeld is not.
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a name=&quot;f4&quot;&gt;&lt;/a&gt;
      &lt;p&gt;A good example of this from my experience is
        &lt;a href=&quot;https://speakerdeck.com/mcfunley/etsy-activity-feed-architecture&quot;&gt;Etsy&amp;rsquo;s activity
        feeds&lt;/a&gt;. When we built this feature, we were working pretty hard to consolidate
        most of Etsy onto PHP, MySQL, Memcached, and Gearman (a PHP job server).
        It was much more complicated to implement the feature on that stack than it
        might have been with something like Redis (or &lt;a href=&quot;https://aphyr.com/posts/283-call-me-maybe-redis&quot;&gt;maybe not&lt;/a&gt;).
        But it is absolutely possible to build activity feeds on that stack.
      &lt;/p&gt;
      &lt;p&gt;An amazing thing happened with that project: our attention turned
        elsewhere for several years. During that time, activity feeds scaled up
        20x while &lt;em&gt;nobody was watching it at all.&lt;/em&gt; We made no changes
        whatsoever specifically targeted at activity feeds, but everything worked
        out fine as usage exploded because we were using a shared platform.
        This is the long-term benefit of restraint in technology choices in a nutshell.
      &lt;/p&gt;
      &lt;p&gt;This isn&amp;rsquo;t an absolutist position--while activity feeds stored in
      memcached was judged to be practical, implementing full text search with
      faceting in raw PHP wasn&apos;t. So Etsy used Solr.
      &lt;/p&gt;
    &lt;/li&gt;
&lt;/ol&gt;

	</content>
    <author>
      <name>Dan McKinley</name>
      <uri>https://mcfunley.com/</uri>
    </author>
  </entry>
  
  <entry>
    <title type="html">Data Driven Products: Lean Startup 2014</title>
    <link href="https://mcfunley.com/data-driven-products-lean-startup-2014" rel="alternate" type="text/html" title="Data Driven Products: Lean Startup 2014" />
    <published>2015-01-27T00:00:00+00:00</published>
    <updated>2015-01-27T00:00:00+00:00</updated>
    
    <id>urn:uuid:f99e4b0b-e3c6-2adc-4d38-eccef199f91a</id>
    <content type="html" xml:base="https://mcfunley.com/data-driven-products-lean-startup-2014">
	  &lt;p&gt;Here’s a video of me doing a slightly-amended version of my &lt;a href=&quot;/data-driven-products-now&quot;&gt;Data Driven Products&lt;/a&gt; talk at the &lt;a href=&quot;http://leanstartup.co/&quot;&gt;Lean Startup Conference&lt;/a&gt; back in December.&lt;/p&gt;

&lt;iframe class=&quot;video&quot; src=&quot;//www.youtube.com/embed/SZOeV-S-2co?list=PL1M9pu1POlelJcmYWGv_Oq5FPr0J1XKa5&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;I am told I &lt;a href=&quot;http://en.wikipedia.org/wiki/High_rising_terminal&quot;&gt;upspeak&lt;/a&gt;? You be the judge.&lt;/p&gt;

	</content>
    <author>
      <name>Dan McKinley</name>
      <uri>https://mcfunley.com/</uri>
    </author>
  </entry>
  
  <entry>
    <title type="html">Thoughts on the Technical Track</title>
    <link href="https://mcfunley.com/thoughts-on-the-technical-track" rel="alternate" type="text/html" title="Thoughts on the Technical Track" />
    <published>2014-12-09T00:00:00+00:00</published>
    <updated>2014-12-09T00:00:00+00:00</updated>
    
    <id>urn:uuid:4468bf6c-533e-e431-97ad-16ad3a6bad8b</id>
    <content type="html" xml:base="https://mcfunley.com/thoughts-on-the-technical-track">
	  &lt;p&gt;I saw &lt;a href=&quot;http://lizthedeveloper.com/how-to-reward-skilled-coders-with-something-other-than-people-management&quot;&gt;lizTheDeveloper’s post&lt;/a&gt; about technical leadership at Simple and I realized that I’ve been meaning to write about this for a while. I hope to persuade you that there are a number of systemic biases working against a healthy technical career path. I don’t think that they’re insurmountable, and I don’t disagree with Liz’s post. But I’ve never heard of a company clearing all of these hurdles at once.&lt;/p&gt;

&lt;p&gt;I was the first person at Etsy with the title of “Principal Engineer,” which was the technical equivalent to a directorship (i.e., one level below CTO). I’m not saying this to toot my own horn, but rather so that it’s understood that the following comes from someone that was the beneficiary of an existing system.&lt;/p&gt;

&lt;p&gt;(Incidentally, I think Etsy is an example of a company whose heart is in the right place, and it’s not my intention to single them out.)&lt;/p&gt;

&lt;h5 id=&quot;to-review-management-is-a-job&quot;&gt;To Review, Management is a Job&lt;/h5&gt;
&lt;p&gt;My views on the merits of having a technical track align with those of many people in our industry. Management is a different job, with different skills. They’re not necessarily more &lt;em&gt;difficult&lt;/em&gt; skills, they’re just &lt;em&gt;different&lt;/em&gt;. By and large they’re unrelated to the day-to-day labor of the people who build technology products.&lt;/p&gt;

&lt;p&gt;It doesn’t make any sense to divert your technical talent into a discipline where they will need to stop doing technical work. (That’s in the event that they intend to be effective managers, which I concede might be an unrealistic expectation.)&lt;/p&gt;

&lt;p&gt;Other people have made this case, so I’ll just proceed as if we agree that there must be a way forward for people that are great programmers other than to simply graduate into not programming at all.&lt;/p&gt;

&lt;p&gt;Having that way forward is an ideal. There is always a gap between our ideals and reality, and we cannot act as though we’ve solved a problem simply by articulating it.&lt;/p&gt;

&lt;h4 id=&quot;fundamental-asymmetries&quot;&gt;Fundamental Asymmetries&lt;/h4&gt;

&lt;h5 id=&quot;management-just-happens&quot;&gt;Management Just Happens&lt;/h5&gt;
&lt;p&gt;I have had management responsibility thrust upon me at least four times over the course of my career, and at no point has that been my goal. It just happens. Do you want to be a manager? I will now tell you the secret to becoming a manager in a growing company: &lt;em&gt;just wait.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You have a manager. Eventually, your manager will accrue too many responsibilities, and they will freak out. They will need somebody to take over some of their reports, and that lucky warm body is you.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/homer-manager.png&quot; /&gt;
  &lt;figcaption class=&quot;text-center&quot;&gt;Good hair: also helpful.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;It is entirely plausible to become a manager accidentally. It might even be the norm.&lt;/p&gt;

&lt;h5 id=&quot;technical-track-promotions-are-post-hoc&quot;&gt;Technical Track Promotions are Post-Hoc&lt;/h5&gt;
&lt;p&gt;The process for minting a new manager is: &lt;em&gt;crap, we need another manager&lt;/em&gt;. There’s no symmetrical forcing function pushing people into the upper ranks of technical leadership.&lt;/p&gt;

&lt;p&gt;Mentorship and technical feedback are things everyone does on a functioning engineering team. A technical track “promotion” is merely additional recognition given to someone who is already performing that role notably well.&lt;/p&gt;

&lt;p&gt;If the job is already getting done, then filling the job is clearly not a pressing need. Technical promotions are something that happen when it’s convenient, which is generally never.&lt;/p&gt;

&lt;h5 id=&quot;stumping&quot;&gt;Stumping&lt;/h5&gt;
&lt;p&gt;Between the founding of the United States and the end of the 19th century, it was considered tacky for presidential candidates to personally campaign for the job. Instead, they staged an elaborate farce in which they reluctantly answered the call of the nation to serve. Trying to intentionally get a promotion into the technical track is pretty much just like this.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/garfield.jpg&quot; /&gt;
  &lt;figcaption class=&quot;text-center&quot;&gt;Getting promoted in the technical track is kind of like being James Garfield.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Your work must be recognized, and this is the rub. Let me rephrase: “someone with the power to bestow promotions has to be your fan.” To be promoted you have to be a good mentor, but you also have to worry about playing to an audience. That may be executives, or it may be your peers (and potential competitors). Regardless, you’re running a weird campaign in which actually saying anything directly about wanting the job would be gauche.&lt;/p&gt;

&lt;p&gt;The most qualified individual contributors may become &lt;em&gt;known&lt;/em&gt; without ever really doing this on purpose, but that doesn’t say much for this as a tenable career goal of the sort that can be counted on.&lt;/p&gt;

&lt;h4 id=&quot;the-problem-of-credibility&quot;&gt;The Problem of Credibility&lt;/h4&gt;

&lt;h5 id=&quot;society-applies-to-idealistic-tech-companies-too&quot;&gt;Society Applies to Idealistic Tech Companies, Too&lt;/h5&gt;
&lt;p&gt;American society is not a classless oasis. That’s a lie we tell ourselves. And the person who knows what everyone else gets paid and can fire you is not in your class.&lt;/p&gt;

&lt;p&gt;A technical job does not have equivalent prestige to a management position with an equivalent salary just because you say it does. Even if you conquer this within your own company, it’s not true in the rest of the industry, and it’s not true in the world at large. In the world our parents live in, it’s a big deal to be somebody else’s boss.&lt;/p&gt;

&lt;p&gt;You’re hiring people from the world at large all the time. Without continuous effort a technical track decays to its ground state, where the jobs are second class.&lt;/p&gt;

&lt;h5 id=&quot;halfhearted-managers-are-the-worst&quot;&gt;Halfhearted Managers are The Worst&lt;/h5&gt;
&lt;p&gt;The natural result of a system in which technical promotions can’t be counted on and are viewed as suspiciously-maybe-second-class anyway is that people who don’t really give a shit about management wind up going into management. Given the choice of waiting for a technical promotion that may never arrive and taking an offer to manage others, almost everyone is going to take the bird in the hand.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/lumberg.jpg&quot; /&gt;
  &lt;figcaption&gt;Once you let the soulless suspendered lizard in the building, you are screwed.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Managers that have no passion for management are a blight on society. I can say this because I have been one of them. I was never a good manager, and for that I apologize to anyone that ever had to report to me.&lt;/p&gt;

&lt;p&gt;I am not an isolated case. Many people in management are frankly terrible at it. And they would rather have technical track jobs anyway, but they have no idea how to make the switch. A credible technical track is a great way to ensure a higher level of satisfaction and competency among the &lt;em&gt;managers&lt;/em&gt;.&lt;/p&gt;

&lt;h5 id=&quot;ratios-observed-in-the-wild-make-no-sense&quot;&gt;Ratios Observed in the Wild Make No Sense&lt;/h5&gt;
&lt;p&gt;You don’t need to take my reasoning about the intrinsic pressure favoring management bloat at face value. You can actually look at the ratio of managers to technical employees at your company.&lt;/p&gt;

&lt;p&gt;At one point, I was alone at my level. There were five theoretically-equivalent directors at the time. The ratio was at least that bad on the lower rungs. (I have no idea if this is still true at that company, and it might not be.)&lt;/p&gt;

&lt;p&gt;For that to make sense, we’d have to believe a few things that don’t stand up to scrutiny. First, we’d have to believe in a very high proclivity among engineers to manage, and I think that betrays our expectations. Not very many of us got into this business with the hope of not actually building things.&lt;/p&gt;

&lt;p&gt;Second, we’d have to believe that although it took five directors to effectively manage the organization, only one technical leader was required to advise the same group on the details of the work they do every day.&lt;/p&gt;

&lt;h4 id=&quot;what-might-help&quot;&gt;What Might Help?&lt;/h4&gt;

&lt;h5 id=&quot;promotions-should-not-be-miraculous-and-rare&quot;&gt;Promotions Should Not Be Miraculous and Rare&lt;/h5&gt;
&lt;p&gt;Of course, it wouldn’t make logical sense to say that the ratio of individual contributors to managers at a given level must be 1:1. I honestly don’t know if 1:2 or 2:1 is closer to correct. The answer is probably contingent, and the relationship might not be linear.&lt;/p&gt;

&lt;p&gt;But I think it’s important for any company that takes the ideal of having a tenable technical track seriously to put a stake in the ground on this question. It’s hard to build a credible technical track, and we need a baseline to grade ourselves against.&lt;/p&gt;

&lt;p&gt;I don’t think that proceeding with the assumption that leaders will just naturally emerge produces the best results. Adding a self-imposed quota achieves accountability. It acknowledges the possibility that problems can lie in the system of recognition, and not only in the talents of the people in the pool for promotions.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“Do we think that we hire smart people here? Yes? Then we should be able to find N of them worthy of promotion for every manager. If we can’t then the problem is most likely to be found in how we’re recognizing people for their work.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I know that the word “quota” is &lt;em&gt;verboten&lt;/em&gt; for many, and I gleefully await your flames.&lt;/p&gt;

&lt;h5 id=&quot;address-prestige-with-superpowers&quot;&gt;Address Prestige with Superpowers&lt;/h5&gt;
&lt;p&gt;If we think about why managers and technical employees on even salary footing may be perceived to not truly be equals, it comes down to superpowers. The managers have special capabilities that the technical employees don’t: hiring, firing, compensation, and the like. Is it possible to give technical employees a different set of superpowers, to address the prestige problem?&lt;/p&gt;

&lt;p&gt;Maybe. I don’t think that I have seen this done correctly yet. If I had superpowers, they were:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The ability to work on whatever I wanted.&lt;/li&gt;
  &lt;li&gt;The ability to talk to anyone I wanted.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These were indeed powerful, but using them to create positive action was difficult. It would have been easy for me to opt out of projects that I didn’t believe in and to do my own thing. I did often do my own thing. But I also worked on projects that I didn’t believe in, because I knew that opting out was a selfish act. One of my friends would just be forced to work on it in my place, and sometimes leadership is about jumping on grenades.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/dark-knight.jpg&quot; /&gt;
  &lt;figcaption&gt;I guess there are worse superpowers. For example, the ability to allow oneself to be framed for the good of the city.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Talking to other teams made it possible for me to point out places where resources weren’t intelligently allocated. But this also begat mostly negative actions. “Hey, this isn’t the best way to use these folks,” I’d find myself saying all the time. It was draining, and a bummer.&lt;/p&gt;

&lt;p&gt;Giving the technical leadership deeper involvement in the planning process could address this. Of course that would involve dragging the technical leadership to meetings, which I admit is tricky.&lt;/p&gt;

&lt;h5 id=&quot;in-closing&quot;&gt;In Closing&lt;/h5&gt;

&lt;p&gt;I hope I’ve demonstrated that creating a career path outside of management for technical employees is only the beginning of your problems. It’s a good and necessary step, but it’s not an achievement by itself.&lt;/p&gt;

&lt;p&gt;I’d love to hear from anyone with better ideas. These issues are difficult and I don’t claim to have all of the right answers.&lt;/p&gt;

	</content>
    <author>
      <name>Dan McKinley</name>
      <uri>https://mcfunley.com/</uri>
    </author>
  </entry>
  
  <entry>
    <title type="html">Data Driven Products Now!</title>
    <link href="https://mcfunley.com/data-driven-products-now" rel="alternate" type="text/html" title="Data Driven Products Now!" />
    <published>2014-09-18T00:00:00+00:00</published>
    <updated>2014-09-18T00:00:00+00:00</updated>
    
    <id>urn:uuid:e89c5588-5740-8e4f-715e-0cc2377e0fa9</id>
    <content type="html" xml:base="https://mcfunley.com/data-driven-products-now">
	  &lt;p&gt;Back when I was at Etsy, I did a presentation internally about the craft of sizing opportunities. I finally got around to writing a public incarnation of that talk. Here it is:&lt;/p&gt;

&lt;div class=&quot;speakerdeck-container&quot;&gt;
	&lt;div class=&quot;speakerdeck-loading&quot;&gt;&lt;/div&gt;
	&lt;script id=&quot;data-driven-products-now-deck&quot; async=&quot;&quot; class=&quot;speakerdeck-embed&quot; data-id=&quot;13b6d210211a01327085562b5da4981b&quot; data-ratio=&quot;1.0&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;
	&lt;script&gt;$(&apos;#data-driven-products-now-deck&apos;).speakerdeck();&lt;/script&gt;
&lt;/div&gt;

	</content>
    <author>
      <name>Dan McKinley</name>
      <uri>https://mcfunley.com/</uri>
    </author>
  </entry>
  
  <entry>
    <title type="html">Manual Delivery</title>
    <link href="https://mcfunley.com/manual-delivery" rel="alternate" type="text/html" title="Manual Delivery" />
    <published>2014-03-10T00:00:00+00:00</published>
    <updated>2014-03-10T00:00:00+00:00</updated>
    
    <id>urn:uuid:c153dff4-755b-8a55-4e30-3150a8fba544</id>
    <content type="html" xml:base="https://mcfunley.com/manual-delivery">
	  &lt;p&gt;The person on build rotation, or the nightly &lt;em&gt;schlimazel&lt;/em&gt; I suppose, went into a hot 5’x8’ closet containing an ancient computer. This happened after everyone else had left, so around 8:30PM. Although in crunch time that was more like 11:30PM. And we were in crunch time at one point for a stretch of a year and a half. “That release left a mark,” my friend Matt used to say. In a halfhearted attempt at fairness to those who will take this post as a grave insult, I’ll concede that my remembrance of these details is the work of The Mark.&lt;/p&gt;

&lt;p&gt;Anyway, the build happened after quitting time. This guaranteed that if anything went wrong, you were on your own. Failure in giving birth to the test build implied that the 20 people in Gurgaon comprising the QA department would show up for work in a matter of hours having nothing to do.&lt;/p&gt;

&lt;p&gt;You used a tool called “VBBuild.” This was a GUI tool, rumored to be written by Russians:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/vbbuild.gif&quot; alt=&quot;VBBuild&quot; /&gt;&lt;/p&gt;

&lt;p&gt;VBBuild did mysterious COM stuff to create the DLLs that nobody at the time understood properly. It presented you with dozens of popups even when it was working perfectly, and you had to be present to dismiss each of them. The production of executable binary code was all smoke and lasers. And, apparently, popups.&lt;/p&gt;

&lt;p&gt;Developers wrote code using the more familiar VB6 IDE. The IDE could run interpreted code as an interactive debugger, but it could not produce finished libraries in a particularly repeatable or practical way. So the release compilation was different in many respects from what programmers were doing at their desks. Were there problems that existed in one of these environments but not the other? Yes, sometimes. I recall that we had a single function that weighed in at around 70,000 lines. The IDE would give up and execute this function even if it contained clear syntax errors. That was the kind of discovery which, while exciting, was wasted in solitude somewhere past midnight as you attempted to lex and parse the code for keeps.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/vb6.jpg&quot; alt=&quot;VB6&quot; /&gt;
  &lt;figcaption&gt;Isaiah 2:4: &quot;And he shall displace VB6 in search engine results with a book written by vegans.&quot;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Developers weren’t really in the habit of doing complete pulls from source control. And who could blame them, since doing this whitescreened your machine for half an hour. They were also never in any particular hurry to commit, at least until it was time to do the test build. As there was no continuous integration at the time, this was the first time that all of the code was compiled in several days.&lt;/p&gt;

&lt;p&gt;Often &lt;em&gt;[ed: always]&lt;/em&gt; there were compilation errors to be resolved. We were using Visual Sourcesafe, so people could be holding an exclusive lock on files containing the errors. Typically, this problem was addressed by walking around the office an hour before build time and reminding everyone to check their files in. In the event that someone forgot &lt;em&gt;[ed: every time]&lt;/em&gt;, there was an administrative process for unlocking locked files. Not everyone had the necessary rights to do this, but happily, I did.&lt;/p&gt;

&lt;p&gt;By design, the build tried to assume an exclusive lock on all of the code. As a result, nobody could work while the build was in progress. Sometimes, the person performing the build would check all of the files out and not check them back in. So your first act the morning after a build might be to walk over to the build closet and release the source files from their chains.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/vss.gif&quot; alt=&quot;Visual Sourcesafe&quot; /&gt;
  &lt;figcaption&gt;The Visual Sourcesafe documentation strongly advised against its use on a team of more than four programmers, and apparently this was not a joke.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Deployment required dozens of manual steps that I will never be able to remember. When the build was done, you copied DLLs over to the test machines and registered them there. By “copied” I mean that you selected them in an explorer window, pressed “Ctrl-C,” and then pressed “Ctrl-V” to paste them into another. There was no batch script worked out to do this more efficiently. Ok, this is a slight lie. There had &lt;em&gt;been&lt;/em&gt; a script, but was put out to pasture on account of a history of hideous malfunction. And popups. On remote machines sometimes, where they could only be dismissed by wind and ghosts.&lt;/p&gt;

&lt;p&gt;Registration involved connecting to each machine with Remote Desktop and right clicking all the DLLs. You could skip a machine or just one library, and things would be very screwy indeed.&lt;/p&gt;

&lt;p&gt;The production release, which happened roughly twice a year under ideal conditions, was identical to this but with the added complexity of about eight more servers receiving the build. And we might take the opportunity to add completely new machines, which would not necessarily have the same patch levels for, oh, like 700,000 windows components that were relied upon.&lt;/p&gt;

&lt;p&gt;Given eight or ten machines, the probability of a mistake on at least one of the servers approached unity. So the days and weeks following a production release were generally spent sussing out all of the minute differences and misconfigurations on the production machines. There would be catastrophic bugs that affected a tiny sliver of requests, under highly specific server conditions, and &lt;em&gt;only if executed on one server out of eight&lt;/em&gt;. I was an expert at debugging in disassembly at the time. Upon leaving the job, I thought that this was pretty badass. But in the seven years since–do you know what? It’s never come up.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/sandp.jpg&quot; alt=&quot;Nonstandard &amp;amp; poorly reproducible builds is more like it am I right&quot; /&gt;
  &lt;figcaption&gt;&quot;The code could be &lt;a href=&quot;http://www.bloomberg.com/news/2013-02-05/s-p-analyst-joked-of-bringing-down-the-house-ahead-of-collapse.html&quot;&gt;structured by cows&lt;/a&gt; and we would build it by hand.&quot;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;At one point I wrote a new script to perform the deployment. It was an abomination of XML to be sure, but it got the job done without all of the popups. I started doing the test build with this with some success and suggested that we use it for the production release. This was out of the question, I was told by one of my closer allies in the place. The production release was “too important to use a script.”&lt;/p&gt;

&lt;p&gt;The operating systems and supporting libraries on the machines were also set up by hand, by a separate team, working from printed notes. The results were similar. This is kind of another story.&lt;/p&gt;

&lt;p&gt;This all happened in 2003.&lt;/p&gt;

	</content>
    <author>
      <name>Dan McKinley</name>
      <uri>https://mcfunley.com/</uri>
    </author>
  </entry>
  
  <entry>
    <title type="html">Scalding at Etsy</title>
    <link href="https://mcfunley.com/scalding-at-etsy" rel="alternate" type="text/html" title="Scalding at Etsy" />
    <published>2014-03-02T00:00:00+00:00</published>
    <updated>2014-03-02T00:00:00+00:00</updated>
    
    <id>urn:uuid:b2555cf4-db74-983b-cde4-1da747c34460</id>
    <content type="html" xml:base="https://mcfunley.com/scalding-at-etsy">
	  &lt;p&gt;Here’s a presentation I gave about how Etsy wound up using &lt;a href=&quot;https://github.com/twitter/scalding&quot;&gt;Scalding&lt;/a&gt; for analysis. Given at the &lt;a href=&quot;http://www.meetup.com/cascading/&quot;&gt;San Francisco Cascading Meetup&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;speakerdeck-container&quot;&gt;
	&lt;div class=&quot;speakerdeck-loading&quot;&gt;&lt;/div&gt;
	&lt;script id=&quot;scalding-at-etsy-deck&quot; async=&quot;&quot; class=&quot;speakerdeck-embed&quot; data-id=&quot;309f7f7083c90131707926064ba69595&quot; data-ratio=&quot;1.0&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;
	&lt;script&gt;$(&apos;#scalding-at-etsy-deck&apos;).speakerdeck();&lt;/script&gt;
&lt;/div&gt;

	</content>
    <author>
      <name>Dan McKinley</name>
      <uri>https://mcfunley.com/</uri>
    </author>
  </entry>
  
  <entry>
    <title type="html">The Case for Secrecy in Web Experiments</title>
    <link href="https://mcfunley.com/the-case-for-secrecy-in-web-experiments" rel="alternate" type="text/html" title="The Case for Secrecy in Web Experiments" />
    <published>2014-01-16T00:00:00+00:00</published>
    <updated>2014-01-16T00:00:00+00:00</updated>
    
    <id>urn:uuid:b055f44c-2b32-1e5b-a566-4e79beea5e83</id>
    <content type="html" xml:base="https://mcfunley.com/the-case-for-secrecy-in-web-experiments">
	  &lt;p&gt;For four months ending in early 2011, I worked on team of six to redesign Etsy’s homepage. I don’t want to overstate the weight of this in the grand scheme of things, but hopes flew high. The new version was to look something like this:&lt;/p&gt;

&lt;figure&gt;
  &lt;a href=&quot;/assets/images/nhp2010-big.png&quot;&gt;
    &lt;img src=&quot;/assets/images/nhp2010-big.png&quot; class=&quot;max-width-50 mb-max-width-75&quot; /&gt;
  &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;There were a number of methodological problems with this, one of our very first web experiments. Our statistics muscles were out of practice, and we had a very difficult time &lt;a href=&quot;/whom-the-gods-would-destroy-they-first-give-real-time-analytics&quot;&gt;fighting the forces of darkness who wanted to enact radical redesigns after five minutes of real-time data&lt;/a&gt;. We had no toolchain for running experiments to speak of. The nascent analytics pipeline jobs failed every single night.&lt;/p&gt;

&lt;p&gt;But perhaps worst of all, we publicized the experiment. Well, “publicized” does not accurately convey the magnitude of what we did. We allowed visitors to join the treatment group using a magic URL. We proactively told our most engaged users about this. We tweeted the magic URL from the &lt;a href=&quot;http://www.twitter.com/etsy&quot;&gt;@Etsy account&lt;/a&gt;, which at that point had well over a million followers.&lt;/p&gt;

&lt;figure&gt;
  &lt;a href=&quot;http://www.etsy.com/teams/7718/questions/discuss/6848711/page/3?post_id=60817018&quot;&gt;&lt;img src=&quot;/assets/images/nhp-forum-post.png&quot; alt=&quot;The magic URL was chosen to celebrate the CEO&amp;apos;s 31st birthday.&quot; /&gt;&lt;/a&gt;
  &lt;figcaption&gt;The magic URL was chosen to celebrate the CEO&apos;s 31st birthday. None of this was Juliet&apos;s fault.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;This project was a disaster for many reasons. Nearly all of the core hypotheses turned out to be completely wrong. The work was thrown out as a total loss. Everyone involved learned valuable life lessons. I am here today to elaborate on one of these: &lt;em&gt;telling users about the experiment as it was running was a big mistake.&lt;/em&gt;&lt;/p&gt;

&lt;h5 id=&quot;the-diamond-forging-pressure-to-disclose-experiments&quot;&gt;The Diamond-Forging Pressure to Disclose Experiments&lt;/h5&gt;
&lt;p&gt;If you operate a website with an active community, and you do A/B testing, you might feel some pressure to disclose your work. And this seems like a proper thing to do, if your users are invested in your site in any serious way. They may notice anyway, and the &lt;a href=&quot;http://instagram.com/p/f3HLODBQdH/&quot;&gt;most common reaction to change on a beloved site&lt;/a&gt; tends to be varying degrees of panic.&lt;/p&gt;

&lt;figure&gt;
  &lt;a href=&quot;http://www.businessinsider.com/mark-zuckerberg-joins-facebook-group-i-automatically-hate-the-new-facebook-home-page-2009-10&quot;&gt;&lt;img alt=&quot;If you can&amp;apos;t beat &amp;apos;em, join &amp;apos;em&quot; class=&quot;thinborder&quot; src=&quot;/assets/images/mz-story.png&quot; /&gt;&lt;/a&gt;
  &lt;figcaption&gt;&quot;If you can&apos;t beat &apos;em, join &apos;em.&quot;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;As an honest administrator, your wish is to reassure your community that you have their best interest at heart. Transparency is the best policy!&lt;/p&gt;

&lt;p&gt;Except in this case. I think there’s a strong argument to be made against announcing the details of active experiments. It turns out to be easier for motivated users to overturn your experiment than you may believe. And disclosing experiments is work, and work that comes before real data should be minimized.&lt;/p&gt;

&lt;h5 id=&quot;online-protests-not-necessarily-a-waste-of-time&quot;&gt;Online Protests: Not Necessarily A Waste of Time&lt;/h5&gt;
&lt;p&gt;A fundamental reason that you should not publicize your A/B tests is that this can introduce &lt;a href=&quot;http://en.wikipedia.org/wiki/Bias_(statistics)&quot;&gt;bias&lt;/a&gt; that can affect your measurements. This can even overturn your results. There are many different ways for this to play out.&lt;/p&gt;

&lt;p&gt;Most directly, motivated users can just perform positive actions on the site if they believe that they are in their preferred experiment bucket. Even if the control and treatment groups are very large, the number of people completing a goal metric (such as purchasing) may be just a fraction of that. And the anticipated difference between any two treatments might be slight. It’s not hard to imagine how a small group of people could determine an outcome if they knew exactly what to do.&lt;/p&gt;

&lt;figure&gt;
  &lt;table&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;Group&lt;/th&gt;
        &lt;th&gt;Visits&lt;/th&gt;
        &lt;th&gt;Conversions (organic)&lt;/th&gt;
        &lt;th&gt;Conversions (gamed)&lt;/th&gt;
        &lt;th&gt;Proportion&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tr&gt;
      &lt;td&gt;Control&lt;/td&gt;
      &lt;td&gt;10000&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td class=&quot;negative&quot;&gt;10&lt;/td&gt;
      &lt;td class=&quot;positive&quot;&gt;0.0060&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;New&lt;/td&gt;
      &lt;td&gt;10000&lt;/td&gt;
      &lt;td&gt;55&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td class=&quot;negative&quot;&gt;0.0055&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;

  &lt;table class=&quot;max-width-50 mb-max-width-100&quot;&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;Control&lt;/th&gt;
        &lt;th&gt;New&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tr&gt;
      &lt;td&gt;10000 visits&lt;/td&gt;
      &lt;td&gt;10000 visits&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;50 organic conversions&lt;/td&gt;
      &lt;td&gt;50 organic conversions&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&quot;negative attention&quot;&gt;10 gamed conversions&lt;/td&gt;
      &lt;td&gt;0 gamed conversions&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&quot;positive&quot;&gt;0.60% converted&lt;/td&gt;
      &lt;td class=&quot;negative&quot;&gt;0.55% converted&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
  &lt;figcaption&gt;Figure 1: In some cases a small group of motivated users can change an outcome, even if the sample sizes are large.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;As the scope and details of an experiment become more fully understood, this gets easier to accomplish. But intentional, organized action is not the only possible source of bias.&lt;/p&gt;

&lt;p&gt;Even if users have no preference as to which version of a feature wins, some will still be curious. If you announce an experiment, visitors will engage with the feature immediately who otherwise would have stayed away. This well-intentioned interest could ironically make a winning feature appear to be a loss. Here’s an illustration of what that looks like.&lt;/p&gt;

&lt;figure&gt;
  &lt;table&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;Group&lt;/th&gt;
        &lt;th&gt;Visits (oblivious)&lt;/th&gt;
        &lt;th&gt;Visits (rubbernecking)&lt;/th&gt;
        &lt;th&gt;Visits (total)&lt;/th&gt;
        &lt;th&gt;Conversions&lt;/th&gt;
        &lt;th&gt;Proportion&lt;/th&gt;
      &lt;/tr&gt;
	&lt;/thead&gt;
    &lt;tr&gt;
      &lt;td&gt;Control&lt;/td&gt;
      &lt;td&gt;500&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;550&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td class=&quot;positive&quot;&gt;0.055&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;New&lt;/td&gt;
      &lt;td&gt;500&lt;/td&gt;
      &lt;td class=&quot;negative&quot;&gt;250&lt;/td&gt;
      &lt;td&gt;750&lt;/td&gt;
      &lt;td&gt;35&lt;/td&gt;
      &lt;td class=&quot;negative&quot;&gt;0.047&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;

  &lt;table class=&quot;max-width-50 mb-max-width-100&quot;&gt;
    &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Control&lt;/th&gt;
          &lt;th&gt;New&lt;/th&gt;
      &lt;/tr&gt;
	&lt;/thead&gt;
    &lt;tr&gt;
        &lt;td&gt;500 oblivious visits&lt;/td&gt;
        &lt;td&gt;500 oblivious visits&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;50 rubbernecking visits&lt;/td&gt;
      &lt;td class=&quot;negative&quot;&gt;250 rubbernecking visits&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;550 total visits&lt;/td&gt;
      &lt;td&gt;750 total visits&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;30 conversions&lt;/td&gt;
      &lt;td&gt;35 conversions&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&quot;positive&quot;&gt;5.5% converted&lt;/td&gt;
      &lt;td class=&quot;negative&quot;&gt;4.7% converted&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;

&lt;figcaption&gt;Figure 2: An example in which 100 engaged users are told about a new experiment. They are all curious and seek out the feature. Those seeing the new treatment visit the new feature more often just to look at it, skewing measurement.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;These examples both involve the distortion of numbers on one side of an experiment, but &lt;a href=&quot;http://en.wikipedia.org/wiki/Novelty_effect&quot;&gt;many other scenarios&lt;/a&gt; are possible. Users may change their behavior in either group for &lt;a href=&quot;http://en.wikipedia.org/wiki/Hawthorne_effect&quot;&gt;no reason other than that they believe they are being measured&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Good experimental practice requires that you isolate the intended change as the sole variable being tested. To accomplish this, you randomly assign visitors the new treatment or the old, controlling for all other factors. Informing visitors that they’re part of an experiment places this central assumption in considerable jeopardy.&lt;/p&gt;

&lt;h5 id=&quot;predicting-bias-is-hard&quot;&gt;Predicting Bias is Hard&lt;/h5&gt;
&lt;p&gt;“But,” you might say, “most users aren’t paying attention to our communiqués.” You may think that you can announce experiments, and only a small group of the most engaged people will notice. This is very likely true. But as I have already shown, the behavior of a small group cannot be dismissed out of hand.&lt;/p&gt;

&lt;p&gt;Obviously, this varies. There &lt;em&gt;are&lt;/em&gt; experiments in which a vocal minority cannot possibly bias results. But determining if this is true for any given experiment in advance is a difficult task. There is roughly one way for an experiment to be conducted correctly, and there are an infinite number of ways for it to be screwed.&lt;/p&gt;

&lt;p&gt;A/B tests are already complicated: bucketing, data collection, experimental design, &lt;a href=&quot;http://www.experimentcalculator.com&quot;&gt;experimental power&lt;/a&gt;, and analysis are all vulnerable to mistakes. From this point of view, &lt;em&gt;“is it safe to talk about this?”&lt;/em&gt; is just another brittle moving part.&lt;/p&gt;

&lt;h5 id=&quot;communication-plans-are-real-work&quot;&gt;Communication Plans are Real Work&lt;/h5&gt;
&lt;p&gt;Something I have come to appreciate over the years is the role of product marketing. I have been involved in many releases for which the act of explaining and gaining acceptance for a new feature constituted the &lt;em&gt;majority&lt;/em&gt; of the effort. Launches involve a lot more than pressing a deploy button. This is a big deal.&lt;/p&gt;

&lt;figure&gt;
  &lt;iframe class=&quot;video&quot; src=&quot;//player.vimeo.com/video/27836540?title=0&amp;amp;byline=0&amp;amp;portrait=0&amp;amp;color=ffffff&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;figcaption&gt;Product marketing: this is serious business.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;It also seems to be true that &lt;a href=&quot;https://twitter.com/Nat_S&quot;&gt;people who are skilled at this kind of work&lt;/a&gt; are hard to come by. You will be lucky to have a few of them, and this imposes limits on the number of major changes that you can make in any given year.&lt;/p&gt;

&lt;p&gt;It makes excellent sense to avoid wasting this resource on quite-possibly-fleeting experiments. It will delay their deployment, steal cycles from launches for finished features, and it will do these things in the service of work that may never see the light of day!&lt;/p&gt;

&lt;p&gt;Users will tend to view any experiment as presaging an imminent release, regardless of your intentions. Therefore, you will need to put together a relatively complete narrative explaining why the changes are positive at the outset. A “minimum viable announcement” probably won’t do. And you will need to execute this without the benefit of quantitative results to bolster your case.&lt;/p&gt;

&lt;h5 id=&quot;your-daily-reminder-that-experiments-fail&quot;&gt;Your Daily Reminder that Experiments Fail&lt;/h5&gt;
&lt;p&gt;Doing data-driven product work really does imply that you will not release changes that don’t meet some quantitative standard. In such an event you might tweak things and start over, or you might give up altogether. Announcing your running experiments is problematic given this reality.&lt;/p&gt;

&lt;p&gt;Obviously, product costs will be compounded by communication costs. Every time you retool an experiment, you will have to bear the additional weight of updating your community. Adding marginal effort makes it more difficult for humans to behave rationally and objectively. We have a name for this well-known pathology: &lt;a href=&quot;http://en.wikipedia.org/wiki/Sunk_costs&quot;&gt;the sunk cost fallacy&lt;/a&gt;. &lt;em&gt;We’ve put so much into this feature, we can’t just give up on it now.&lt;/em&gt;&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/images/pillory.jpg&quot; /&gt;
    &lt;figcaption&gt;The fear of admitting mistakes in public can be motivating.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Announcing experiments also has a way of raising the stakes. The prospect of backtracking with your users (and being perceived as admitting a mistake) only makes killing a bad feature less palatable. The last thing you need is additional temptation to delude yourself. You have plenty of this already. The danger of living in public is that it will turn a bad release that should be discarded into an inevitability.&lt;/p&gt;

&lt;h5 id=&quot;consistency-and-expectations&quot;&gt;Consistency and Expectations&lt;/h5&gt;
&lt;p&gt;Let’s say you’ve figured out workarounds for every issue I’ve raised so far. You are still going to want to run experiments that are not publicly declared.&lt;/p&gt;

&lt;p&gt;Some experiments are inherently controversial or exploratory. It may be perfectly legitimate to try changes that you would never release to learn more about your site. Removing a dearly beloved feature temporarily for half of new registrations is a good example of this. By doing so, you can measure the effect of that feature on lifetime value, and make better decisions with your marketing budget.&lt;/p&gt;

&lt;p&gt;Other experiments work only when they’re difficult to detect. Search ranking is a high-stakes arms race, and complete transparency can just make it easier for malicious users gain unfair advantages. It’s likely you’re going to want to run experiments on search ranking without disclosing them.&lt;/p&gt;

&lt;p&gt;It would be malpractice to give users the expectation that they will always know the state of running experiments. They will not have the complete picture. Leading them to believe otherwise can do more harm to your relationship than just having a consistent policy of remaining silent until features are ready for release.&lt;/p&gt;

&lt;h5 id=&quot;what-can-you-share&quot;&gt;What can you share?&lt;/h5&gt;
&lt;p&gt;Sharing too much too soon can doom your A/B tests. But this doesn’t mean that you are doomed to be locked in a steel cage match with your user base over them.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/cagematch.jpg&quot; alt=&quot;Forum moderators of the world: good luck.&quot; /&gt;
  &lt;figcaption&gt;Forum moderators of the world: good luck.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;You can do rigorous, well-controlled experiments and also announce features in advance of their release. You can give people time to acclimate to them. You can let users preview new functionality, and enable them at a slower pace. These practices all relate to &lt;em&gt;how&lt;/em&gt; a feature is released, and they are not necessarily in conflict with how you decide &lt;em&gt;which&lt;/em&gt; features should be released. It is important to decouple these concerns.&lt;/p&gt;

&lt;p&gt;You can and should share information about completed experiments. “What happened in the A/B test” should be a regular feature of your release notes. If you really have determined that your new functionality performs better than what it replaces, your users should have this data.&lt;/p&gt;

&lt;figure&gt;
  &lt;a href=&quot;https://www.etsy.com/teams/7716/announcements/discuss/12732278/page/1&quot;&gt;&lt;img src=&quot;/assets/images/nlp-announce.png&quot; /&gt;&lt;/a&gt;
  &lt;figcaption&gt;Plain-language A/B test results can ease user anxiety in launches.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Counterintuitively, perhaps, trust is also improved by sharing the details of failed experiments. If you only tell users about your victories, they have no reason to believe that you are behaving objectively. Who’s to say that you aren’t just making up your numbers? Showing your scars (as I tried to do with my homepage story above) can serve as a powerful declaration against interest.&lt;/p&gt;

&lt;h5 id=&quot;successful-testing-is-good-stewardship&quot;&gt;Successful Testing is Good Stewardship&lt;/h5&gt;
&lt;p&gt;Your job in product development, very broadly, is to make progress while striking a balance between short and long term concerns.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Users should be as happy as possible in the short term.&lt;/li&gt;
  &lt;li&gt;Your site should continue to exist in the long term.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The best interest of your users is ultimately served by making the correct changes to your product. Talking about experiments can break them, leading to both quantitative errors and mistakes of judgment.&lt;/p&gt;

&lt;p&gt;I firmly believe that A/B tests in any organization should be as free, easy, and cheap as humanly possible. After all, &lt;a href=&quot;/testing-to-cull-the-living-flower&quot;&gt;running A/B tests is perhaps the only way to know that you’re making the right changes&lt;/a&gt;. Disclosing experiments as they are running is a policy that can alleviate some discontent in the short term. But the price of this is making experiments harder to run in the long term, and ultimately making it less likely that measurement will be done at all.&lt;/p&gt;

&lt;p class=&quot;acknowledgements&quot;&gt;
Thanks to &lt;a href=&quot;http://twitter.com/nellwyn&quot;&gt;Nell Thomas&lt;/a&gt;, &lt;a href=&quot;http://twitter.com/stevemardenfeld&quot;&gt;Steve Mardenfeld&lt;/a&gt;, and &lt;a href=&quot;http://hilaryparker.com/&quot;&gt;Dr. Parker&lt;/a&gt; for their help on this.
&lt;/p&gt;

	</content>
    <author>
      <name>Dan McKinley</name>
      <uri>https://mcfunley.com/</uri>
    </author>
  </entry>
  
  <entry>
    <title type="html">Growth Hacker TV Interview</title>
    <link href="https://mcfunley.com/growth-hacker-tv-interview" rel="alternate" type="text/html" title="Growth Hacker TV Interview" />
    <published>2013-07-01T00:00:00+00:00</published>
    <updated>2013-07-01T00:00:00+00:00</updated>
    
    <id>urn:uuid:39551beb-2559-b828-c7fb-d1b3275391b8</id>
    <content type="html" xml:base="https://mcfunley.com/growth-hacker-tv-interview">
	  &lt;p&gt;&lt;a href=&quot;https://www.growthhacker.tv/?v=88&amp;amp;sp=cd76f0ddad7563229d12&quot;&gt;Here’s an interview&lt;/a&gt; I did with &lt;a href=&quot;http://growthhacker.tv/&quot;&gt;Growth Hacker TV&lt;/a&gt; last week. We covered many topics:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What exactly were you smoking when you made &lt;a href=&quot;http://www.experimentcalculator.com&quot;&gt;experimentcalculator.com&lt;/a&gt;?&lt;/li&gt;
  &lt;li&gt;How did Etsy get started running experiments?&lt;/li&gt;
  &lt;li&gt;Do you really hate bandit testing?&lt;/li&gt;
  &lt;li&gt;Do you really think performance never matters?&lt;/li&gt;
  &lt;li&gt;Do you really hate real time analytics?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.growthhacker.tv/?v=88&amp;amp;sp=cd76f0ddad7563229d12&quot;&gt;Check it out&lt;/a&gt;, for the answer to these and many other thrilling questions.&lt;/p&gt;

	</content>
    <author>
      <name>Dan McKinley</name>
      <uri>https://mcfunley.com/</uri>
    </author>
  </entry>
  
  <entry>
    <title type="html">Belated Network World Story</title>
    <link href="https://mcfunley.com/belated-network-world-story" rel="alternate" type="text/html" title="Belated Network World Story" />
    <published>2013-06-12T00:00:00+00:00</published>
    <updated>2013-06-12T00:00:00+00:00</updated>
    
    <id>urn:uuid:5c33b5c5-53ce-362c-b93b-8bff6ab9077f</id>
    <content type="html" xml:base="https://mcfunley.com/belated-network-world-story">
	  &lt;p&gt;It’s old news by now, but a few months back I was on the cover of Network World along with my colleagues &lt;a href=&quot;https://twitter.com/nellwyn&quot;&gt;Nellwyn&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/stevemardenfeld&quot;&gt;Steve&lt;/a&gt;, and &lt;a href=&quot;https://www.facebook.com/dottie.matrix&quot;&gt;Dottie&lt;/a&gt;.&lt;/p&gt;

&lt;figure&gt;
  &lt;a href=&quot;http://www.networkworld.com/cgi-bin/mailto/x.cgi?pagetosend=/news/2013/022513-etsy-big-data-266841.html&amp;amp;pagename=/news/2013/022513-etsy-big-data-266841.html&amp;amp;pageurl=http://www.networkworld.com/news/2013/022513-etsy-big-data-266841.html&amp;amp;site=printpage&amp;amp;nsdr=n&quot; alt=&quot;Network World / Etsy cover story&quot;&gt;&lt;img src=&quot;/assets/images/network-world.png&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;If you missed it when it came out, you can read the article &lt;a href=&quot;http://www.networkworld.com/cgi-bin/mailto/x.cgi?pagetosend=/news/2013/022513-etsy-big-data-266841.html&amp;amp;pagename=/news/2013/022513-etsy-big-data-266841.html&amp;amp;pageurl=http://www.networkworld.com/news/2013/022513-etsy-big-data-266841.html&amp;amp;site=printpage&amp;amp;nsdr=n&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

	</content>
    <author>
      <name>Dan McKinley</name>
      <uri>https://mcfunley.com/</uri>
    </author>
  </entry>
  

</feed>

