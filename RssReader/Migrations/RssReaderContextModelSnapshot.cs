// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RssReader.Models;

#nullable disable

namespace RssReader.Migrations
{
    [DbContext(typeof(RssReaderContext))]
    partial class RssReaderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("RssReader.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("title");

                    b.Property<string>("XmlUrl")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("xml_url");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "XmlUrl" }, "IX_blogs_xml_url")
                        .IsUnique();

                    b.ToTable("blogs", (string)null);
                });

            modelBuilder.Entity("RssReader.Models.Feed", b =>
                {
                    b.Property<int>("BlogId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("blog_id");

                    b.Property<string>("Etag")
                        .HasColumnType("TEXT")
                        .HasColumnName("etag");

                    b.Property<string>("Hash")
                        .HasColumnType("TEXT")
                        .HasColumnName("hash");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT")
                        .HasColumnName("last_modified");

                    b.HasKey("BlogId");

                    b.ToTable("feeds", (string)null);
                });

            modelBuilder.Entity("RssReader.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("BlogId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("blog_id");

                    b.Property<bool>("Favorite")
                        .HasColumnType("BOOL")
                        .HasColumnName("favorite");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("published_at");

                    b.Property<bool>("Read")
                        .HasColumnType("BOOL")
                        .HasColumnName("read");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("title");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("url");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex(new[] { "Url" }, "IX_posts_url")
                        .IsUnique();

                    b.ToTable("posts", (string)null);
                });

            modelBuilder.Entity("RssReader.Models.Feed", b =>
                {
                    b.HasOne("RssReader.Models.Blog", "Blog")
                        .WithOne("Feed")
                        .HasForeignKey("RssReader.Models.Feed", "BlogId")
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("RssReader.Models.Post", b =>
                {
                    b.HasOne("RssReader.Models.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("RssReader.Models.Blog", b =>
                {
                    b.Navigation("Feed");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
